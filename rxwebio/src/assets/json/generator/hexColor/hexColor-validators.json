{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-complete-validator',\r\n    templateUrl: './hex-color-complete.component.html'\r\n})\r\nexport class HexColorCompleteValidatorComponent implements OnInit {\r\n    hexcolorInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.hexcolorInfoFormGroup = this.formBuilder.group({\r\n            color:['', RxwebValidators.hexColor()], \r\n            footerHexCode:['', RxwebValidators.hexColor({conditionalExpression:(x,y) =>x.color == \"#AFAFAF\" })], \r\n            headerHexcolorCode:['', RxwebValidators.hexColor({conditionalExpression:'x => x.color == \"#AFAFAF\"' })], \r\n            bodyHexcolorCode:['', RxwebValidators.hexColor({message:'Please enter the right format of hexcode for body like \"#AFAFAF\"' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"hexcolorInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n      <input type=\"text\" formControlName=\"color\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Footer Hexcode' or 'Header Hexcode', then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.color.errors\">{{hexcolorInfoFormGroup.controls.color.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Footer Hexcode</label>\r\n      <input type=\"text\" formControlName=\"footerHexCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of hex color validation on 'Footer Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.footerHexCode.errors\">{{hexcolorInfoFormGroup.controls.footerHexCode.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Header Hexcode</label>\r\n      <input type=\"text\" formControlName=\"headerHexcolorCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.headerHexcolorCode.errors\">{{hexcolorInfoFormGroup.controls.headerHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Body Hexcode</label>\r\n      <input type=\"text\" formControlName=\"bodyHexcolorCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors\">{{hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.hexColor({conditionalExpression:(x,y) =>x.color == \"#AFAFAF\" });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-conditionalExpression-validator',\r\n    templateUrl: './hex-color-conditional-expression.component.html'\r\n})\r\nexport class HexColorConditionalExpressionValidatorComponent implements OnInit {\r\n    hexcolorInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.hexcolorInfoFormGroup = this.formBuilder.group({\r\n            color:['', RxwebValidators.hexColor()], \r\n            headerHexcolorCode:['', RxwebValidators.hexColor({conditionalExpression:'x => x.color == \"#AFAFAF\"' })], \r\n            footerHexCode:['', RxwebValidators.hexColor({conditionalExpression:(x,y) =>x.color == \"#AFAFAF\" })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"hexcolorInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n      <input type=\"text\" formControlName=\"color\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Footer Hexcode' or 'Header Hexcode', then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.color.errors\">{{hexcolorInfoFormGroup.controls.color.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Header Hexcode</label>\r\n      <input type=\"text\" formControlName=\"headerHexcolorCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.headerHexcolorCode.errors\">{{hexcolorInfoFormGroup.controls.headerHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Footer Hexcode</label>\r\n      <input type=\"text\" formControlName=\"footerHexCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of hex color validation on 'Footer Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.footerHexCode.errors\">{{hexcolorInfoFormGroup.controls.footerHexCode.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.hexColor({conditionalExpression:'x => x.color == \"#AFAFAF\"' });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.hexColor({message:'Please enter the right format of hexcode for body like \"#AFAFAF\"' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-message-validator',\r\n    templateUrl: './hex-color-message.component.html'\r\n})\r\nexport class HexColorMessageValidatorComponent implements OnInit {\r\n    hexcolorInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.hexcolorInfoFormGroup = this.formBuilder.group({\r\n            bodyHexcolorCode:['', RxwebValidators.hexColor({message:'Please enter the right format of hexcode for body like \"#AFAFAF\"' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"hexcolorInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Body Hexcode</label>\r\n      <input type=\"text\" formControlName=\"bodyHexcolorCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors\">{{hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-dynamic-validator',\r\n    templateUrl: './hex-color-dynamic.component.html'\r\n})\r\nexport class HexColorDynamicValidatorComponent implements OnInit {\r\n    hexcolorInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/hexColor/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar hexcolorInfo = { color:'', footerHexCode:'', headerHexcolorCode:'', bodyHexcolorCode:'',  }\r\n\t\t\tthis.hexcolorInfoFormGroup = this.formBuilder.group(hexcolorInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"hexcolorInfoFormGroup\"  [formGroup]=\"hexcolorInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n      <input type=\"text\" formControlName=\"color\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Footer Hexcode' or 'Header Hexcode', then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.color.errors\">{{hexcolorInfoFormGroup.controls.color.errors.hexColor.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Header Hexcode</label>\r\n      <input type=\"text\" formControlName=\"headerHexcolorCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.headerHexcolorCode.errors\">{{hexcolorInfoFormGroup.controls.headerHexcolorCode.errors.hexColor.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Body Hexcode</label>\r\n      <input type=\"text\" formControlName=\"bodyHexcolorCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors\">{{hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors.hexColor.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!hexcolorInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"color\":{\"hexColor\":true},\"headerHexcolorCode\":{\"hexColor\":{\"conditionalExpression\":\"x => x.color == \\\"#AFAFAF\\\"\"}},\"bodyHexcolorCode\":{\"hexColor\":{\"message\":\"Please enter the right format of hexcode for body like \\\"#AFAFAF\\\"\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-add-validator',\r\n    templateUrl: './hex-color-add.component.html'\r\n})\r\nexport class HexColorAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            color:['', RxwebValidators.hexColor()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n      <input type=\"text\" formControlName=\"color\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.color.errors\">{{userFormGroup.controls.color.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}