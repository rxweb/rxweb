{"rightSidebarLinks":[{"id":"hexcolor","title":"hexColor (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basichexcolorvalidation","title":"Basic HexColor Validation","subLink":[]},{"id":"hexcolorconfig","title":"HexColorConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completehexcolorexample","title":"Complete hexColor Example","subLink":[]},{"id":"dynamichexcolorexample","title":"Dynamic hexColor Example","subLink":[]},{"id":"githubissues","title":"hexColor Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"hexColor","description":" HexColor validation  validators  will allow user to enter only the input in proper Hex Color format.","validatorType":"validators","validationTypeTitle":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-hexColor-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"hexColor-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"hexColor-complete-html\"></div>\r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-hexColor-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"hexColor-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"hexColor-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"hexColor-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/hexColor/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a User form, which contains fields like ColorPicker, HeaderHexColorCode, BodyHexColorCode, StrictHexColorCode and you want the user to enter only the hex color format. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n    <li>Allow string which is a hex color format like in ColorPicker field.</li>\r\n    <li>Apply hexColor validation based on matched condition in the form, like if the ColorPicker is <span class='highlighted'>#AFAFAF</span>, then only the HeaderHexColorCode field will be validated to hexColor validator.</li>\r\n    <li>Adding Custom Message on BodyHexColorCode field.</li>\r\n    <li>Applying strict format of hexCode in StrictHexCode field.</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n    <li>Apply HexColor validation dynamically based on server rules.</li>\r\n    </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how hexColor  validator  fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basichexcolorvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic HexColor Validation<a title='Link to this heading' class='link-header' href='/form-validations/hexColor/validators#basichexcolorvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"hexColor-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"hexColor-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-hexColor-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'hexcolorconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >HexColorConfig<a title='Link to this heading' class='link-header' href='/form-validations/hexColor/validators#hexcolorconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.hexColor()</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  title=\"conditionalExpression\">conditionalExpression</a></td><td>HexColor validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/hexColor/validators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >HexColor validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"hexColor-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"hexColor-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-hexColor-conditionalExpression\" title=\"hexColor validator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/hexColor/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"hexColor-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-hexColor-message\" title=\"hexColor validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completehexcolorexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete hexColor Example<a title='Link to this heading' class='link-header' href='/form-validations/hexColor/validators#completehexcolorexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete hexColor example which includes all the HexColorConfig properties will fulfil the requirement of scenarios 1, 2, 3,4 and 5</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamichexcolorexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic hexColor Example<a title='Link to this heading' class='link-header' href='/form-validations/hexColor/validators#dynamichexcolorexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic hexColor example which execute based on json passed. conditional expression with function would be not apply in dynamic hexColor example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/hexColor/validators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}