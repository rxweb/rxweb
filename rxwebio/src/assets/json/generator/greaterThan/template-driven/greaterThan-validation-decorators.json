{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-complete-template-driven-validation-decorators',\r\n    templateUrl: './greater-than-complete.component.html'\r\n})\r\nexport class GreaterThanCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age</label>\r\n\t    <input type=\"text\" name=\"retiermentAge\" [(ngModel)]=\"user.retiermentAge\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than age<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.retiermentAge?.errors\">{{userForm.controls.retiermentAge?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n\t    <input type=\"text\" name=\"voterAge\" [(ngModel)]=\"user.voterAge\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.voterAge?.errors\">{{userForm.controls.voterAge?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age</label>\r\n\t    <input type=\"text\" name=\"otherAge\" [(ngModel)]=\"user.otherAge\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.otherAge?.errors\">{{userForm.controls.otherAge?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  greaterThan,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@greaterThan({fieldName:'age' }) \r\n\tretiermentAge: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  }) \r\n\tmemberAge: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' }) \r\n\tvoterAge: number;\r\n\r\n\t@greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' }) \r\n\totherAge: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@greaterThan({fieldName:'age' }) \r\nretiermentAge: number;\r\n","modelName":null,"jsonName":null,"json":null},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-fieldName-template-driven-validation-decorators',\r\n    templateUrl: './greater-than-field-name.component.html'\r\n})\r\nexport class GreaterThanFieldNameTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age</label>\r\n\t    <input type=\"text\" name=\"retiermentAge\" [(ngModel)]=\"user.retiermentAge\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than age<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.retiermentAge?.errors\">{{userForm.controls.retiermentAge?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  greaterThan,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@greaterThan({fieldName:'age' }) \r\n\tretiermentAge: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExampleFunction":{"notes":null,"component":null,"html":null,"model":"@greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  }) \r\nmemberAge: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  }) \r\nmemberAge: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './greater-than-conditional-expression.component.html'\r\n})\r\nexport class GreaterThanConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n\t    <input type=\"text\" name=\"voterAge\" [(ngModel)]=\"user.voterAge\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.voterAge?.errors\">{{userForm.controls.voterAge?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  greaterThan,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' }) \r\n\tvoterAge: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  }) \r\n\tmemberAge: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExampleString":{"notes":null,"component":null,"html":null,"model":"@greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' }) \r\nvoterAge: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' }) \r\nvoterAge: number;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' }) \r\notherAge: number;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-message-template-driven-validation-decorators',\r\n    templateUrl: './greater-than-message.component.html'\r\n})\r\nexport class GreaterThanMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Other Age</label>\r\n\t    <input type=\"text\" name=\"otherAge\" [(ngModel)]=\"user.otherAge\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.otherAge?.errors\">{{userForm.controls.otherAge?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  greaterThan, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' }) \r\n\totherAge: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-add-template-driven-validation-decorators',\r\n    templateUrl: './greater-than-add.component.html'\r\n})\r\nexport class GreaterThanAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n\t    <input type=\"text\" name=\"voterAge\" [(ngModel)]=\"user.voterAge\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This is checking greater than validation for  Voter Age must be greater than to age.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.voterAge?.errors\">{{userForm.controls.voterAge?.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  greaterThan,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@greaterThan({fieldName:'age' }) \r\n\tvoterAge: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null}}