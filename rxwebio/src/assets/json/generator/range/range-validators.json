{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-range-complete-validator',\r\n    templateUrl: './range-complete.component.html'\r\n})\r\nexport class RangeCompleteValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.range({minimumNumber:18  ,maximumNumber:60 })], \r\n            projectDuration:['', RxwebValidators.range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  })], \r\n            experience:['', RxwebValidators.range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' })], \r\n            salary:['', RxwebValidators.range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Project Duration</label>\r\n      <input type=\"text\" formControlName=\"projectDuration\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your Project Duration should be between 6 to 8 months.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.projectDuration.errors\">{{employeeInfoFormGroup.controls.projectDuration.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Employee Experience</label>\r\n      <input type=\"text\" formControlName=\"experience\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your minimum experience should be between 2 to 20.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.experience.errors\">{{employeeInfoFormGroup.controls.experience.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"minimumNumberExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:18  ,maximumNumber:60 });\r\n","modelName":null,"jsonName":null,"json":null},"minimumNumber":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-range-minimumNumber-validator',\r\n    templateUrl: './range-minimum-number.component.html'\r\n})\r\nexport class RangeMinimumNumberValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.range({minimumNumber:18  ,maximumNumber:60 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"maximumNumberExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:18  ,maximumNumber:60 });\r\n","modelName":null,"jsonName":null,"json":null},"maximumNumber":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-range-maximumNumber-validator',\r\n    templateUrl: './range-maximum-number.component.html'\r\n})\r\nexport class RangeMaximumNumberValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.range({minimumNumber:18  ,maximumNumber:60 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"minimumNumberExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  });\r\n","modelName":null,"jsonName":null,"json":null},"maximumNumberExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-range-conditionalExpression-validator',\r\n    templateUrl: './range-conditional-expression.component.html'\r\n})\r\nexport class RangeConditionalExpressionValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.range({minimumNumber:18  ,maximumNumber:60 })], \r\n            experience:['', RxwebValidators.range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' })], \r\n            projectDuration:['', RxwebValidators.range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Employee Experience</label>\r\n      <input type=\"text\" formControlName=\"experience\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your minimum experience should be between 2 to 20.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.experience.errors\">{{employeeInfoFormGroup.controls.experience.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Project Duration</label>\r\n      <input type=\"text\" formControlName=\"projectDuration\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your Project Duration should be between 6 to 8 months.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.projectDuration.errors\">{{employeeInfoFormGroup.controls.projectDuration.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"minimumNumberExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' });\r\n","modelName":null,"jsonName":null,"json":null},"maximumNumberExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-range-message-validator',\r\n    templateUrl: './range-message.component.html'\r\n})\r\nexport class RangeMessageValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            salary:['', RxwebValidators.range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-range-dynamic-validator',\r\n    templateUrl: './range-dynamic.component.html'\r\n})\r\nexport class RangeDynamicValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/range/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar employeeInfo = { age:'', projectDuration:'', experience:'', salary:'',  }\r\n\t\t\tthis.employeeInfoFormGroup = this.formBuilder.group(employeeInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"employeeInfoFormGroup\"  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Employee Experience</label>\r\n      <input type=\"text\" formControlName=\"experience\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your minimum experience should be between 2 to 20.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.experience.errors\">{{employeeInfoFormGroup.controls.experience.errors.range.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"age\":{\"range\":{\"minimumNumber\":\"18\",\"maximumNumber\":\"60\"}},\"experience\":{\"range\":{\"minimumNumber\":\"2\",\"maximumNumber\":\"20\",\"conditionalExpression\":\"x => x.age >=25\"}},\"salary\":{\"range\":{\"minimumNumber\":\"1000\",\"maximumNumber\":\"200000\",\"message\":\"Your Salary should be between 1000 to 200000.\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-range-add-validator',\r\n    templateUrl: './range-add.component.html'\r\n})\r\nexport class RangeAddValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.range({minimumNumber:18  ,maximumNumber:60 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Please enter Employee Age between 18 to 60<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}