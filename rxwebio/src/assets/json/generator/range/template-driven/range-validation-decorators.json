{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-complete-template-driven-validation-decorators',\r\n    templateUrl: './range-complete.component.html'\r\n})\r\nexport class RangeCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    employeeinfo: EmployeeInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.employeeinfo= new EmployeeInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #employeeinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"employeeinfo.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.age?.errors\">{{employeeinfoForm.controls.age?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Employee Experience</label>\r\n\t    <input type=\"text\" name=\"experience\" [(ngModel)]=\"employeeinfo.experience\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your minimum experience should be between 2 to 20.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.experience?.errors\">{{employeeinfoForm.controls.experience?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n\t    <input type=\"text\" name=\"salary\" [(ngModel)]=\"employeeinfo.salary\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.salary?.errors\">{{employeeinfoForm.controls.salary?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  range, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tprojectDuration: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' }) \r\n\texperience: number;\r\n\r\n\t@range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.' }) \r\n\tsalary: number;\r\n\r\n}\r\n","modelName":"employee-info.model.ts","jsonName":null,"json":null},"minimumNumberExample":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:18  ,maximumNumber:60 }) \r\nage: number;\r\n","modelName":null,"jsonName":null,"json":null},"minimumNumber":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-minimumNumber-template-driven-validation-decorators',\r\n    templateUrl: './range-minimum-number.component.html'\r\n})\r\nexport class RangeMinimumNumberTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    employeeinfo: EmployeeInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.employeeinfo= new EmployeeInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #employeeinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"employeeinfo.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.age?.errors\">{{employeeinfoForm.controls.age?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  range, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n}\r\n","modelName":"employee-info.model.ts","jsonName":null,"json":null},"maximumNumberExample":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:18  ,maximumNumber:60 }) \r\nage: number;\r\n","modelName":null,"jsonName":null,"json":null},"maximumNumber":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-maximumNumber-template-driven-validation-decorators',\r\n    templateUrl: './range-maximum-number.component.html'\r\n})\r\nexport class RangeMaximumNumberTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    employeeinfo: EmployeeInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.employeeinfo= new EmployeeInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #employeeinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"employeeinfo.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.age?.errors\">{{employeeinfoForm.controls.age?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  range, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n}\r\n","modelName":"employee-info.model.ts","jsonName":null,"json":null},"minimumNumberExampleFunction":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  }) \r\nprojectDuration: number;\r\n","modelName":null,"jsonName":null,"json":null},"maximumNumberExampleFunction":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  }) \r\nprojectDuration: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  }) \r\nprojectDuration: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './range-conditional-expression.component.html'\r\n})\r\nexport class RangeConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    employeeinfo: EmployeeInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.employeeinfo= new EmployeeInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #employeeinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"employeeinfo.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.age?.errors\">{{employeeinfoForm.controls.age?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Employee Experience</label>\r\n\t    <input type=\"text\" name=\"experience\" [(ngModel)]=\"employeeinfo.experience\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your minimum experience should be between 2 to 20.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.experience?.errors\">{{employeeinfoForm.controls.experience?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  range, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' }) \r\n\texperience: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tprojectDuration: number;\r\n\r\n}\r\n","modelName":"employee-info.model.ts","jsonName":null,"json":null},"minimumNumberExampleString":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' }) \r\nexperience: number;\r\n","modelName":null,"jsonName":null,"json":null},"maximumNumberExampleString":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' }) \r\nexperience: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' }) \r\nexperience: number;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.' }) \r\nsalary: number;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-message-template-driven-validation-decorators',\r\n    templateUrl: './range-message.component.html'\r\n})\r\nexport class RangeMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    employeeinfo: EmployeeInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.employeeinfo= new EmployeeInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #employeeinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n\t    <input type=\"text\" name=\"salary\" [(ngModel)]=\"employeeinfo.salary\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.salary?.errors\">{{employeeinfoForm.controls.salary?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  range, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.' }) \r\n\tsalary: number;\r\n\r\n}\r\n","modelName":"employee-info.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-add-template-driven-validation-decorators',\r\n    templateUrl: './range-add.component.html'\r\n})\r\nexport class RangeAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    employeeinfo: EmployeeInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.employeeinfo= new EmployeeInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #employeeinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"employeeinfo.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Please enter Employee Age between 18 to 60<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"employeeinfoForm.controls.age?.errors\">{{employeeinfoForm.controls.age?.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  range, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n}\r\n","modelName":"employee-info.model.ts","jsonName":null,"json":null}}