{"rightSidebarLinks":[{"id":"range","title":"range (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicrangevalidation","title":"Basic range Validation","subLink":[]},{"id":"rangeconfig","title":"RangeConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"},{"title":"minimumNumber","id":"minimumnumber"},{"title":"maximumNumber","id":"maximumnumber"}]},{"id":"completerangeexample","title":"Complete range Example","subLink":[]},{"id":"dynamicrangeexample","title":"Dynamic range Example","subLink":[]},{"id":"githubissues","title":"range Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"range","description":" Range validation  decorators  will check that the entered value is in the specified range.","validatorType":"decorators","validationTypeTitle":"Decorators","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"range-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-range-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-edit-component\"></div>\r\n<p class='showHideElement' >The below code is `employee-info-data.json` for getting data from the server </p>\r\n<div component=\"app-code\" key=\"range-edit-json\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"range-edit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-range-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-range-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-range-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"range-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/form-validations/range/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a employeeInfo form, which contains field of employeeAge, employeeExperience, salary and you want the user to enter value in a specified range. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n <li>Adding value which you want to restrict number in the property. The minimum number is 18 and maximum number is 60.</li> \r\n <li>Apply range validation based on matched condition in the form, like if the age is greater than ‘25’ then the employeeExperience value should be between 2 to 20.</li>\r\n <li>Adding Custom Message on Salary Field.</li>\r\n <data-scope scope=\"['decorator','validator']\">\r\n <li>Apply range validation dynamically based on server rules.</li>\r\n </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let’s see how range decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicrangevalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic range Validation<a title='Link to this heading' class='link-header'  href='/form-validations/range/decorators#basicrangevalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create employeeInfo model class define a property of employeeAge in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"range-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'rangeconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >RangeConfig<a title='Link to this heading' class='link-header'  href='/form-validations/range/decorators#rangeconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@range()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>range validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#minimumNumber\")' title=\"minimumnumber\">minimumNumber</a></td><td> Minimum number is for define a minimum number of range.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#maximumNumber\")' title=\"maximumNumber\">maximumNumber</a></td><td> Maximum number is for define a maximum number of range.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header'  href='/form-validations/range/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >Range validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"range-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"range-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-range-conditionalExpression\" title=\"range decorator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/form-validations/range/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"range-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-range-message\" title=\"range decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'minimumnumber'>\r\n<div class='col-lg-12'>\r\n<h2>minimumNumber<a title='Link to this heading' class='link-header'  href='/form-validations/range/decorators#minimumnumber'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Minimum number is for define a minimum number of range</p>\r\n<div component=\"app-code\" key=\"range-minimumNumberExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-range-minimumNumber\" title=\"range decorator with minimumNumber\" key=\"minimumNumber\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'maximumnumber'>\r\n<div class='col-lg-12'>\r\n<h2>maximumNumber<a title='Link to this heading' class='link-header'  href='/form-validations/range/decorators#maximumnumber'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Maximum number is for define a maximum number of range</p>\r\n<div component=\"app-code\" key=\"range-maximumNumberExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-range-maximumNumber\" title=\"range decorator with maximumNumber\" key=\"maximumNumber\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completerangeexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete range Example<a title='Link to this heading' class='link-header'  href='/form-validations/range/decorators#completerangeexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete range example which includes all the RangeConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicrangeexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic range Example<a title='Link to this heading' class='link-header' href='/form-validations/range/decorators#dynamicrangeexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic range example which execute based on json passed. conditional expression with function would be not apply in dynamic range example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/range/decorators#githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}