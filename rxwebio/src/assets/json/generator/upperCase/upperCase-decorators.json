{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-complete',\r\n    templateUrl: './upper-case-complete.component.html'\r\n})\r\nexport class UpperCaseCompleteComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' or 'City Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Name</label>\r\n      <input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.stateName.errors\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n      <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.cityName.errors\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  upperCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@upperCase({conditionalExpression:(x,y) => x.countryName == \"INDIA\"  }) \r\n\tstateName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@upperCase({conditionalExpression:'x => x.countryName == \"INDIA\"' }) \r\n\tcityName: string;\r\n\r\n\t//Shows custom message\r\n\t@upperCase({message:'You can enter only upperCase letters.' }) \r\n\tcolonyName: string;\r\n\r\n}\r\n","modelName":"location.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@upperCase({conditionalExpression:(x,y) => x.countryName == \"INDIA\"  }) \r\nstateName: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-conditionalExpression',\r\n    templateUrl: './upper-case-conditional-expression.component.html'\r\n})\r\nexport class UpperCaseConditionalExpressionComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' or 'City Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n      <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.cityName.errors\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Name</label>\r\n      <input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.stateName.errors\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  upperCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@upperCase({conditionalExpression:'x => x.countryName == \"INDIA\"' }) \r\n\tcityName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@upperCase({conditionalExpression:(x,y) => x.countryName == \"INDIA\"  }) \r\n\tstateName: string;\r\n\r\n}\r\n","modelName":"location.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@upperCase({conditionalExpression:'x => x.countryName == \"INDIA\"' }) \r\ncityName: string;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@upperCase({message:'You can enter only upperCase letters.' }) \r\ncolonyName: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-message',\r\n    templateUrl: './upper-case-message.component.html'\r\n})\r\nexport class UpperCaseMessageComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  upperCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t//Shows custom message\r\n\t@upperCase({message:'You can enter only upperCase letters.' }) \r\n\tcolonyName: string;\r\n\r\n}\r\n","modelName":"location.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-dynamic',\r\n    templateUrl: './upper-case-dynamic.component.html'\r\n})\r\nexport class UpperCaseDynamicComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/upperCase/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.locationFormGroup = this.formBuilder.formGroup(location,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"locationFormGroup\"  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' or 'City Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n      <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.cityName.errors\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.upperCase.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  upperCase,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@prop()\r\n\tcountryName: string;\r\n\r\n\t@prop()\r\n\tcityName: string;\r\n\r\n\t@prop()\r\n\tcolonyName: string;\r\n\r\n}\r\n","modelName":"location.model.ts","jsonName":"dynamic.json","json":"{\"countryName\":{\"upperCase\":true},\"cityName\":{\"upperCase\":{\"conditionalExpression\":\"x => x.countryName == \\\"INDIA\\\"\"}},\"colonyName\":{\"upperCase\":{\"message\":\"You can enter only upperCase letters.\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-add',\r\n    templateUrl: './upper-case-add.component.html'\r\n})\r\nexport class UpperCaseAddComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  upperCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\r\n}\r\n","modelName":"location.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-edit',\r\n    templateUrl: './upper-case-edit.component.html'\r\n})\r\nexport class UpperCaseEditComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/upperCase/edit/location-data.json').subscribe(location => {\r\n            this.locationFormGroup = this.formBuilder.formGroup<Location>(Location,location);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"locationFormGroup\"  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  upperCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\r\n}\r\n","modelName":"location.model.ts","jsonName":"location-data.json","json":"{\"countryName\":\"INDIA\"}"}}