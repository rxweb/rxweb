{"rightSidebarLinks":[{"id":"uppercase","title":"upperCase (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicuppercasevalidation","title":"Basic UpperCase Validation","subLink":[]},{"id":"messageconfig","title":"MessageConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completeuppercaseexample","title":"Complete upperCase Example","subLink":[]},{"id":"githubissues","title":"upperCase Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"upperCase","description":" UpperCase validation decorator will allow user to enter the alphabets only in the upperCase format.","validatorType":"template-driven","validationTypeTitle":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-upperCase-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"upperCase-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"upperCase-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"upperCase-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/upperCase/template-driven/directives#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a Location form, which contains fields like CountryName, StateName, CityName and you want the user to must enter string only in the Upper case. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n    <li>Apply upperCase validation in the CountryName without any condition.</li>\r\n    <li>Apply upperCase validation based on matched condition in the form, like if the CountryName is <span class='highlighted'>INDIA</span>, then only the upperCase validation will be applied to StateName field.</li>\r\n\t<li>Adding Custom Message on CityName Field.</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n\t<li>Apply upperCase validation dynamically based on server rules.</li>\r\n    </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how upperCase template driven fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicuppercasevalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic UpperCase Validation<a title='Link to this heading' class='link-header' href='/form-validations/upperCase/template-driven/directives#basicuppercasevalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a Location class and define a property of CountryName in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"upperCase-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"upperCase-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"upperCase-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-upperCase-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messageconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >MessageConfig<a title='Link to this heading' class='link-header' href='/form-validations/upperCase/template-driven/directives#messageconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>upperCase</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>upperCase validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/upperCase/template-driven/directives#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Uppercase validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"upperCase-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-upperCase-conditionalExpression\" title=\"upperCase template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/upperCase/template-driven/directives#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"upperCase-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-upperCase-message\" title=\"upperCase template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeuppercaseexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete upperCase Example<a title='Link to this heading' class='link-header' href='/form-validations/upperCase/template-driven/directives#completeuppercaseexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete upperCase example which includes all the MessageConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/upperCase/template-driven/directives#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}