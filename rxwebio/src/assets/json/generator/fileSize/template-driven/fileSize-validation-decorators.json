{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-complete-template-driven-validation-decorators',\r\n    templateUrl: './file-size-complete.component.html'\r\n})\r\nexport class FileSizeCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select name=\"fileType\" [(ngModel)]=\"userinfo.fileType\"  class=\"form-control\" >\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.fileType?.errors\">{{userinfoForm.controls.fileType?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n\t    <input type=\"file\" name=\"videoFile\"  [(ngModel)]=\"userinfo.videoFile\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.videoFile?.errors\">{{userinfoForm.controls.videoFile?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n\t    <input type=\"file\" name=\"audioFile\"  [(ngModel)]=\"userinfo.audioFile\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.audioFile?.errors\">{{userinfoForm.controls.audioFile?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Image File</label>\r\n\t    <input type=\"file\" name=\"imageFile\"  [(ngModel)]=\"userinfo.imageFile\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Image File' then you need to add 'File Type' input as 'Picture'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.imageFile?.errors\">{{userinfoForm.controls.imageFile?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n\t    <input type=\"file\" name=\"contactFile\"  [(ngModel)]=\"userinfo.contactFile\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.contactFile?.errors\">{{userinfoForm.controls.contactFile?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n\t    <input type=\"file\" name=\"profilePicture\"  [(ngModel)]=\"userinfo.profilePicture\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.profilePicture?.errors\">{{userinfoForm.controls.profilePicture?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@fileSize({maxSize:100 }) \r\n\tvideoFile: string;\r\n\r\n\t@fileSize({minSize:3  ,maxSize:100 }) \r\n\taudioFile: string;\r\n\r\n\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\timageFile: string;\r\n\r\n\t@fileSize({maxSize:10  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tdocumentFile: string;\r\n\r\n\t@fileSize({maxSize:10  ,message:'File exceed maximum size.' }) \r\n\tcontactFile: string;\r\n\r\n\t@fileSize({maxSize:50 }) \r\n\tprofilePicture: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxSizeExample":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:100 }) \r\nvideoFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxSize":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-maxSize-template-driven-validation-decorators',\r\n    templateUrl: './file-size-max-size.component.html'\r\n})\r\nexport class FileSizeMaxSizeTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n\t    <input type=\"file\" name=\"videoFile\"  [(ngModel)]=\"userinfo.videoFile\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.videoFile?.errors\">{{userinfoForm.controls.videoFile?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({maxSize:100 }) \r\n\tvideoFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"minSizeExample":{"notes":null,"component":null,"html":null,"model":"@fileSize({minSize:3  ,maxSize:100 }) \r\naudioFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"minSize":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-minSize-template-driven-validation-decorators',\r\n    templateUrl: './file-size-min-size.component.html'\r\n})\r\nexport class FileSizeMinSizeTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n\t    <input type=\"file\" name=\"audioFile\"  [(ngModel)]=\"userinfo.audioFile\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.audioFile?.errors\">{{userinfoForm.controls.audioFile?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({minSize:3  ,maxSize:100 }) \r\n\taudioFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxSizeExampleString":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:50  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\nimageFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:50  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\nimageFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxSizeExampleFunction":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:10  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\ndocumentFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:10  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\ndocumentFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './file-size-conditional-expression.component.html'\r\n})\r\nexport class FileSizeConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select name=\"fileType\" [(ngModel)]=\"userinfo.fileType\"  class=\"form-control\" >\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.fileType?.errors\">{{userinfoForm.controls.fileType?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Image File</label>\r\n\t    <input type=\"file\" name=\"imageFile\"  [(ngModel)]=\"userinfo.imageFile\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Image File' then you need to add 'File Type' input as 'Picture'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.imageFile?.errors\">{{userinfoForm.controls.imageFile?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\timageFile: string;\r\n\r\n\t@fileSize({maxSize:10  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tdocumentFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:10  ,message:'File exceed maximum size.' }) \r\ncontactFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-message-template-driven-validation-decorators',\r\n    templateUrl: './file-size-message.component.html'\r\n})\r\nexport class FileSizeMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n\t    <input type=\"file\" name=\"contactFile\"  [(ngModel)]=\"userinfo.contactFile\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.contactFile?.errors\">{{userinfoForm.controls.contactFile?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({maxSize:10  ,message:'File exceed maximum size.' }) \r\n\tcontactFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-add-template-driven-validation-decorators',\r\n    templateUrl: './file-size-add.component.html'\r\n})\r\nexport class FileSizeAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n\t    <input type=\"file\" name=\"profilePicture\"  [(ngModel)]=\"userinfo.profilePicture\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.profilePicture?.errors\">{{userinfoForm.controls.profilePicture?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({maxSize:10 }) \r\n\tprofilePicture: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null}}