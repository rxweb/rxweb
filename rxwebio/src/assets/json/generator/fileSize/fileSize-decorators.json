{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-complete',\r\n    templateUrl: './file-size-complete.component.html'\r\n})\r\nexport class FileSizeCompleteComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Image File</label>\r\n      <input type=\"file\" formControlName=\"imageFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Image File' then you need to add 'File Type' input as 'Picture'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.imageFile.errors\">{{userInfoFormGroup.controls.imageFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Document File</label>\r\n      <input type=\"file\" formControlName=\"documentFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document File' then you need to add 'File Type' input as 'Document'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.documentFile.errors\">{{userInfoFormGroup.controls.documentFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@fileSize({maxSize:100 }) \r\n\tvideoFile: string;\r\n\r\n\t@fileSize({minSize:3  ,maxSize:100 }) \r\n\taudioFile: string;\r\n\r\n\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\timageFile: string;\r\n\r\n\t@fileSize({maxSize:10  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tdocumentFile: string;\r\n\r\n\t@fileSize({maxSize:10  ,message:'File exceed maximum size.' }) \r\n\tcontactFile: string;\r\n\r\n\t@fileSize({maxSize:50 }) \r\n\tprofilePicture: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxSizeExample":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:100 }) \r\nvideoFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxSize":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-maxSize',\r\n    templateUrl: './file-size-max-size.component.html'\r\n})\r\nexport class FileSizeMaxSizeComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({maxSize:100 }) \r\n\tvideoFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"minSizeExample":{"notes":null,"component":null,"html":null,"model":"@fileSize({minSize:3  ,maxSize:100 }) \r\naudioFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"minSize":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-minSize',\r\n    templateUrl: './file-size-min-size.component.html'\r\n})\r\nexport class FileSizeMinSizeComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({minSize:3  ,maxSize:100 }) \r\n\taudioFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxSizeExampleString":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:50  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\nimageFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:50  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\nimageFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxSizeExampleFunction":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:10  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\ndocumentFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:10  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\ndocumentFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-conditionalExpression',\r\n    templateUrl: './file-size-conditional-expression.component.html'\r\n})\r\nexport class FileSizeConditionalExpressionComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Image File</label>\r\n      <input type=\"file\" formControlName=\"imageFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Image File' then you need to add 'File Type' input as 'Picture'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.imageFile.errors\">{{userInfoFormGroup.controls.imageFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Document File</label>\r\n      <input type=\"file\" formControlName=\"documentFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document File' then you need to add 'File Type' input as 'Document'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.documentFile.errors\">{{userInfoFormGroup.controls.documentFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\timageFile: string;\r\n\r\n\t@fileSize({maxSize:10  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tdocumentFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@fileSize({maxSize:10  ,message:'File exceed maximum size.' }) \r\ncontactFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-message',\r\n    templateUrl: './file-size-message.component.html'\r\n})\r\nexport class FileSizeMessageComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({maxSize:10  ,message:'File exceed maximum size.' }) \r\n\tcontactFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-dynamic',\r\n    templateUrl: './file-size-dynamic.component.html'\r\n})\r\nexport class FileSizeDynamicComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/fileSize/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.formGroup(userInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Image File</label>\r\n      <input type=\"file\" formControlName=\"imageFile\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Image File' then you need to add 'File Type' input as 'Picture'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.imageFile.errors\">{{userInfoFormGroup.controls.imageFile.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@prop()\r\n\tvideoFile: string;\r\n\r\n\t@prop()\r\n\taudioFile: string;\r\n\r\n\t@prop()\r\n\timageFile: string;\r\n\r\n\t@prop()\r\n\tcontactFile: string;\r\n\r\n\t@prop()\r\n\tprofilePicture: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":"dynamic.json","json":"{\"fileType\":{},\"videoFile\":{\"fileSize\":{\"maxSize\":\"100\"}},\"audioFile\":{\"fileSize\":{\"minSize\":\"3\",\"maxSize\":\"100\"}},\"imageFile\":{\"fileSize\":{\"maxSize\":\"50\",\"conditionalExpression\":\"x => x.fileType == \\\"Picture\\\"\"}},\"contactFile\":{\"fileSize\":{\"maxSize\":\"10\",\"message\":\"File exceed maximum size.\"}},\"profilePicture\":{\"fileSize\":{\"maxSize\":\"50\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-add',\r\n    templateUrl: './file-size-add.component.html'\r\n})\r\nexport class FileSizeAddComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({maxSize:10 }) \r\n\tprofilePicture: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-edit',\r\n    templateUrl: './file-size-edit.component.html'\r\n})\r\nexport class FileSizeEditComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/fileSize/edit/user-info-data.json').subscribe(userInfo => {\r\n            this.userInfoFormGroup = this.formBuilder.formGroup<UserInfo>(UserInfo,userInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSize({maxSize:10 }) \r\n\tprofilePicture: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":"user-info-data.json","json":"{\"profilePicture\":\"google.jpg\"}"}}