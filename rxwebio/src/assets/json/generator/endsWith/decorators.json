{"rightSidebarLinks":[{"id":"endswith","title":"endsWith (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicendswithvalidation","title":"Basic EndsWith Validation","subLink":[]},{"id":"defaultconfig","title":"DefaultConfig","subLink":[{"title":"value","id":"value"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completeendswithexample","title":"Complete endsWith Example","subLink":[]},{"id":"dynamicendswithexample","title":"Dynamic endsWith Example","subLink":[]},{"id":"githubissues","title":"endsWith Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"endsWith","description":" endsWith validation  decorators  allows user to enter the input which ends with particular value","validatorType":"decorators","validationTypeTitle":"Decorators","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"endsWith-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-endsWith-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-edit-component\"></div>\r\n<p class='showHideElement' >The below code is `user-data.json` for getting data from the server </p>\r\n<div component=\"app-code\" key=\"endsWith-edit-json\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"endsWith-edit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-endsWith-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-endsWith-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-endsWith-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"endsWith-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/form-validations/endsWith/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a user form, which endsWith fields like name, profession and taskId and you want the user to enter input which ends with a particular value. Here depending upon the requirement, these scenarios may arise..</p>\r\n<ol class='showHideElement'>\r\n  <li>Apply validation on name field in which you want the user to enter value which ends with ‘m’.</li>\r\n  <li>Apply endsWith validation based on matched condition in the form, like if the name is 'Adam', then the profession must ends with 'R' (Used as a string datatype).</li>\r\n  <li>Apply endsWith validation based on matched condition in the form, like if the name is 'Adam', then the taskId must ends with '1' (Used as a function).</li>\r\n  <data-scope scope=\"['decorator','validator']\">\r\n  <li>Apply endsWith validation dynamically based on server rules.</li>\r\n  </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let's see how endsWith  decorator  fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicendswithvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic EndsWith Validation<a title='Link to this heading' class='link-header'  href='/form-validations/endsWith/decorators#basicendswithvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a User model and define a property of name in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"endsWith-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'defaultconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >DefaultConfig<a title='Link to this heading' class='link-header'  href='/form-validations/endsWith/decorators#defaultconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@endsWith()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#value\")'   title=\"value\">value</a></td><td>This is substring value.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")'   title=\"conditionalExpression\">conditionalExpression</a></td><td>EndsWith validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")'  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value<a title='Link to this heading' class='link-header'  href='/form-validations/endsWith/decorators#value'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >This is substring value.</p>\r\n<div component=\"app-code\" key=\"endsWith-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-endsWith-value\" title=\"endsWith decorator with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header'  href='/form-validations/endsWith/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >EndsWith validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"endsWith-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"endsWith-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-endsWith-conditionalExpression\" title=\"endsWith decorator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/form-validations/endsWith/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"endsWith-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-endsWith-message\" title=\"endsWith decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeendswithexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete endsWith Example<a title='Link to this heading' class='link-header'  href='/form-validations/endsWith/decorators#completeendswithexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete endsWith example which includes all the DefaultConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicendswithexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic endsWith Example<a title='Link to this heading' class='link-header' href='/form-validations/endsWith/decorators#dynamicendswithexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic endsWith example which execute based on json passed. conditional expression with function would be not apply in dynamic endsWith example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/endsWith/decorators#githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}