{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-complete-template-driven-validation-directives',\r\n    templateUrl: './url-complete.component.html'\r\n})\r\nexport class UrlCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n\t    <input type=\"text\" name=\"adminWebsiteUrl\" [(ngModel)]=\"user.adminWebsiteUrl\"  class=\"form-control\" url/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.adminWebsiteUrl?.errors\">{{userForm.controls.adminWebsiteUrl?.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n\t    <input type=\"text\" name=\"customerWebsiteUrl\" [(ngModel)]=\"user.customerWebsiteUrl\"  class=\"form-control\" [url]=\"{'conditionalExpression':'x => x.adminWebsiteUrl == \\'https:\\/\\/google.co.in\\'' }\"/>\r\n\r\n      <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.customerWebsiteUrl?.errors\">{{userForm.controls.customerWebsiteUrl?.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n\t    <input type=\"text\" name=\"maintenanceWebSiteUrl\" [(ngModel)]=\"user.maintenanceWebSiteUrl\"  class=\"form-control\" [url]=\"{'message':'Maintenance Website Url Is not the correct url pattern.'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.maintenanceWebSiteUrl?.errors\">{{userForm.controls.maintenanceWebSiteUrl?.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tadminWebsiteUrl: string;\r\n\r\n\tqaWebsiteUrl: string;\r\n\r\n\tcustomerWebsiteUrl: string;\r\n\r\n\tmaintenanceWebSiteUrl: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[url]=\"{'conditionalExpression':(x,y) => x.adminWebsiteUrl == \\'https:\\/\\/google.co.in\\' }\"","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './url-conditional-expression.component.html'\r\n})\r\nexport class UrlConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n\t    <input type=\"text\" name=\"adminWebsiteUrl\" [(ngModel)]=\"user.adminWebsiteUrl\"  class=\"form-control\" url/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.adminWebsiteUrl?.errors\">{{userForm.controls.adminWebsiteUrl?.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n\t    <input type=\"text\" name=\"customerWebsiteUrl\" [(ngModel)]=\"user.customerWebsiteUrl\"  class=\"form-control\" [url]=\"{'conditionalExpression':'x => x.adminWebsiteUrl == \\'https:\\/\\/google.co.in\\'' }\"/>\r\n\r\n      <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.customerWebsiteUrl?.errors\">{{userForm.controls.customerWebsiteUrl?.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tadminWebsiteUrl: string;\r\n\r\n\tcustomerWebsiteUrl: string;\r\n\r\n\tqaWebsiteUrl: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[url]=\"{'conditionalExpression':'x => x.adminWebsiteUrl == \\'https:\\/\\/google.co.in\\'' }\"","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"[url]=\"{'message':'Maintenance Website Url Is not the correct url pattern.'}\"","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-message-template-driven-validation-directives',\r\n    templateUrl: './url-message.component.html'\r\n})\r\nexport class UrlMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n\t    <input type=\"text\" name=\"maintenanceWebSiteUrl\" [(ngModel)]=\"user.maintenanceWebSiteUrl\"  class=\"form-control\" [url]=\"{'message':'Maintenance Website Url Is not the correct url pattern.'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.maintenanceWebSiteUrl?.errors\">{{userForm.controls.maintenanceWebSiteUrl?.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tmaintenanceWebSiteUrl: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { WebSiteInfoModel } from './web-site-info-model.model';\r\n\r\n@Component({\r\n    selector: 'app-url-add-template-driven-validation-directives',\r\n    templateUrl: './url-add.component.html'\r\n})\r\nexport class UrlAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    websiteinfomodel: WebSiteInfoModel\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.websiteinfomodel= new WebSiteInfoModel()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #websiteinfomodelForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n\t    <input type=\"text\" name=\"adminWebsiteUrl\" [(ngModel)]=\"websiteinfomodel.adminWebsiteUrl\"  class=\"form-control\" url/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"websiteinfomodelForm.controls.adminWebsiteUrl?.errors\">{{websiteinfomodelForm.controls.adminWebsiteUrl?.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!websiteinfomodelForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class WebSiteInfoModel {\r\n\r\n\tadminWebsiteUrl: string;\r\n\r\n}\r\n","modelName":"web-site-info-model.model.ts","jsonName":null,"json":null}}