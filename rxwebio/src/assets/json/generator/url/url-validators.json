{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-complete-validator',\r\n    templateUrl: './url-complete.component.html'\r\n})\r\nexport class UrlCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            adminWebsiteUrl:['', RxwebValidators.url()], \r\n            qaWebsiteUrl:['', RxwebValidators.url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  })], \r\n            customerWebsiteUrl:['', RxwebValidators.url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  })], \r\n            maintenanceWebSiteUrl:['', RxwebValidators.url({message:'{{0}} Is not the correct url pattern.' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>QA Website Url</label>\r\n      <input type=\"text\" formControlName=\"qaWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.qaWebsiteUrl.errors\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n      <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-conditionalExpression-validator',\r\n    templateUrl: './url-conditional-expression.component.html'\r\n})\r\nexport class UrlConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            adminWebsiteUrl:['', RxwebValidators.url()], \r\n            customerWebsiteUrl:['', RxwebValidators.url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  })], \r\n            qaWebsiteUrl:['', RxwebValidators.url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n      <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>QA Website Url</label>\r\n      <input type=\"text\" formControlName=\"qaWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.qaWebsiteUrl.errors\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.url({message:'{{0}} Is not the correct url pattern.' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-message-validator',\r\n    templateUrl: './url-message.component.html'\r\n})\r\nexport class UrlMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            maintenanceWebSiteUrl:['', RxwebValidators.url({message:'{{0}} Is not the correct url pattern.' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-dynamic-validator',\r\n    templateUrl: './url-dynamic.component.html'\r\n})\r\nexport class UrlDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/url/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { adminWebsiteUrl:'', qaWebsiteUrl:'', customerWebsiteUrl:'', maintenanceWebSiteUrl:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n      <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"adminWebsiteUrl\":{\"url\":true},\"customerWebsiteUrl\":{\"url\":{\"conditionalExpression\":\"x => x.adminWebsiteUrl == \\\"https://google.co.in\\\" \"}},\"maintenanceWebSiteUrl\":{\"url\":{\"message\":\"{{0}} Is not the correct url pattern.\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-add-validator',\r\n    templateUrl: './url-add.component.html'\r\n})\r\nexport class UrlAddValidatorComponent implements OnInit {\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.webSiteInfoModelFormGroup = this.formBuilder.group({\r\n            adminWebsiteUrl:['', RxwebValidators.url()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"webSiteInfoModelFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}