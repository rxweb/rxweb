{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-complete',\r\n    templateUrl: './credit-card-complete.component.html'\r\n})\r\nexport class CreditCardCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type</label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Visa Card</label>\r\n      <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Visa Card</label>\r\n      <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>American Express</label>\r\n      <input type=\"text\" formControlName=\"americanExpressCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'American Express' then you need to add 'card type' input as 'AmericanExpress'.<br/></small>\r\n      <small class=\"form-text text-muted\">Message comes from Reactive Form Config<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.americanExpressCard.errors\">{{userFormGroup.controls.americanExpressCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maestro Card</label>\r\n      <input type=\"text\" formControlName=\"maestroCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MaestroCard Card' then you need to add 'card type' input as 'Maestro'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maestroCard.errors\">{{userFormGroup.controls.maestroCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>JCB Card</label>\r\n      <input type=\"text\" formControlName=\"jcbCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'JCB Card' then you need to add 'card type' input as 'JCB'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.jcbCard.errors\">{{userFormGroup.controls.jcbCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discover Card</label>\r\n      <input type=\"text\" formControlName=\"discoverCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Discover Card' then you need to add 'card type' input as 'Discover'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.discoverCard.errors\">{{userFormGroup.controls.discoverCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Master Card</label>\r\n      <input type=\"text\" formControlName=\"masterCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Master Card' then you need to add 'card type' input as 'MasterCard'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.masterCard.errors\">{{userFormGroup.controls.masterCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Diners Club Card</label>\r\n      <input type=\"text\" formControlName=\"dinersClubCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Diners Club Card' then you need to add 'card type' input as 'DinersClub'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.dinersClubCard.errors\">{{userFormGroup.controls.dinersClubCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  creditCard,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:(x,y) => x.cardType == \"Visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\n\tvisaCard: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\n\totherVisaCard: string;\r\n\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"AmericanExpress\"' }) \r\n\tamericanExpressCard: string;\r\n\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Maestro\"' }) \r\n\tmaestroCard: string;\r\n\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"JCB\"' }) \r\n\tjcbCard: string;\r\n\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Discover\"' }) \r\n\tdiscoverCard: string;\r\n\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"MasterCard\"' }) \r\n\tmasterCard: string;\r\n\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"DinersClub\"' }) \r\n\tdinersClubCard: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExampleFunction":{"notes":null,"component":null,"html":null,"model":"@creditCard({fieldName:'cardType'  ,conditionalExpression:(x,y) => x.cardType == \"Visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\nvisaCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"fieldName":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-fieldName',\r\n    templateUrl: './credit-card-field-name.component.html'\r\n})\r\nexport class CreditCardFieldNameComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type</label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Visa Card</label>\r\n      <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Visa Card</label>\r\n      <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  creditCard,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\n\totherVisaCard: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:(x,y) => x.cardType == \"Visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\n\tvisaCard: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@creditCard({fieldName:'cardType'  ,conditionalExpression:(x,y) => x.cardType == \"Visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\nvisaCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-conditionalExpression',\r\n    templateUrl: './credit-card-conditional-expression.component.html'\r\n})\r\nexport class CreditCardConditionalExpressionComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type</label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Visa Card</label>\r\n      <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Visa Card</label>\r\n      <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  creditCard,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\n\totherVisaCard: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:(x,y) => x.cardType == \"Visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\n\tvisaCard: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"messageExampleFunction":{"notes":null,"component":null,"html":null,"model":"@creditCard({fieldName:'cardType'  ,conditionalExpression:(x,y) => x.cardType == \"Visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\nvisaCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-message',\r\n    templateUrl: './credit-card-message.component.html'\r\n})\r\nexport class CreditCardMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Other Visa Card</label>\r\n      <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Visa Card</label>\r\n      <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  creditCard, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\n\totherVisaCard: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@creditCard({fieldName:'cardType'  ,conditionalExpression:(x,y) => x.cardType == \"Visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\n\tvisaCard: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExampleString":{"notes":null,"component":null,"html":null,"model":"@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\notherVisaCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\notherVisaCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"messageExampleString":{"notes":null,"component":null,"html":null,"model":"@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"Visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\notherVisaCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"AmericanExpress\"' }) \r\namericanExpressCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExample":{"notes":null,"component":null,"html":null,"model":"@creditCard({fieldName:'cardType'  ,conditionalExpression:'x => x.cardType == \"AmericanExpress\"' }) \r\namericanExpressCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-dynamic',\r\n    templateUrl: './credit-card-dynamic.component.html'\r\n})\r\nexport class CreditCardDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/creditCard/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type</label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Visa Card</label>\r\n      <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'Visa'.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>American Express</label>\r\n      <input type=\"text\" formControlName=\"americanExpressCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'American Express' then you need to add 'card type' input as 'AmericanExpress'.<br/></small>\r\n      <small class=\"form-text text-muted\">Message comes from Reactive Form Config<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.americanExpressCard.errors\">{{userFormGroup.controls.americanExpressCard.errors.creditCard.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maestro Card</label>\r\n      <input type=\"text\" formControlName=\"maestroCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MaestroCard Card' then you need to add 'card type' input as 'Maestro'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maestroCard.errors\">{{userFormGroup.controls.maestroCard.errors.creditCard.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>JCB Card</label>\r\n      <input type=\"text\" formControlName=\"jcbCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'JCB Card' then you need to add 'card type' input as 'JCB'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.jcbCard.errors\">{{userFormGroup.controls.jcbCard.errors.creditCard.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discover Card</label>\r\n      <input type=\"text\" formControlName=\"discoverCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Discover Card' then you need to add 'card type' input as 'Discover'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.discoverCard.errors\">{{userFormGroup.controls.discoverCard.errors.creditCard.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Master Card</label>\r\n      <input type=\"text\" formControlName=\"masterCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Master Card' then you need to add 'card type' input as 'MasterCard'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.masterCard.errors\">{{userFormGroup.controls.masterCard.errors.creditCard.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Diners Club Card</label>\r\n      <input type=\"text\" formControlName=\"dinersClubCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Diners Club Card' then you need to add 'card type' input as 'DinersClub'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.dinersClubCard.errors\">{{userFormGroup.controls.dinersClubCard.errors.creditCard.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  creditCard,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t@prop()\r\n\totherVisaCard: string;\r\n\r\n\t@prop()\r\n\tamericanExpressCard: string;\r\n\r\n\t@prop()\r\n\tmaestroCard: string;\r\n\r\n\t@prop()\r\n\tjcbCard: string;\r\n\r\n\t@prop()\r\n\tdiscoverCard: string;\r\n\r\n\t@prop()\r\n\tmasterCard: string;\r\n\r\n\t@prop()\r\n\tdinersClubCard: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"dynamic.json","json":"{\"cardType\":{},\"otherVisaCard\":{\"creditCard\":{\"fieldName\":\"cardType\",\"conditionalExpression\":\"x => x.cardType == \\\"Visa\\\"\",\"message\":\"Invalid Visa Credit Card Number.\"}},\"americanExpressCard\":{\"creditCard\":{\"fieldName\":\"cardType\",\"conditionalExpression\":\"x => x.cardType == \\\"AmericanExpress\\\"\"}},\"maestroCard\":{\"creditCard\":{\"fieldName\":\"cardType\",\"conditionalExpression\":\"x => x.cardType == \\\"Maestro\\\"\"}},\"jcbCard\":{\"creditCard\":{\"fieldName\":\"cardType\",\"conditionalExpression\":\"x => x.cardType == \\\"JCB\\\"\"}},\"discoverCard\":{\"creditCard\":{\"fieldName\":\"cardType\",\"conditionalExpression\":\"x => x.cardType == \\\"Discover\\\"\"}},\"masterCard\":{\"creditCard\":{\"fieldName\":\"cardType\",\"conditionalExpression\":\"x => x.cardType == \\\"MasterCard\\\"\"}},\"dinersClubCard\":{\"creditCard\":{\"fieldName\":\"cardType\",\"conditionalExpression\":\"x => x.cardType == \\\"DinersClub\\\"\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-add',\r\n    templateUrl: './credit-card-add.component.html'\r\n})\r\nexport class CreditCardAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type</label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Credit Card No.</label>\r\n      <input type=\"text\" formControlName=\"creditCardNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter Selected Card's Card No<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.creditCardNumber.errors\">{{userFormGroup.controls.creditCardNumber.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  creditCard,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t@creditCard({fieldName:'cardType' }) \r\n\tcreditCardNumber: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-edit',\r\n    templateUrl: './credit-card-edit.component.html'\r\n})\r\nexport class CreditCardEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/creditCard/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type</label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Credit Card No.</label>\r\n      <input type=\"text\" formControlName=\"creditCardNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter Visa Card No<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.creditCardNumber.errors\">{{userFormGroup.controls.creditCardNumber.errors.creditCard.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  creditCard,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t@creditCard({fieldName:'cardType' }) \r\n\tcreditCardNumber: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"user-data.json","json":"{\"cardType\":\"Visa\",\"creditCardNumber\":\"4111111111111111\"}"}}