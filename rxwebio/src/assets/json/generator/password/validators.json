{"rightSidebarLinks":[{"id":"password","title":"password (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicpasswordvalidation","title":"Basic password Validation","subLink":[]},{"id":"passwordconfig","title":"PasswordConfig","subLink":[{"title":"message","id":"message"},{"title":"validation","id":"validation"}]},{"id":"completepasswordexample","title":"Complete password Example","subLink":[]},{"id":"dynamicpasswordexample","title":"Dynamic password Example","subLink":[]},{"id":"githubissues","title":"password Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"password","description":" Password validation  validators  will allow user to enter only the input according to correct password validation format.","validatorType":"validators","validationTypeTitle":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-password-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-password-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/password/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a login form, which contains fields like newPassword and oldPassword and you want the user to enter valid Password pattern. Here depending upon the requirement these scenarios may arise.\t</p>\r\n<ol class='showHideElement'>\r\n   <li>Adding validation on oldPassword Field and adding  Custom Message on it.</li>\r\n   <li>Apply validation in newPassword validation there is validators on digit, alphabets, contains, lowerCase, upperCase, specialCharacter, minLength, maxLength.</li>\r\n   <data-scope scope=\"['decorator','validator']\">\r\n   <li>Apply password validation dynamically based on server rules.</li>\r\n   </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how password validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicpasswordvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic password Validation<a title='Link to this heading' class='link-header' href='/form-validations/password/validators#basicpasswordvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"password-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"password-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-password-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'passwordconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >PasswordConfig<a title='Link to this heading' class='link-header' href='/form-validations/password/validators#passwordconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.password()</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a href=\"#validation\" (click)='scrollTo(\"#validation\")'  title=\"validation\">validation</a></td><td> Validation is used for setting the parameters for password validation, In Password validation there is validations on digit, alphabets, contains, lowerCase, upperCase, specialCharacter, minLength, maxLength.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/password/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"password-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-password-message\" title=\"password validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'validation'>\r\n<div class='col-lg-12'>\r\n<h2>validation<a title='Link to this heading' class='link-header' href='/form-validations/password/validators#validation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>PasswordValidation</span></p>\r\n<p class='showHideElement' >Password Validation is used for setting the parameters for password validation, In Password validation there is validation on digit, alphabets, contains, lowerCase, upperCase, specialCharacter, minLength, maxLength.</p>\r\n<div component=\"app-code\" key=\"password-validationExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-password-validation\" title=\"password validator with validation\" key=\"validation\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completepasswordexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete password Example<a title='Link to this heading' class='link-header' href='/form-validations/password/validators#completepasswordexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete password example which includes all the PasswordConfig properties will fulfil the requirement of scenarios 1 and 2.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicpasswordexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic password Example<a title='Link to this heading' class='link-header' href='/form-validations/password/validators#dynamicpasswordexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic password example which execute based on json passed. conditional expression with function would be not apply in dynamic password example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/password/validators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}