{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-complete-template-driven-validation-decorators',\r\n    templateUrl: './password-complete.component.html'\r\n})\r\nexport class PasswordCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    logininfo: LoginInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.logininfo= new LoginInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #logininfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n\t    <input type=\"text\" name=\"newPassword\" [(ngModel)]=\"logininfo.newPassword\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"logininfoForm.controls.newPassword?.errors\">{{logininfoForm.controls.newPassword?.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Old Password</label>\r\n\t    <input type=\"text\" name=\"oldPassword\" [(ngModel)]=\"logininfo.oldPassword\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"logininfoForm.controls.oldPassword?.errors\">{{logininfoForm.controls.oldPassword?.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!logininfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tnewPassword: string;\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\n\toldPassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":null,"json":null},"validationExample":{"notes":null,"component":null,"html":null,"model":"@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\nnewPassword: string;\r\n","modelName":null,"jsonName":null,"json":null},"validation":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-validation-template-driven-validation-decorators',\r\n    templateUrl: './password-validation.component.html'\r\n})\r\nexport class PasswordValidationTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    logininfo: LoginInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.logininfo= new LoginInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #logininfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n\t    <input type=\"text\" name=\"newPassword\" [(ngModel)]=\"logininfo.newPassword\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"logininfoForm.controls.newPassword?.errors\">{{logininfoForm.controls.newPassword?.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!logininfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tnewPassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\noldPassword: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-message-template-driven-validation-decorators',\r\n    templateUrl: './password-message.component.html'\r\n})\r\nexport class PasswordMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    logininfo: LoginInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.logininfo= new LoginInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #logininfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Old Password</label>\r\n\t    <input type=\"text\" name=\"oldPassword\" [(ngModel)]=\"logininfo.oldPassword\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"logininfoForm.controls.oldPassword?.errors\">{{logininfoForm.controls.oldPassword?.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!logininfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\n\toldPassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-add-template-driven-validation-decorators',\r\n    templateUrl: './password-add.component.html'\r\n})\r\nexport class PasswordAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    logininfo: LoginInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.logininfo= new LoginInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #logininfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n\t    <input type=\"text\" name=\"password\" [(ngModel)]=\"logininfo.password\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"logininfoForm.controls.password?.errors\">{{logininfoForm.controls.password?.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!logininfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tpassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":null,"json":null}}