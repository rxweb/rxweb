{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-complete-validator',\r\n    templateUrl: './password-complete.component.html'\r\n})\r\nexport class PasswordCompleteValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.loginInfoFormGroup = this.formBuilder.group({\r\n            newPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} })], \r\n            oldPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n      <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Old Password</label>\r\n      <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"validationExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} });\r\n","modelName":null,"jsonName":null,"json":null},"validation":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-validation-validator',\r\n    templateUrl: './password-validation.component.html'\r\n})\r\nexport class PasswordValidationValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.loginInfoFormGroup = this.formBuilder.group({\r\n            newPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n      <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-message-validator',\r\n    templateUrl: './password-message.component.html'\r\n})\r\nexport class PasswordMessageValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.loginInfoFormGroup = this.formBuilder.group({\r\n            oldPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Old Password</label>\r\n      <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-dynamic-validator',\r\n    templateUrl: './password-dynamic.component.html'\r\n})\r\nexport class PasswordDynamicValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/password/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar loginInfo = { newPassword:'', oldPassword:'',  }\r\n\t\t\tthis.loginInfoFormGroup = this.formBuilder.group(loginInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"loginInfoFormGroup\"  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n      <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Old Password</label>\r\n      <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"newPassword\":{\"password\":{\"validation\":\"{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}\"}},\"oldPassword\":{\"password\":{\"validation\":\"{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}\",\"message\":\"Password is not valid\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-add-validator',\r\n    templateUrl: './password-add.component.html'\r\n})\r\nexport class PasswordAddValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.loginInfoFormGroup = this.formBuilder.group({\r\n            password:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.password.errors\">{{loginInfoFormGroup.controls.password.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}