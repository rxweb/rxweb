{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-complete',\r\n    templateUrl: './password-complete.component.html'\r\n})\r\nexport class PasswordCompleteComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        this.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n      <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Old Password</label>\r\n      <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tnewPassword: string;\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\n\toldPassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":null,"json":null},"validationExample":{"notes":null,"component":null,"html":null,"model":"@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\nnewPassword: string;\r\n","modelName":null,"jsonName":null,"json":null},"validation":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-validation',\r\n    templateUrl: './password-validation.component.html'\r\n})\r\nexport class PasswordValidationComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        this.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n      <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tnewPassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\noldPassword: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-message',\r\n    templateUrl: './password-message.component.html'\r\n})\r\nexport class PasswordMessageComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        this.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Old Password</label>\r\n      <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\n\toldPassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-dynamic',\r\n    templateUrl: './password-dynamic.component.html'\r\n})\r\nexport class PasswordDynamicComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/password/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"loginInfoFormGroup\"  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n      <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Old Password</label>\r\n      <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@prop()\r\n\tnewPassword: string;\r\n\r\n\t@prop()\r\n\toldPassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":"dynamic.json","json":"{\"newPassword\":{\"password\":{\"validation\":\"{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}\"}},\"oldPassword\":{\"password\":{\"validation\":\"{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}\",\"message\":\"Password is not valid\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-add',\r\n    templateUrl: './password-add.component.html'\r\n})\r\nexport class PasswordAddComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        this.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.password.errors\">{{loginInfoFormGroup.controls.password.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tpassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-edit',\r\n    templateUrl: './password-edit.component.html'\r\n})\r\nexport class PasswordEditComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/password/edit/login-info-data.json').subscribe(loginInfo => {\r\n            this.loginInfoFormGroup = this.formBuilder.formGroup<LoginInfo>(LoginInfo,loginInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"loginInfoFormGroup\"  [formGroup]=\"loginInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.password.errors\">{{loginInfoFormGroup.controls.password.errors.password.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  password, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tpassword: string;\r\n\r\n}\r\n","modelName":"login-info.model.ts","jsonName":"login-info-data.json","json":"{\"password\":\"Admin@123\"}"}}