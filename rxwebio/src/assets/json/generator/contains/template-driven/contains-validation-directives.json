{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-contains-complete-template-driven-validation-directives',\r\n    templateUrl: './contains-complete.component.html'\r\n})\r\nexport class ContainsCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n\t    <input type=\"text\" name=\"emailAddress\" [(ngModel)]=\"user.emailAddress\"  class=\"form-control\" [contains]=\"{'value':'@gmail.com'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input as 'abc@gmail.com'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.emailAddress?.errors\">{{userForm.controls.emailAddress?.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Recovery Email Address</label>\r\n\t    <input type=\"text\" name=\"recoveryEmailAddress\" [(ngModel)]=\"user.recoveryEmailAddress\"  class=\"form-control\" [contains]=\"{'value':'@gmail.com','conditionalExpression':'x => x.emailAddress == \\'abc@gmail.com\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' then you need to add 'Email Address' input as 'abc@gmail.com'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.recoveryEmailAddress?.errors\">{{userForm.controls.recoveryEmailAddress?.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n\t    <input type=\"text\" name=\"otherEmailAddress\" [(ngModel)]=\"user.otherEmailAddress\"  class=\"form-control\" [contains]=\"{'value':'@gmail.com','message':'Please enter valid gmailId'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.otherEmailAddress?.errors\">{{userForm.controls.otherEmailAddress?.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\temailAddress: string;\r\n\r\n\tbusinessEmailAddress: string;\r\n\r\n\trecoveryEmailAddress: string;\r\n\r\n\totherEmailAddress: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"valueExample":{"notes":null,"component":null,"html":null,"model":"[contains]=\"{'value':'@gmail.com'}\"","modelName":null,"jsonName":null,"json":null},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-contains-value-template-driven-validation-directives',\r\n    templateUrl: './contains-value.component.html'\r\n})\r\nexport class ContainsValueTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n\t    <input type=\"text\" name=\"emailAddress\" [(ngModel)]=\"user.emailAddress\"  class=\"form-control\" [contains]=\"{'value':'@gmail.com'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input as 'abc@gmail.com'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.emailAddress?.errors\">{{userForm.controls.emailAddress?.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\temailAddress: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"valueExampleFunction":{"notes":null,"component":null,"html":null,"model":"[contains]=\"{'value':'@gmail.com','conditionalExpression':(x,y) => x.emailAddress == \\'abc@gmail.com\\'}\"","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[contains]=\"{'value':'@gmail.com','conditionalExpression':(x,y) => x.emailAddress == \\'abc@gmail.com\\'}\"","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-contains-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './contains-conditional-expression.component.html'\r\n})\r\nexport class ContainsConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n\t    <input type=\"text\" name=\"emailAddress\" [(ngModel)]=\"user.emailAddress\"  class=\"form-control\" [contains]=\"{'value':'@gmail.com'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input as 'abc@gmail.com'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.emailAddress?.errors\">{{userForm.controls.emailAddress?.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Recovery Email Address</label>\r\n\t    <input type=\"text\" name=\"recoveryEmailAddress\" [(ngModel)]=\"user.recoveryEmailAddress\"  class=\"form-control\" [contains]=\"{'value':'@gmail.com','conditionalExpression':'x => x.emailAddress == \\'abc@gmail.com\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' then you need to add 'Email Address' input as 'abc@gmail.com'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.recoveryEmailAddress?.errors\">{{userForm.controls.recoveryEmailAddress?.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\temailAddress: string;\r\n\r\n\trecoveryEmailAddress: string;\r\n\r\n\tbusinessEmailAddress: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"valueExampleString":{"notes":null,"component":null,"html":null,"model":"[contains]=\"{'value':'@gmail.com','conditionalExpression':'x => x.emailAddress == \\'abc@gmail.com\\''}\"","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[contains]=\"{'value':'@gmail.com','conditionalExpression':'x => x.emailAddress == \\'abc@gmail.com\\''}\"","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"[contains]=\"{'value':'@gmail.com','message':'Please enter valid gmailId'}\"","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-contains-message-template-driven-validation-directives',\r\n    templateUrl: './contains-message.component.html'\r\n})\r\nexport class ContainsMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n\t    <input type=\"text\" name=\"otherEmailAddress\" [(ngModel)]=\"user.otherEmailAddress\"  class=\"form-control\" [contains]=\"{'value':'@gmail.com','message':'Please enter valid gmailId'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.otherEmailAddress?.errors\">{{userForm.controls.otherEmailAddress?.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\totherEmailAddress: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-contains-add-template-driven-validation-directives',\r\n    templateUrl: './contains-add.component.html'\r\n})\r\nexport class ContainsAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n\t    <input type=\"text\" name=\"emailAddress\" [(ngModel)]=\"user.emailAddress\"  class=\"form-control\" [contains]=\"{'value':'@gmail.com'}\"/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.emailAddress?.errors\">{{userForm.controls.emailAddress?.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\temailAddress: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null}}