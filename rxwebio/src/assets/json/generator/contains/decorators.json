{"rightSidebarLinks":[{"id":"contains","title":"contains (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiccontainsvalidation","title":"Basic Contains Validation","subLink":[]},{"id":"containsconfig","title":"ContainsConfig","subLink":[{"title":"value","id":"value"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completecontainsexample","title":"Complete Contains Example","subLink":[]},{"id":"dynamiccontainsexample","title":"Dynamic Contains Example","subLink":[]},{"id":"githubissues","title":"contains Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"contains","description":" Contains validation  decorators  will check that value is in the input, It will not allow to enter input that not contains the predefined value.","validatorType":"decorators","validationTypeTitle":"Decorators","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"contains-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-edit-component\"></div>\r\n<p class='showHideElement' >The below code is `user-data.json` for getting data from the server </p>\r\n<div component=\"app-code\" key=\"contains-edit-json\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"contains-edit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-contains-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-complete-html\"></div>\r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-contains-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-dynamic-html\"></div>\r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/form-validations/contains/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a User form, which contains fields like EmailAddress, RecoveryEmailAddress, OtherEmailAddress and you want the user to enter the input which contains the predefined value. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n\t<li>Allow input which contains the predefined value in EmailAddress.</li>\r\n\t<li>Apply contains validation based on matched condition in the form, like if the EmailAddress is <span class='highlighted'>abc@gmail.com</span>, then only the contains validation must be applied to RecoveryEmailAddress value.</li>\r\n\t<li>Adding Custom Message on OtherEmailAddress Field.</li>\r\n\t<data-scope scope=\"['decorator','validator']\">\r\n\t<li>Apply contains validation dynamically based on server rules.</li>\r\n\t</data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how contains decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basiccontainsvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Contains Validation<a title='Link to this heading' class='link-header'  href='/form-validations/contains/decorators#basiccontainsvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a User class and define a property of EmailAddress in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"contains-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'containsconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >ContainsConfig<a title='Link to this heading' class='link-header'  href='/form-validations/contains/decorators#containsconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@contains()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#value\")' title=\"value\">value</a></td><td>This is substring value.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Contains validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a   (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value<a title='Link to this heading' class='link-header'  href='/form-validations/contains/decorators#value'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >This is substring value.</p>\r\n<div component=\"app-code\" key=\"contains-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-value\" title=\"contains decorator with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header'  href='/form-validations/contains/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Contains validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"contains-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"contains-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-conditionalExpression\" title=\"contains decorator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/form-validations/contains/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"contains-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-message\" title=\"contains decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completecontainsexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Contains Example<a title='Link to this heading' class='link-header'  href='/form-validations/contains/decorators#completecontainsexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete Contains example which includes all the ContainsConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamiccontainsexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic Contains Example<a title='Link to this heading' class='link-header' href='/form-validations/contains/decorators#dynamiccontainsexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic Contains example which execute based on json passed. conditional expression with function would be not apply in dynamic Contains example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/contains/decorators#githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}