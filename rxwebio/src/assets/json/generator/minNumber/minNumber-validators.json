{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-complete-validator',\r\n    templateUrl: './min-number-complete.component.html'\r\n})\r\nexport class MinNumberCompleteValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            maths:['', RxwebValidators.minNumber({value:35 })], \r\n            science:['', RxwebValidators.minNumber({value:35  ,message:'Number should not be less than 35' })], \r\n            english:['', RxwebValidators.minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  })], \r\n            statstics:['', RxwebValidators.minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>English</label>\r\n      <input type=\"text\" formControlName=\"english\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.english.errors\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Statstics</label>\r\n      <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumber({value:35 });\r\n","modelName":null,"jsonName":null,"json":null},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-value-validator',\r\n    templateUrl: './min-number-value.component.html'\r\n})\r\nexport class MinNumberValueValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            maths:['', RxwebValidators.minNumber({value:35 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumber({value:35  ,message:'Number should not be less than 35' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-message-validator',\r\n    templateUrl: './min-number-message.component.html'\r\n})\r\nexport class MinNumberMessageValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            science:['', RxwebValidators.minNumber({value:35  ,message:'Number should not be less than 35' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-conditionalExpression-validator',\r\n    templateUrl: './min-number-conditional-expression.component.html'\r\n})\r\nexport class MinNumberConditionalExpressionValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            maths:['', RxwebValidators.minNumber({value:35 })], \r\n            statstics:['', RxwebValidators.minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' })], \r\n            english:['', RxwebValidators.minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Statstics</label>\r\n      <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>English</label>\r\n      <input type=\"text\" formControlName=\"english\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.english.errors\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' });\r\n","modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-dynamic-validator',\r\n    templateUrl: './min-number-dynamic.component.html'\r\n})\r\nexport class MinNumberDynamicValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/minNumber/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar resultInfo = { maths:'', science:'', english:'', statstics:'',  }\r\n\t\t\tthis.resultInfoFormGroup = this.formBuilder.group(resultInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"resultInfoFormGroup\"  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Statstics</label>\r\n      <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"maths\":{\"minNumber\":{\"value\":\"35\"}},\"science\":{\"minNumber\":{\"value\":\"35\",\"message\":\"Number should not be less than 35\"}},\"statstics\":{\"minNumber\":{\"value\":\"35\",\"conditionalExpression\":\"x => x.maths == 50\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-add-validator',\r\n    templateUrl: './min-number-add.component.html'\r\n})\r\nexport class MinNumberAddValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            maths:['', RxwebValidators.minNumber({value:35 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}