{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-complete',\r\n    templateUrl: './min-number-complete.component.html'\r\n})\r\nexport class MinNumberCompleteComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>English</label>\r\n      <input type=\"text\" formControlName=\"english\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.english.errors\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Statstics</label>\r\n      <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minNumber, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n\t@minNumber({value:35  ,message:'Number should not be less than 35' }) \r\n\tscience: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  }) \r\n\tenglish: number;\r\n\r\n\t@minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' }) \r\n\tstatstics: number;\r\n\r\n}\r\n","modelName":"result-info.model.ts","jsonName":null,"json":null},"valueExample":{"notes":null,"component":null,"html":null,"model":"@minNumber({value:35 }) \r\nmaths: number;\r\n","modelName":null,"jsonName":null,"json":null},"value":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-value',\r\n    templateUrl: './min-number-value.component.html'\r\n})\r\nexport class MinNumberValueComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minNumber, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n}\r\n","modelName":"result-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@minNumber({value:35  ,message:'Number should not be less than 35' }) \r\nscience: number;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-message',\r\n    templateUrl: './min-number-message.component.html'\r\n})\r\nexport class MinNumberMessageComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minNumber, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35  ,message:'Number should not be less than 35' }) \r\n\tscience: number;\r\n\r\n}\r\n","modelName":"result-info.model.ts","jsonName":null,"json":null},"valueExampleFunction":{"notes":null,"component":null,"html":null,"model":"@minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  }) \r\nenglish: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  }) \r\nenglish: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-conditionalExpression',\r\n    templateUrl: './min-number-conditional-expression.component.html'\r\n})\r\nexport class MinNumberConditionalExpressionComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Statstics</label>\r\n      <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>English</label>\r\n      <input type=\"text\" formControlName=\"english\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.english.errors\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minNumber, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n\t@minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' }) \r\n\tstatstics: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  }) \r\n\tenglish: number;\r\n\r\n}\r\n","modelName":"result-info.model.ts","jsonName":null,"json":null},"valueExampleString":{"notes":null,"component":null,"html":null,"model":"@minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' }) \r\nstatstics: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' }) \r\nstatstics: number;\r\n","modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-dynamic',\r\n    templateUrl: './min-number-dynamic.component.html'\r\n})\r\nexport class MinNumberDynamicComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/minNumber/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"resultInfoFormGroup\"  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Statstics</label>\r\n      <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@prop()\r\n\tmaths: number;\r\n\r\n\t@prop()\r\n\tscience: number;\r\n\r\n\t@prop()\r\n\tstatstics: number;\r\n\r\n}\r\n","modelName":"result-info.model.ts","jsonName":"dynamic.json","json":"{\"maths\":{\"minNumber\":{\"value\":\"35\"}},\"science\":{\"minNumber\":{\"value\":\"35\",\"message\":\"Number should not be less than 35\"}},\"statstics\":{\"minNumber\":{\"value\":\"35\",\"conditionalExpression\":\"x => x.maths == 50\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-add',\r\n    templateUrl: './min-number-add.component.html'\r\n})\r\nexport class MinNumberAddComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minNumber, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n}\r\n","modelName":"result-info.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-edit',\r\n    templateUrl: './min-number-edit.component.html'\r\n})\r\nexport class MinNumberEditComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/minNumber/edit/result-info-data.json').subscribe(resultInfo => {\r\n            this.resultInfoFormGroup = this.formBuilder.formGroup<ResultInfo>(ResultInfo,resultInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"resultInfoFormGroup\"  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minNumber, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n}\r\n","modelName":"result-info.model.ts","jsonName":"result-info-data.json","json":"{\"maths\":\"50\"}"}}