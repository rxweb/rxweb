{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-complete-validator',\r\n    templateUrl: './port-complete.component.html'\r\n})\r\nexport class PortCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            browser:['',], \r\n            entertainmentWebsitePort:['', RxwebValidators.port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  })], \r\n            shoppingWebsitePort:['', RxwebValidators.port({conditionalExpression:'x => x.browser ==\"Chrome\"' })], \r\n            educationalWebsitePort:['', RxwebValidators.port({message:'{{0}} is not a proper port number' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Browser</label>\r\n      <input type=\"text\" formControlName=\"browser\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entertainment Website Port</label>\r\n      <input type=\"text\" formControlName=\"entertainmentWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.entertainmentWebsitePort.errors\">{{userFormGroup.controls.entertainmentWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Shopping Website Port</label>\r\n      <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-conditionalExpression-validator',\r\n    templateUrl: './port-conditional-expression.component.html'\r\n})\r\nexport class PortConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            browser:['',], \r\n            shoppingWebsitePort:['', RxwebValidators.port({conditionalExpression:'x => x.browser ==\"Chrome\"' })], \r\n            entertainmentWebsitePort:['', RxwebValidators.port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Browser</label>\r\n      <input type=\"text\" formControlName=\"browser\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Shopping Website Port</label>\r\n      <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entertainment Website Port</label>\r\n      <input type=\"text\" formControlName=\"entertainmentWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.entertainmentWebsitePort.errors\">{{userFormGroup.controls.entertainmentWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.port({conditionalExpression:'x => x.browser ==\"Chrome\"' });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.port({message:'{{0}} is not a proper port number' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-message-validator',\r\n    templateUrl: './port-message.component.html'\r\n})\r\nexport class PortMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            educationalWebsitePort:['', RxwebValidators.port({message:'{{0}} is not a proper port number' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-dynamic-validator',\r\n    templateUrl: './port-dynamic.component.html'\r\n})\r\nexport class PortDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/port/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { browser:'', entertainmentWebsitePort:'', shoppingWebsitePort:'', educationalWebsitePort:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Browser</label>\r\n      <input type=\"text\" formControlName=\"browser\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Shopping Website Port</label>\r\n      <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"browser\":{},\"shoppingWebsitePort\":{\"port\":{\"conditionalExpression\":\"x => x.browser ==\\\"Chrome\\\"\"}},\"educationalWebsitePort\":{\"port\":{\"message\":\"{{0}} is not a proper port number\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-add-validator',\r\n    templateUrl: './port-add.component.html'\r\n})\r\nexport class PortAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            educationalWebsitePort:['', RxwebValidators.port()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a proper port number<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}