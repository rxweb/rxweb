{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-complete',\r\n    templateUrl: './port-complete.component.html'\r\n})\r\nexport class PortCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Browser</label>\r\n      <input type=\"text\" formControlName=\"browser\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entertainment Website Port</label>\r\n      <input type=\"text\" formControlName=\"entertainmentWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.entertainmentWebsitePort.errors\">{{userFormGroup.controls.entertainmentWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Shopping Website Port</label>\r\n      <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  port,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tbrowser: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  }) \r\n\tentertainmentWebsitePort: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@port({conditionalExpression:'x => x.browser ==\"Chrome\"' }) \r\n\tshoppingWebsitePort: string;\r\n\r\n\t@port({message:'{{0}} is not a proper port number' }) \r\n\teducationalWebsitePort: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  }) \r\nentertainmentWebsitePort: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-conditionalExpression',\r\n    templateUrl: './port-conditional-expression.component.html'\r\n})\r\nexport class PortConditionalExpressionComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Browser</label>\r\n      <input type=\"text\" formControlName=\"browser\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Shopping Website Port</label>\r\n      <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entertainment Website Port</label>\r\n      <input type=\"text\" formControlName=\"entertainmentWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.entertainmentWebsitePort.errors\">{{userFormGroup.controls.entertainmentWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  port,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tbrowser: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@port({conditionalExpression:'x => x.browser ==\"Chrome\"' }) \r\n\tshoppingWebsitePort: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  }) \r\n\tentertainmentWebsitePort: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@port({conditionalExpression:'x => x.browser ==\"Chrome\"' }) \r\nshoppingWebsitePort: string;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@port({message:'{{0}} is not a proper port number' }) \r\neducationalWebsitePort: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-message',\r\n    templateUrl: './port-message.component.html'\r\n})\r\nexport class PortMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  port, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@port({message:'{{0}} is not a proper port number' }) \r\n\teducationalWebsitePort: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-dynamic',\r\n    templateUrl: './port-dynamic.component.html'\r\n})\r\nexport class PortDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/port/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Browser</label>\r\n      <input type=\"text\" formControlName=\"browser\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Shopping Website Port</label>\r\n      <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  port,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tbrowser: string;\r\n\r\n\t@prop()\r\n\tshoppingWebsitePort: string;\r\n\r\n\t@prop()\r\n\teducationalWebsitePort: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"dynamic.json","json":"{\"browser\":{},\"shoppingWebsitePort\":{\"port\":{\"conditionalExpression\":\"x => x.browser ==\\\"Chrome\\\"\"}},\"educationalWebsitePort\":{\"port\":{\"message\":\"{{0}} is not a proper port number\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-add',\r\n    templateUrl: './port-add.component.html'\r\n})\r\nexport class PortAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a proper port number<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  port, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@port() \r\n\teducationalWebsitePort: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-edit',\r\n    templateUrl: './port-edit.component.html'\r\n})\r\nexport class PortEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/port/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a proper port number<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  port, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@port() \r\n\teducationalWebsitePort: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"user-data.json","json":"{\"educationalWebsitePort\":\"8080\"}"}}