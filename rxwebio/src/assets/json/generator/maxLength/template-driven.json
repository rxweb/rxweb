{"rightSidebarLinks":[{"id":"maxlength","title":"maxLength (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicmaxlengthvalidation","title":"Basic MaxLength Validation","subLink":[]},{"id":"numberconfig","title":"NumberConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"},{"title":"value","id":"value"}]},{"id":"completemaxlengthexample","title":"Complete maxLength Example","subLink":[]},{"id":"githubissues","title":"maxLength Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"maxLength","description":" MaxLength validation  template driven  will allow user to enter the input upto the maximum length value parameter.","validatorType":"template-driven","validationTypeTitle":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-maxLength-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"maxLength-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"maxLength-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use<a title='Link to this heading' class='link-header' href='/form-validations/maxLength/template-driven#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Suppose you want to create a User form, which contains fields like FirstName, LastName, Username and you want the user to enter any string which should not exceed maximum length. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n\t<li>Allow string less than 16 characters in FirstName.</li>\r\n\t<li>Apply maxLength validation based on matched condition in the form, like if the FirstName is <span class='highlighted'>john</span>, then only the maxLength validation will be  applied to LastName field.</li> \r\n\t<li>Adding Custom Message on Username Field.</li>\r\n \t<li>Apply maxLength validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Letâ€™s see how maxLength validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicmaxlengthvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic MaxLength Validation<a title='Link to this heading' class='link-header' href='/form-validations/maxLength/template-driven#basicmaxlengthvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'numberconfig'>\r\n<div class='col-lg-12'>\r\n<h2>NumberConfig<a title='Link to this heading' class='link-header' href='/form-validations/maxLength/template-driven#numberconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Below options are not mandatory to use in the <span class='highlighted'>maxLength</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a   (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>MaxLength validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a   (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#value\")' title=\"value\">value</a></td><td> Enter value which you want to restrict string length in the property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/maxLength/template-driven#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>MaxLength validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"maxLength-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"maxLength-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-maxLength-conditionalExpression\" title=\"maxLength template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/maxLength/template-driven#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"maxLength-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-maxLength-message\" title=\"maxLength template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value<a title='Link to this heading' class='link-header' href='/form-validations/maxLength/template-driven#value'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Type :  <span class='highlighted'>number</span> </p>\r\n<p>enter value which you want to restrict string length in the property</p>\r\n<div component=\"app-code\" key=\"maxLength-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"maxLength-value-value\" title=\"maxLength template driven with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completemaxlengthexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete maxLength Example<a title='Link to this heading' class='link-header' href='/form-validations/maxLength/template-driven#completemaxlengthexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>This Complete maxLength example which includes all the NumberConfig properties will fulfil the requirement of scenarios 1, 2, 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/maxLength/template-driven#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}