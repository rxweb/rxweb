{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-complete-validator',\r\n    templateUrl: './max-length-complete.component.html'\r\n})\r\nexport class MaxLengthCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstName:['', RxwebValidators.maxLength({value:16 })], \r\n            middleName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" })], \r\n            lastName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:'x => x.firstName == \"Bharat\"' })], \r\n            userName:['', RxwebValidators.maxLength({value:10  ,message:'Maximum 10 characters are allowed' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Middle Name</label>\r\n      <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply validation here, write 'Bharat' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Last Name' field, write 'Bharat' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxLength({value:16 });\r\n","modelName":null,"jsonName":null,"json":null},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-value-validator',\r\n    templateUrl: './max-length-value.component.html'\r\n})\r\nexport class MaxLengthValueValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstName:['', RxwebValidators.maxLength({value:16 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-conditionalExpression-validator',\r\n    templateUrl: './max-length-conditional-expression.component.html'\r\n})\r\nexport class MaxLengthConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstName:['', RxwebValidators.maxLength({value:16 })], \r\n            lastName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:'x => x.firstName == \"Bharat\"' })], \r\n            middleName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Last Name' field, write 'Bharat' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Middle Name</label>\r\n      <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply validation here, write 'Bharat' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxLength({value:16  ,conditionalExpression:'x => x.firstName == \"Bharat\"' });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxLength({value:16  ,conditionalExpression:'x => x.firstName == \"Bharat\"' });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxLength({value:10  ,message:'Maximum 10 characters are allowed' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-message-validator',\r\n    templateUrl: './max-length-message.component.html'\r\n})\r\nexport class MaxLengthMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            userName:['', RxwebValidators.maxLength({value:10  ,message:'Maximum 10 characters are allowed' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-dynamic-validator',\r\n    templateUrl: './max-length-dynamic.component.html'\r\n})\r\nexport class MaxLengthDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/maxLength/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { firstName:'', middleName:'', lastName:'', userName:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Last Name' field, write 'Bharat' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.maxLength.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxLength.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"firstName\":{\"maxLength\":{\"value\":\"16\"}},\"lastName\":{\"maxLength\":{\"value\":\"16\",\"conditionalExpression\":\"x => x.firstName == \\\"Bharat\\\"\"}},\"userName\":{\"maxLength\":{\"value\":\"10\",\"message\":\"Maximum 10 characters are allowed\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-add-validator',\r\n    templateUrl: './max-length-add.component.html'\r\n})\r\nexport class MaxLengthAddValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n            firstName:['', RxwebValidators.maxLength({value:10 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Maximum Length Upto 10 characters<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.firstName.errors\">{{locationFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}