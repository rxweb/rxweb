{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-complete',\r\n    templateUrl: './compare-complete.component.html'\r\n})\r\nexport class CompareCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Email</label>\r\n      <input type=\"text\" formControlName=\"confirmEmail\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmEmail.errors\">{{userFormGroup.controls.confirmEmail.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\temail: string;\r\n\r\n\t@compare({fieldName:'email' }) \r\n\tconfirmEmail: string;\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t//Shows custom message\r\n\t@compare({fieldName:'password'  ,message:'You must enter same password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@compare({fieldName:'email' }) \r\nconfirmEmail: string;\r\n","modelName":null,"jsonName":null,"json":null},"fieldName":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-fieldName',\r\n    templateUrl: './compare-field-name.component.html'\r\n})\r\nexport class CompareFieldNameComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Email</label>\r\n      <input type=\"text\" formControlName=\"confirmEmail\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmEmail.errors\">{{userFormGroup.controls.confirmEmail.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\temail: string;\r\n\r\n\t@compare({fieldName:'email' }) \r\n\tconfirmEmail: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@compare({fieldName:'password'  ,message:'You must enter same password' }) \r\nconfirmPassword: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-message',\r\n    templateUrl: './compare-message.component.html'\r\n})\r\nexport class CompareMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t//Shows custom message\r\n\t@compare({fieldName:'password'  ,message:'You must enter same password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-dynamic',\r\n    templateUrl: './compare-dynamic.component.html'\r\n})\r\nexport class CompareDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/compare/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Email</label>\r\n      <input type=\"text\" formControlName=\"confirmEmail\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmEmail.errors\">{{userFormGroup.controls.confirmEmail.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\temail: string;\r\n\r\n\t@prop()\r\n\tconfirmEmail: string;\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@prop()\r\n\tconfirmPassword: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"dynamic.json","json":"{\"email\":{},\"confirmEmail\":{\"compare\":{\"fieldName\":\"email\"}},\"password\":{},\"confirmPassword\":{\"compare\":{\"fieldName\":\"password\",\"message\":\"You must enter same password\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-add',\r\n    templateUrl: './compare-add.component.html'\r\n})\r\nexport class CompareAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@compare({fieldName:'password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-edit',\r\n    templateUrl: './compare-edit.component.html'\r\n})\r\nexport class CompareEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/compare/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@compare({fieldName:'password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"user-data.json","json":"{\"password\":\"Admin@123\",\"confirmPassword\":\"Admin@123\"}"}}