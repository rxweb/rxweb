{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-complete-template-driven-validation-decorators',\r\n    templateUrl: './compare-complete.component.html'\r\n})\r\nexport class CompareCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n\t    <input type=\"text\" name=\"email\" [(ngModel)]=\"user.email\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.email?.errors\">{{userForm.controls.email?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Email</label>\r\n\t    <input type=\"text\" name=\"confirmEmail\" [(ngModel)]=\"user.confirmEmail\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.confirmEmail?.errors\">{{userForm.controls.confirmEmail?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n\t    <input type=\"text\" name=\"password\" [(ngModel)]=\"user.password\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.password?.errors\">{{userForm.controls.password?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n\t    <input type=\"text\" name=\"confirmPassword\" [(ngModel)]=\"user.confirmPassword\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.confirmPassword?.errors\">{{userForm.controls.confirmPassword?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\temail: string;\r\n\r\n\t@compare({fieldName:'email' }) \r\n\tconfirmEmail: string;\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t//Shows custom message\r\n\t@compare({fieldName:'password'  ,message:'You must enter same password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@compare({fieldName:'email' }) \r\nconfirmEmail: string;\r\n","modelName":null,"jsonName":null,"json":null},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-fieldName-template-driven-validation-decorators',\r\n    templateUrl: './compare-field-name.component.html'\r\n})\r\nexport class CompareFieldNameTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n\t    <input type=\"text\" name=\"email\" [(ngModel)]=\"user.email\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.email?.errors\">{{userForm.controls.email?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Email</label>\r\n\t    <input type=\"text\" name=\"confirmEmail\" [(ngModel)]=\"user.confirmEmail\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.confirmEmail?.errors\">{{userForm.controls.confirmEmail?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\temail: string;\r\n\r\n\t@compare({fieldName:'email' }) \r\n\tconfirmEmail: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@compare({fieldName:'password'  ,message:'You must enter same password' }) \r\nconfirmPassword: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-message-template-driven-validation-decorators',\r\n    templateUrl: './compare-message.component.html'\r\n})\r\nexport class CompareMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n\t    <input type=\"text\" name=\"confirmPassword\" [(ngModel)]=\"user.confirmPassword\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.confirmPassword?.errors\">{{userForm.controls.confirmPassword?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t//Shows custom message\r\n\t@compare({fieldName:'password'  ,message:'You must enter same password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-add-template-driven-validation-decorators',\r\n    templateUrl: './compare-add.component.html'\r\n})\r\nexport class CompareAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n\t    <input type=\"text\" name=\"password\" [(ngModel)]=\"user.password\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.password?.errors\">{{userForm.controls.password?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n\t    <input type=\"text\" name=\"confirmPassword\" [(ngModel)]=\"user.confirmPassword\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.confirmPassword?.errors\">{{userForm.controls.confirmPassword?.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@compare({fieldName:'password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null}}