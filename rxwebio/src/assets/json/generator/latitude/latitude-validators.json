{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-latitude-complete-validator',\r\n    templateUrl: './latitude-complete.component.html'\r\n})\r\nexport class LatitudeCompleteValidatorComponent implements OnInit {\r\n    countryFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.countryFormGroup = this.formBuilder.group({\r\n            continent:['',], \r\n            secondCountryLatitude:['', RxwebValidators.latitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  })], \r\n            thirdCountryLatitude:['', RxwebValidators.latitude({conditionalExpression:'x => x.continent ==\"Asia\"' })], \r\n            firstCountryLatitude:['', RxwebValidators.latitude({message:'{{0}} is not a latitude' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"countryFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label> Continent</label>\r\n      <input type=\"text\" formControlName=\"continent\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' or 'Third Country Latitude', then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.continent.errors\">{{countryFormGroup.controls.continent.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Second Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"secondCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.secondCountryLatitude.errors\">{{countryFormGroup.controls.secondCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"thirdCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.thirdCountryLatitude.errors\">{{countryFormGroup.controls.thirdCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>First Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"firstCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You can enter only latitude<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.firstCountryLatitude.errors\">{{countryFormGroup.controls.firstCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.latitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-latitude-conditionalExpression-validator',\r\n    templateUrl: './latitude-conditional-expression.component.html'\r\n})\r\nexport class LatitudeConditionalExpressionValidatorComponent implements OnInit {\r\n    countryFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.countryFormGroup = this.formBuilder.group({\r\n            continent:['',], \r\n            thirdCountryLatitude:['', RxwebValidators.latitude({conditionalExpression:'x => x.continent ==\"Asia\"' })], \r\n            secondCountryLatitude:['', RxwebValidators.latitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"countryFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label> Continent</label>\r\n      <input type=\"text\" formControlName=\"continent\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' or 'Third Country Latitude', then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.continent.errors\">{{countryFormGroup.controls.continent.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"thirdCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.thirdCountryLatitude.errors\">{{countryFormGroup.controls.thirdCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Second Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"secondCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.secondCountryLatitude.errors\">{{countryFormGroup.controls.secondCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.latitude({conditionalExpression:'x => x.continent ==\"Asia\"' });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.latitude({message:'{{0}} is not a latitude' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-latitude-message-validator',\r\n    templateUrl: './latitude-message.component.html'\r\n})\r\nexport class LatitudeMessageValidatorComponent implements OnInit {\r\n    countryFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.countryFormGroup = this.formBuilder.group({\r\n            firstCountryLatitude:['', RxwebValidators.latitude({message:'{{0}} is not a latitude' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"countryFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"firstCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You can enter only latitude<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.firstCountryLatitude.errors\">{{countryFormGroup.controls.firstCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-latitude-dynamic-validator',\r\n    templateUrl: './latitude-dynamic.component.html'\r\n})\r\nexport class LatitudeDynamicValidatorComponent implements OnInit {\r\n    countryFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/latitude/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar country = { continent:'', secondCountryLatitude:'', thirdCountryLatitude:'', firstCountryLatitude:'',  }\r\n\t\t\tthis.countryFormGroup = this.formBuilder.group(country,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"countryFormGroup\"  [formGroup]=\"countryFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label> Continent</label>\r\n      <input type=\"text\" formControlName=\"continent\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' or 'Third Country Latitude', then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.continent.errors\">{{countryFormGroup.controls.continent.errors.latitude.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"thirdCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.thirdCountryLatitude.errors\">{{countryFormGroup.controls.thirdCountryLatitude.errors.latitude.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>First Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"firstCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You can enter only latitude<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.firstCountryLatitude.errors\">{{countryFormGroup.controls.firstCountryLatitude.errors.latitude.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"continent\":{},\"thirdCountryLatitude\":{\"latitude\":{\"conditionalExpression\":\"x => x.continent ==\\\"Asia\\\"\"}},\"firstCountryLatitude\":{\"latitude\":{\"message\":\"{{0}} is not a latitude\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-latitude-add-validator',\r\n    templateUrl: './latitude-add.component.html'\r\n})\r\nexport class LatitudeAddValidatorComponent implements OnInit {\r\n    numberInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.numberInfoFormGroup = this.formBuilder.group({\r\n            firstCountryLatitude:['', RxwebValidators.latitude()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"numberInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Country Latitude</label>\r\n      <input type=\"text\" formControlName=\"firstCountryLatitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a valid latitude<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"numberInfoFormGroup.controls.firstCountryLatitude.errors\">{{numberInfoFormGroup.controls.firstCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!numberInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}