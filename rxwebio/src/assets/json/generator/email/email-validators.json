{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-complete-validator',\r\n    templateUrl: './email-complete.component.html'\r\n})\r\nexport class EmailCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            email:['', RxwebValidators.email()], \r\n            recoveryEmailAddress:['', RxwebValidators.email({conditionalExpression:(x,y) => x.email == \"abc@gmail.com\"  })], \r\n            businessEmailAddress:['', RxwebValidators.email({conditionalExpression:'x => x.email ==\"abc@gmail.com\"' })], \r\n            otherEmailAddress:['', RxwebValidators.email({message:'Please enter valid email' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input to 'abc@gmail.com'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Recovery Email Address</label>\r\n      <input type=\"text\" formControlName=\"recoveryEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.recoveryEmailAddress.errors\">{{userFormGroup.controls.recoveryEmailAddress.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Business Email Address</label>\r\n      <input type=\"text\" formControlName=\"businessEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Business Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.businessEmailAddress.errors\">{{userFormGroup.controls.businessEmailAddress.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n      <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.email({conditionalExpression:(x,y) => x.email == \"abc@gmail.com\"  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-conditionalExpression-validator',\r\n    templateUrl: './email-conditional-expression.component.html'\r\n})\r\nexport class EmailConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            email:['', RxwebValidators.email()], \r\n            businessEmailAddress:['', RxwebValidators.email({conditionalExpression:'x => x.email ==\"abc@gmail.com\"' })], \r\n            recoveryEmailAddress:['', RxwebValidators.email({conditionalExpression:(x,y) => x.email == \"abc@gmail.com\"  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input to 'abc@gmail.com'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Business Email Address</label>\r\n      <input type=\"text\" formControlName=\"businessEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Business Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.businessEmailAddress.errors\">{{userFormGroup.controls.businessEmailAddress.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Recovery Email Address</label>\r\n      <input type=\"text\" formControlName=\"recoveryEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.recoveryEmailAddress.errors\">{{userFormGroup.controls.recoveryEmailAddress.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.email({conditionalExpression:'x => x.email ==\"abc@gmail.com\"' });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.email({message:'Please enter valid email' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-message-validator',\r\n    templateUrl: './email-message.component.html'\r\n})\r\nexport class EmailMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            otherEmailAddress:['', RxwebValidators.email({message:'Please enter valid email' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n      <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-dynamic-validator',\r\n    templateUrl: './email-dynamic.component.html'\r\n})\r\nexport class EmailDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/email/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { email:'', recoveryEmailAddress:'', businessEmailAddress:'', otherEmailAddress:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input to 'abc@gmail.com'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.email.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Business Email Address</label>\r\n      <input type=\"text\" formControlName=\"businessEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Business Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.businessEmailAddress.errors\">{{userFormGroup.controls.businessEmailAddress.errors.email.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n      <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.email.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"email\":{\"email\":true},\"businessEmailAddress\":{\"email\":{\"conditionalExpression\":\"x => x.email ==\\\"abc@gmail.com\\\"\"}},\"otherEmailAddress\":{\"email\":{\"message\":\"Please enter valid email\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-add-validator',\r\n    templateUrl: './email-add.component.html'\r\n})\r\nexport class EmailAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            email:['', RxwebValidators.email()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.email.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}