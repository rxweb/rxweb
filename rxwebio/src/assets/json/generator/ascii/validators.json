{"rightSidebarLinks":[{"id":"ascii","title":"ascii (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicasciivalidation","title":"Basic Ascii Validation","subLink":[]},{"id":"defaultconfig","title":"DefaultConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completeasciiexample","title":"Complete Ascii Example","subLink":[]},{"id":"dynamicasciiexample","title":"Dynamic Ascii Example","subLink":[]},{"id":"githubissues","title":"ascii Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"ascii","description":" ascii validation  validators  allows user to enter the input which is in the proper ascii format.","validatorType":"validators","validationTypeTitle":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-ascii-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"ascii-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"ascii-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-ascii-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"ascii-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"ascii-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"ascii-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/ascii/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a user form in which you want the user to enter an  input which is in form of valid ascii code. The form contains fields like language, numberAsciiCode, alphabetAsciiCode and specialCharAsciiCode. depending on requirements these scenarios may arise..</p>\r\n<ol class='showHideElement'>\r\n     <li>Allow valid ascii code input in field of specialCharAsciiCode and add custom error message to it.</li>\r\n     <li>Apply validation on numberAsciiCode field based on matched condition in the form, like if the language is 'Java', then the numberAsciiCode must be an ascii code (Used as a function).</li>\r\n     <li>Apply validation on specialCharAsciiCode field validation based on matched condition in the form, like if the language is 'Java', then the alphabetAsciiCode must be an ascii code (Used as a string datatype).</li>\r\n     <data-scope scope=\"['decorator','validator']\">\r\n          <li>Apply ascii validation dynamically based on server rules.</li>\r\n     </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let's see how ascii  validator  fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicasciivalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Ascii Validation<a title='Link to this heading' class='link-header' href='/form-validations/ascii/validators#basicasciivalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"ascii-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"ascii-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-ascii-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'defaultconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >DefaultConfig<a title='Link to this heading' class='link-header' href='/form-validations/ascii/validators#defaultconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.ascii()</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a   (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Ascii validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")'  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/ascii/validators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Ascii validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"ascii-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"ascii-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-ascii-conditionalExpression\" title=\"ascii validator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/ascii/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"ascii-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-ascii-message\" title=\"ascii validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeasciiexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Ascii Example<a title='Link to this heading' class='link-header' href='/form-validations/ascii/validators#completeasciiexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete Ascii example which includes all the DefaultConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicasciiexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic Ascii Example<a title='Link to this heading' class='link-header' href='/form-validations/ascii/validators#dynamicasciiexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic Ascii example which execute based on json passed. conditional expression with function would be not apply in dynamic Ascii example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/ascii/validators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}