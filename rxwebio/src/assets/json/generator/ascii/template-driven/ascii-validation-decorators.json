{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ascii-complete-template-driven-validation-decorators',\r\n    templateUrl: './ascii-complete.component.html'\r\n})\r\nexport class AsciiCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Language</label>\r\n\t    <input type=\"text\" name=\"language\" [(ngModel)]=\"user.language\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Number Ascii Code' or 'Alphabet Ascii Code', then you need to add 'Language' input as 'Java'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.language?.errors\">{{userForm.controls.language?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Alphabet Ascii Code</label>\r\n\t    <input type=\"text\" name=\"alphabetAsciiCode\" [(ngModel)]=\"user.alphabetAsciiCode\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Alphabet Ascii Code' then you need to add 'Language' input as 'Java'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.alphabetAsciiCode?.errors\">{{userForm.controls.alphabetAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Special Character Ascii Code</label>\r\n\t    <input type=\"text\" name=\"specialCharAsciiCode\" [(ngModel)]=\"user.specialCharAsciiCode\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">enter Ascii Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.specialCharAsciiCode?.errors\">{{userForm.controls.specialCharAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ascii,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tlanguage: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@ascii({conditionalExpression:(x,y) => x.language == \"Java\"  }) \r\n\tnumberAsciiCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@ascii({conditionalExpression:'x => x.language ==\"Java\"' }) \r\n\talphabetAsciiCode: string;\r\n\r\n\t@ascii({message:'{{0}} is not an Ascii Code' }) \r\n\tspecialCharAsciiCode: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@ascii({conditionalExpression:(x,y) => x.language == \"Java\"  }) \r\nnumberAsciiCode: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ascii-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './ascii-conditional-expression.component.html'\r\n})\r\nexport class AsciiConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Language</label>\r\n\t    <input type=\"text\" name=\"language\" [(ngModel)]=\"user.language\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Number Ascii Code' or 'Alphabet Ascii Code', then you need to add 'Language' input as 'Java'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.language?.errors\">{{userForm.controls.language?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Alphabet Ascii Code</label>\r\n\t    <input type=\"text\" name=\"alphabetAsciiCode\" [(ngModel)]=\"user.alphabetAsciiCode\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Alphabet Ascii Code' then you need to add 'Language' input as 'Java'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.alphabetAsciiCode?.errors\">{{userForm.controls.alphabetAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ascii,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tlanguage: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@ascii({conditionalExpression:'x => x.language ==\"Java\"' }) \r\n\talphabetAsciiCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@ascii({conditionalExpression:(x,y) => x.language == \"Java\"  }) \r\n\tnumberAsciiCode: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@ascii({conditionalExpression:'x => x.language ==\"Java\"' }) \r\nalphabetAsciiCode: string;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@ascii({message:'{{0}} is not an Ascii Code' }) \r\nspecialCharAsciiCode: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ascii-message-template-driven-validation-decorators',\r\n    templateUrl: './ascii-message.component.html'\r\n})\r\nexport class AsciiMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Special Character Ascii Code</label>\r\n\t    <input type=\"text\" name=\"specialCharAsciiCode\" [(ngModel)]=\"user.specialCharAsciiCode\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">enter Ascii Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.specialCharAsciiCode?.errors\">{{userForm.controls.specialCharAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ascii, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@ascii({message:'{{0}} is not an Ascii Code' }) \r\n\tspecialCharAsciiCode: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ascii-add-template-driven-validation-decorators',\r\n    templateUrl: './ascii-add.component.html'\r\n})\r\nexport class AsciiAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Special Character Ascii Code</label>\r\n\t    <input type=\"text\" name=\"specialCharAsciiCode\" [(ngModel)]=\"user.specialCharAsciiCode\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">You must enter an Ascii Code only<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.specialCharAsciiCode?.errors\">{{userForm.controls.specialCharAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ascii, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@ascii() \r\n\tspecialCharAsciiCode: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null}}