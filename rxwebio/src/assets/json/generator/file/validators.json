{"rightSidebarLinks":[{"id":"file","title":"file (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"fileconfig","title":"fileConfig","subLink":[{"title":"maxFiles","id":"maxfiles"},{"title":"maxFiles","id":"maxfiles"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completefileexample","title":"Complete file Example","subLink":[]},{"id":"dynamicfileexample","title":"Dynamic file Example","subLink":[]},{"id":"githubissues","title":"file Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"file","description":" file validation  validators  allows user to validate whether how many files can be uploaded . It depends upon maxFiles and minFiles.","validatorType":"validators","validationTypeTitle":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-file-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"file-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"file-complete-html\"></div>\r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-file-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"file-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"file-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"file-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a User form, which contains fields like totalImageFiles, totalDocumentFiles, minimumFiles,maximumFile,minMaxFiles and you want the user to upload files as per validation format. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n    <li>Allow file validation on field of totalImageFiles based on maxFiles.</li>\r\n    <li>Apply  validation based on minFiles on totalDocumentFiles</li>\r\n    <li>Adding Custom Message on minMaxFiles field.</li>\r\n   <li>Apply validation on maximumFile field based on matched condition in the form, like if the fileType is 'Document', then the maximumFile must be valid file count (Used as a function).</li>\r\n   <li>Apply validation on minMaxFiles field based on matched condition in the form, like if the ImageType is 'Picture', then the minMaxFiles must be a Image format (Used as a string datatype).</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n    <li>Apply file validation dynamically based on server rules.</li>\r\n    </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how file  validator  fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'fileconfig'>\r\n<div class='col-lg-12'>\r\n<h2>fileConfig<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#fileconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.file()</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  title=\"maxFiles\">maxFiles</a></td><td>The Maximum Number of files that can be uploaded</td></tr>\r\n<tr><td><a  title=\"minFiles\">minFiles</a></td><td>The Minimum Number of files that can be uploaded</td></tr>\r\n<tr><td><a  title=\"conditionalExpression\">conditionalExpression</a></td><td>file validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'maxfiles'>\r\n<div class='col-lg-12'>\r\n<h2>maxFiles<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#maxfiles'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >The Maximum Number of files that can be uploaded</p>\r\n<div component=\"app-code\" key=\"file-maxFilesExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-file-max-files\" title=\"file validator with maxFiles\" key=\"maxFiles\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'maxfiles'>\r\n<div class='col-lg-12'>\r\n<h2>maxFiles<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#maxfiles'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >The Minimum Number of files that can be uploaded</p>\r\n<div component=\"app-code\" key=\"file-minFilesExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-file-min-files\" title=\"file validator with minFiles\" key=\"minFiles\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >file validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"file-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"file-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-file-conditionalExpression\" title=\"file validator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"file-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-file-message\" title=\"file validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completefileexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete file Example<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#completefileexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete file example which includes all the fileConfig properties will fulfil the requirement of scenarios 1, 2, 3,4 and 5</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicfileexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic file Example<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#dynamicfileexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic file example which execute based on json passed. conditional expression with function would be not apply in dynamic file example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/file/validators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}