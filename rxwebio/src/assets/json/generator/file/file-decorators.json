{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-complete',\r\n    templateUrl: './file-complete.component.html'\r\n})\r\nexport class FileCompleteComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinimumFiles</label>\r\n      <input type=\"file\" formControlName=\"minimumFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MinimumFiles' then you need to add 'File Type' input as 'Picture'. we can add minimum 5 files<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minimumFiles.errors\">{{userInfoFormGroup.controls.minimumFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum File</label>\r\n      <input type=\"file\" formControlName=\"maximumFile\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Maximum File' then you need to add 'File Type' input as 'Document'. we can add maximum 5 files<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.maximumFile.errors\">{{userInfoFormGroup.controls.maximumFile.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinMaxFiles</label>\r\n      <input type=\"file\" formControlName=\"minMaxFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minMaxFiles.errors\">{{userInfoFormGroup.controls.minMaxFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@file({maxFiles:5 }) \r\n\ttotalImageFiles: number;\r\n\r\n\t@file({minFiles:5 }) \r\n\ttotalDocumentFiles: number;\r\n\r\n\t@file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\tminimumFiles: string;\r\n\r\n\t@file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tmaximumFile: string;\r\n\r\n\t@file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' }) \r\n\tminMaxFiles: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxFilesExample":{"notes":null,"component":null,"html":null,"model":"@file({maxFiles:5 }) \r\ntotalImageFiles: number;\r\n","modelName":null,"jsonName":null,"json":null},"maxFiles":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-maxFiles',\r\n    templateUrl: './file-max-files.component.html'\r\n})\r\nexport class FileMaxFilesComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({maxFiles:5 }) \r\n\ttotalImageFiles: number;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"minFilesExample":{"notes":null,"component":null,"html":null,"model":"@file({minFiles:5 }) \r\ntotalDocumentFiles: number;\r\n","modelName":null,"jsonName":null,"json":null},"minFiles":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-minFiles',\r\n    templateUrl: './file-min-files.component.html'\r\n})\r\nexport class FileMinFilesComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({minFiles:5 }) \r\n\ttotalDocumentFiles: number;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"minFilesExampleString":{"notes":null,"component":null,"html":null,"model":"@file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\nminimumFiles: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\nminimumFiles: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxFilesExampleFunction":{"notes":null,"component":null,"html":null,"model":"@file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\nmaximumFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\nmaximumFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-conditionalExpression',\r\n    templateUrl: './file-conditional-expression.component.html'\r\n})\r\nexport class FileConditionalExpressionComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinimumFiles</label>\r\n      <input type=\"file\" formControlName=\"minimumFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MinimumFiles' then you need to add 'File Type' input as 'Picture'. we can add minimum 5 files<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minimumFiles.errors\">{{userInfoFormGroup.controls.minimumFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum File</label>\r\n      <input type=\"file\" formControlName=\"maximumFile\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Maximum File' then you need to add 'File Type' input as 'Document'. we can add maximum 5 files<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.maximumFile.errors\">{{userInfoFormGroup.controls.maximumFile.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\tminimumFiles: string;\r\n\r\n\t@file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tmaximumFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' }) \r\nminMaxFiles: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-message',\r\n    templateUrl: './file-message.component.html'\r\n})\r\nexport class FileMessageComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>MinMaxFiles</label>\r\n      <input type=\"file\" formControlName=\"minMaxFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minMaxFiles.errors\">{{userInfoFormGroup.controls.minMaxFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' }) \r\n\tminMaxFiles: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-dynamic',\r\n    templateUrl: './file-dynamic.component.html'\r\n})\r\nexport class FileDynamicComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/file/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.formGroup(userInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.file.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple  />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple  />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinimumFiles</label>\r\n      <input type=\"file\" formControlName=\"minimumFiles\" class=\"form-control\" multiple  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MinimumFiles' then you need to add 'File Type' input as 'Picture'. we can add minimum 5 files<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minimumFiles.errors\">{{userInfoFormGroup.controls.minimumFiles.errors.file.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinMaxFiles</label>\r\n      <input type=\"file\" formControlName=\"minMaxFiles\" class=\"form-control\" multiple  />\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minMaxFiles.errors\">{{userInfoFormGroup.controls.minMaxFiles.errors.file.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@prop()\r\n\ttotalImageFiles: number;\r\n\r\n\t@prop()\r\n\ttotalDocumentFiles: number;\r\n\r\n\t@prop()\r\n\tminimumFiles: string;\r\n\r\n\t@prop()\r\n\tminMaxFiles: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":"dynamic.json","json":"{\"fileType\":{},\"totalImageFiles\":{\"file\":{\"maxFiles\":\"5\"}},\"totalDocumentFiles\":{\"file\":{\"minFiles\":\"5\"}},\"minimumFiles\":{\"file\":{\"minFiles\":\"5\",\"conditionalExpression\":\"x => x.fileType == \\\"Picture\\\"\"}},\"minMaxFiles\":{\"file\":{\"minFiles\":\"5\",\"maxFiles\":\"10\",\"message\":\"You can upload minimum 5 and maximum 10 files.\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-add',\r\n    templateUrl: './file-add.component.html'\r\n})\r\nexport class FileAddComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({maxFiles:5 }) \r\n\ttotalImageFiles: number;\r\n\r\n\t@file({minFiles:5 }) \r\n\ttotalDocumentFiles: number;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-edit',\r\n    templateUrl: './file-edit.component.html'\r\n})\r\nexport class FileEditComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/file/edit/user-info-data.json').subscribe(userInfo => {\r\n            this.userInfoFormGroup = this.formBuilder.formGroup<UserInfo>(UserInfo,userInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({maxFiles:5 }) \r\n\ttotalImageFiles: number;\r\n\r\n\t@file({minFiles:5 }) \r\n\ttotalDocumentFiles: number;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":"user-info-data.json","json":"{\"totalImageFiles\":[\"google.jpg\",\"amazon.png\",\"flipKart.jpg\",\"voonik.png\",\"myntra.jpg\"],\"totalDocumentFiles\":[\"google.doc\",\"amazon.doc\",\"flipKart.doc\",\"voonik.doc\",\"myntra.doc\"]}"}}