{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-file-complete-validator',\r\n    templateUrl: './file-complete.component.html'\r\n})\r\nexport class FileCompleteValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            fileType:['',], \r\n            totalImageFiles:['', RxwebValidators.file({maxFiles:5 })], \r\n            totalDocumentFiles:['', RxwebValidators.file({minFiles:5 })], \r\n            minimumFiles:['', RxwebValidators.file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' })], \r\n            maximumFile:['', RxwebValidators.file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' })], \r\n            minMaxFiles:['', RxwebValidators.file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinimumFiles</label>\r\n      <input type=\"file\" formControlName=\"minimumFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MinimumFiles' then you need to add 'File Type' input as 'Picture'. we can add minimum 5 files<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minimumFiles.errors\">{{userInfoFormGroup.controls.minimumFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum File</label>\r\n      <input type=\"file\" formControlName=\"maximumFile\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Maximum File' then you need to add 'File Type' input as 'Document'. we can add maximum 5 files<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.maximumFile.errors\">{{userInfoFormGroup.controls.maximumFile.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinMaxFiles</label>\r\n      <input type=\"file\" formControlName=\"minMaxFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minMaxFiles.errors\">{{userInfoFormGroup.controls.minMaxFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"maxFilesExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.file({maxFiles:5 });\r\n","modelName":null,"jsonName":null,"json":null},"maxFiles":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-file-maxFiles-validator',\r\n    templateUrl: './file-max-files.component.html'\r\n})\r\nexport class FileMaxFilesValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            totalImageFiles:['', RxwebValidators.file({maxFiles:5 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"minFilesExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.file({minFiles:5 });\r\n","modelName":null,"jsonName":null,"json":null},"minFiles":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-file-minFiles-validator',\r\n    templateUrl: './file-min-files.component.html'\r\n})\r\nexport class FileMinFilesValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            totalDocumentFiles:['', RxwebValidators.file({minFiles:5 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"minFilesExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' });\r\n","modelName":null,"jsonName":null,"json":null},"maxFilesExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-file-conditionalExpression-validator',\r\n    templateUrl: './file-conditional-expression.component.html'\r\n})\r\nexport class FileConditionalExpressionValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            fileType:['',], \r\n            minimumFiles:['', RxwebValidators.file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' })], \r\n            maximumFile:['', RxwebValidators.file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinimumFiles</label>\r\n      <input type=\"file\" formControlName=\"minimumFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MinimumFiles' then you need to add 'File Type' input as 'Picture'. we can add minimum 5 files<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minimumFiles.errors\">{{userInfoFormGroup.controls.minimumFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum File</label>\r\n      <input type=\"file\" formControlName=\"maximumFile\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Maximum File' then you need to add 'File Type' input as 'Document'. we can add maximum 5 files<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.maximumFile.errors\">{{userInfoFormGroup.controls.maximumFile.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-file-message-validator',\r\n    templateUrl: './file-message.component.html'\r\n})\r\nexport class FileMessageValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            minMaxFiles:['', RxwebValidators.file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>MinMaxFiles</label>\r\n      <input type=\"file\" formControlName=\"minMaxFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minMaxFiles.errors\">{{userInfoFormGroup.controls.minMaxFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-file-dynamic-validator',\r\n    templateUrl: './file-dynamic.component.html'\r\n})\r\nexport class FileDynamicValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/file/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar userInfo = { fileType:'', totalImageFiles:'', totalDocumentFiles:'', minimumFiles:'', maximumFile:'', minMaxFiles:'',  }\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.group(userInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.file.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple  />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple  />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinimumFiles</label>\r\n      <input type=\"file\" formControlName=\"minimumFiles\" class=\"form-control\" multiple  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MinimumFiles' then you need to add 'File Type' input as 'Picture'. we can add minimum 5 files<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minimumFiles.errors\">{{userInfoFormGroup.controls.minimumFiles.errors.file.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinMaxFiles</label>\r\n      <input type=\"file\" formControlName=\"minMaxFiles\" class=\"form-control\" multiple  />\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.minMaxFiles.errors\">{{userInfoFormGroup.controls.minMaxFiles.errors.file.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"fileType\":{},\"totalImageFiles\":{\"file\":{\"maxFiles\":\"5\"}},\"totalDocumentFiles\":{\"file\":{\"minFiles\":\"5\"}},\"minimumFiles\":{\"file\":{\"minFiles\":\"5\",\"conditionalExpression\":\"x => x.fileType == \\\"Picture\\\"\"}},\"minMaxFiles\":{\"file\":{\"minFiles\":\"5\",\"maxFiles\":\"10\",\"message\":\"You can upload minimum 5 and maximum 10 files.\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-file-add-validator',\r\n    templateUrl: './file-add.component.html'\r\n})\r\nexport class FileAddValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            totalImageFiles:['', RxwebValidators.file({maxFiles:5 })], \r\n            totalDocumentFiles:['', RxwebValidators.file({minFiles:5 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n      <input type=\"file\" formControlName=\"totalImageFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalImageFiles.errors\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n      <input type=\"file\" formControlName=\"totalDocumentFiles\" class=\"form-control\" multiple />\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}