{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-complete-template-driven-validation-decorators',\r\n    templateUrl: './file-complete.component.html'\r\n})\r\nexport class FileCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select name=\"fileType\" [(ngModel)]=\"userinfo.fileType\"  class=\"form-control\" >\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.fileType?.errors\">{{userinfoForm.controls.fileType?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n\t    <input type=\"file\" name=\"totalImageFiles\" multiple [(ngModel)]=\"userinfo.totalImageFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.totalImageFiles?.errors\">{{userinfoForm.controls.totalImageFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n\t    <input type=\"file\" name=\"totalDocumentFiles\" multiple [(ngModel)]=\"userinfo.totalDocumentFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.totalDocumentFiles?.errors\">{{userinfoForm.controls.totalDocumentFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinimumFiles</label>\r\n\t    <input type=\"file\" name=\"minimumFiles\" multiple [(ngModel)]=\"userinfo.minimumFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MinimumFiles' then you need to add 'File Type' input as 'Picture'. we can add minimum 5 files<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.minimumFiles?.errors\">{{userinfoForm.controls.minimumFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinMaxFiles</label>\r\n\t    <input type=\"file\" name=\"minMaxFiles\" multiple [(ngModel)]=\"userinfo.minMaxFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.minMaxFiles?.errors\">{{userinfoForm.controls.minMaxFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@file({maxFiles:5 }) \r\n\ttotalImageFiles: number;\r\n\r\n\t@file({minFiles:5 }) \r\n\ttotalDocumentFiles: number;\r\n\r\n\t@file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\tminimumFiles: string;\r\n\r\n\t@file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tmaximumFile: string;\r\n\r\n\t@file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' }) \r\n\tminMaxFiles: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxFilesExample":{"notes":null,"component":null,"html":null,"model":"@file({maxFiles:5 }) \r\ntotalImageFiles: number;\r\n","modelName":null,"jsonName":null,"json":null},"maxFiles":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-maxFiles-template-driven-validation-decorators',\r\n    templateUrl: './file-max-files.component.html'\r\n})\r\nexport class FileMaxFilesTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n\t    <input type=\"file\" name=\"totalImageFiles\" multiple [(ngModel)]=\"userinfo.totalImageFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.totalImageFiles?.errors\">{{userinfoForm.controls.totalImageFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({maxFiles:5 }) \r\n\ttotalImageFiles: number;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"minFilesExample":{"notes":null,"component":null,"html":null,"model":"@file({minFiles:5 }) \r\ntotalDocumentFiles: number;\r\n","modelName":null,"jsonName":null,"json":null},"minFiles":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-minFiles-template-driven-validation-decorators',\r\n    templateUrl: './file-min-files.component.html'\r\n})\r\nexport class FileMinFilesTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n\t    <input type=\"file\" name=\"totalDocumentFiles\" multiple [(ngModel)]=\"userinfo.totalDocumentFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.totalDocumentFiles?.errors\">{{userinfoForm.controls.totalDocumentFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({minFiles:5 }) \r\n\ttotalDocumentFiles: number;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"minFilesExampleString":{"notes":null,"component":null,"html":null,"model":"@file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\nminimumFiles: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\nminimumFiles: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxFilesExampleFunction":{"notes":null,"component":null,"html":null,"model":"@file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\nmaximumFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\nmaximumFile: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './file-conditional-expression.component.html'\r\n})\r\nexport class FileConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select name=\"fileType\" [(ngModel)]=\"userinfo.fileType\"  class=\"form-control\" >\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.fileType?.errors\">{{userinfoForm.controls.fileType?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>MinimumFiles</label>\r\n\t    <input type=\"file\" name=\"minimumFiles\" multiple [(ngModel)]=\"userinfo.minimumFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MinimumFiles' then you need to add 'File Type' input as 'Picture'. we can add minimum 5 files<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.minimumFiles?.errors\">{{userinfoForm.controls.minimumFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@file({minFiles:5  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\tminimumFiles: string;\r\n\r\n\t@file({maxFiles:5  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tmaximumFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' }) \r\nminMaxFiles: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-message-template-driven-validation-decorators',\r\n    templateUrl: './file-message.component.html'\r\n})\r\nexport class FileMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>MinMaxFiles</label>\r\n\t    <input type=\"file\" name=\"minMaxFiles\" multiple [(ngModel)]=\"userinfo.minMaxFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.minMaxFiles?.errors\">{{userinfoForm.controls.minMaxFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({minFiles:5  ,maxFiles:10  ,message:'You can upload minimum 5 and maximum 10 files.' }) \r\n\tminMaxFiles: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-file-add-template-driven-validation-decorators',\r\n    templateUrl: './file-add.component.html'\r\n})\r\nexport class FileAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Total Image Files</label>\r\n\t    <input type=\"file\" name=\"totalImageFiles\" multiple [(ngModel)]=\"userinfo.totalImageFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.totalImageFiles?.errors\">{{userinfoForm.controls.totalImageFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Document Files</label>\r\n\t    <input type=\"file\" name=\"totalDocumentFiles\" multiple [(ngModel)]=\"userinfo.totalDocumentFiles\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.totalDocumentFiles?.errors\">{{userinfoForm.controls.totalDocumentFiles?.errors.file.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  file, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@file({maxFiles:5 }) \r\n\ttotalImageFiles: number;\r\n\r\n\t@file({minFiles:5 }) \r\n\ttotalDocumentFiles: number;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null}}