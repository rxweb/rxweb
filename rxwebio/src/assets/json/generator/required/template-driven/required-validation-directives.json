{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-required-complete-template-driven-validation-directives',\r\n    templateUrl: './required-complete.component.html'\r\n})\r\nexport class RequiredCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n\t    <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\" required/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last Name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstName?.errors\">{{userForm.controls.firstName?.errors.required.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n\t    <input type=\"text\" name=\"lastName\" [(ngModel)]=\"user.lastName\"  class=\"form-control\" [required]=\"{'conditionalExpression':'x => x.firstName == \\'Bharat\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Conditional Required Validation.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'FirstName' field have value of 'Bharat'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.lastName?.errors\">{{userForm.controls.lastName?.errors.required.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>UserName</label>\r\n\t    <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\" [required]=\"{'message':'Username cannot be blank.'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.userName?.errors\">{{userForm.controls.userName?.errors.required.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstName: string;\r\n\r\n\tmiddleName: string;\r\n\r\n\tlastName: string;\r\n\r\n\tuserName: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[required]=\"{'conditionalExpression':(x,y) => x.firstName == \\'Bharat\\' }\"","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-required-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './required-conditional-expression.component.html'\r\n})\r\nexport class RequiredConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n\t    <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\" required/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last Name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstName?.errors\">{{userForm.controls.firstName?.errors.required.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n\t    <input type=\"text\" name=\"lastName\" [(ngModel)]=\"user.lastName\"  class=\"form-control\" [required]=\"{'conditionalExpression':'x => x.firstName == \\'Bharat\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Conditional Required Validation.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'FirstName' field have value of 'Bharat'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.lastName?.errors\">{{userForm.controls.lastName?.errors.required.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstName: string;\r\n\r\n\tlastName: string;\r\n\r\n\tmiddleName: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[required]=\"{'conditionalExpression':'x => x.firstName == \\'Bharat\\''}\"","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"[required]=\"{'message':'Username cannot be blank.'}\"","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-required-message-template-driven-validation-directives',\r\n    templateUrl: './required-message.component.html'\r\n})\r\nexport class RequiredMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>UserName</label>\r\n\t    <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\" [required]=\"{'message':'Username cannot be blank.'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.userName?.errors\">{{userForm.controls.userName?.errors.required.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tuserName: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-required-add-template-driven-validation-directives',\r\n    templateUrl: './required-add.component.html'\r\n})\r\nexport class RequiredAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n\t    <input type=\"text\" name=\"firstName\" [(ngModel)]=\"userinfo.firstName\"  class=\"form-control\" required/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls.firstName?.errors\">{{userinfoForm.controls.firstName?.errors.required.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class UserInfo {\r\n\r\n\tfirstName: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null}}