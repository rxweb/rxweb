{"rightSidebarLinks":[{"id":"factor","title":"factor (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicfactorvalidation","title":"Basic Factor Validation","subLink":[]},{"id":"factorconfig","title":"FactorConfig","subLink":[{"title":"dividend","id":"dividend"},{"title":"fieldName","id":"fieldname"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completefactorexample","title":"Complete Factor Example","subLink":[]},{"id":"dynamicfactorexample","title":"Dynamic Factor Example","subLink":[]},{"id":"githubissues","title":"factor Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"factor","description":" factor validation decorators will allow user to enter factor of a number which is called dividend.","validatorType":"decorators","validationTypeTitle":"Decorators","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"factor-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-factor-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-edit-component\"></div> \r\n<p class='showHideElement' >The below code is `user-data.json` for getting data from the server</p>\r\n<div component=\"app-code\" key=\"data-json\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"factor-edit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-factor-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-factor-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-complete-component\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-factor-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"factor-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/form-validations/factor/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a user form in which you want user to enter factor of a particular value which contains fields like firstNumber, secondNumber, ThirdNumber and fourthNumber. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n   <li>Apply factor validation on firstNumber field by setting  dividend property as 50 so the validation will allow only factors of 50</li>\r\n   <li>Apply factor validation based on matched condition in the form, like if the firstNumber  is <span class='highlighted'>25</span> then the Fourthyear value should be factor.</li>\r\n   <li>The Custom Message on ThirdNumber field.</li>\r\n   <li>Apply factor validation based of dividend, dividend is the value for which factors are calculated.</li>\r\n   <data-scope scope=\"['decorator','validator']\">\r\n   <li>Apply factor validation dynamically based on server rules.</li>\r\n   </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how factor decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicfactorvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Factor Validation<a title='Link to this heading' class='link-header'  href='/form-validations/factor/decorators#basicfactorvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a User Model class and define property of firstNumber and secondNumber in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"factor-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'factorconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >FactorConfig<a title='Link to this heading' class='link-header'  href='/form-validations/factor/decorators#factorconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@factor()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#dividend\" (click)='scrollTo(\"#dividend\")' title=\"dividend\">dividend</a></td><td>Dividend is the value for which factors are calculated.</td></tr>\r\n<tr><td><a href=\"#fieldName\" (click)='scrollTo(\"#fieldName\")' title=\"fieldName\">fieldName</a></td><td>Current property is matched with the particular property. so we need to pass particular property name.</td></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Factor validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'dividend'>\r\n<div class='col-lg-12'>\r\n<h2>dividend<a title='Link to this heading' class='link-header'  href='/form-validations/factor/decorators#dividend'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' > Dividend is the value for which factors are calculated.</p>\r\n<div component=\"app-code\" key=\"factor-dividendExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-factor-dividend\" title=\"factor decorator with dividend\" key=\"dividend\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'fieldname'>\r\n<div class='col-lg-12'>\r\n<h2>fieldName<a title='Link to this heading' class='link-header'  href='/form-validations/factor/decorators#fieldname'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Current property is matched with the particular property. so we need to pass particular property name.</p>\r\n<div component=\"app-code\" key=\"factor-fieldNameExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-factor-fieldName\" title=\"factor decorator with fieldName\" key=\"fieldName\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header'  href='/form-validations/factor/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >factor validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"factor-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"factor-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-factor-conditionalExpression\" title=\"factor decorator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/form-validations/factor/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"factor-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-factor-message\" title=\"factor decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completefactorexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Factor Example<a title='Link to this heading' class='link-header'  href='/form-validations/factor/decorators#completefactorexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete Factor example which includes all the FactorConfig properties will fulfil the requirement of scenarios 1, 2, 3 and 4</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicfactorexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic Factor Example<a title='Link to this heading' class='link-header' href='/form-validations/factor/decorators#dynamicfactorexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic Factor example which execute based on json passed. conditional expression with function would be not apply in dynamic factor example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/factor/decorators#githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}