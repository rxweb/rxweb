{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factor-complete-template-driven-validation-directives',\r\n    templateUrl: './factor-complete.component.html'\r\n})\r\nexport class FactorCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n\t    <input type=\"text\" name=\"firstNumber\" [(ngModel)]=\"user.firstNumber\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' or 'Third Number', then you need to add 'First Number' input as '25'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstNumber?.errors\">{{userForm.controls.firstNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n\t    <input type=\"text\" name=\"fifthNumber\" [(ngModel)]=\"user.fifthNumber\"  class=\"form-control\" [factor]=\"{'fieldName':'firstNumber'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.fifthNumber?.errors\">{{userForm.controls.fifthNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Number</label>\r\n\t    <input type=\"text\" name=\"thirdNumber\" [(ngModel)]=\"user.thirdNumber\"  class=\"form-control\" [factor]=\"{'fieldName':'firstNumber','conditionalExpression':'x => x.firstNumber == 25'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fourth Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.thirdNumber?.errors\">{{userForm.controls.thirdNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n\t    <input type=\"text\" name=\"fourthNumber\" [(ngModel)]=\"user.fourthNumber\"  class=\"form-control\" [factor]=\"{'dividend':50}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.fourthNumber?.errors\">{{userForm.controls.fourthNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Sixth Number</label>\r\n\t    <input type=\"text\" name=\"sixthNumber\" [(ngModel)]=\"user.sixthNumber\"  class=\"form-control\" [factor]=\"{'dividend':30,'message':'Sixth Number is not a factor of 50'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.sixthNumber?.errors\">{{userForm.controls.sixthNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstNumber: number;\r\n\r\n\tfifthNumber: number;\r\n\r\n\tsecondNumber: number;\r\n\r\n\tthirdNumber: number;\r\n\r\n\tfourthNumber: number;\r\n\r\n\tsixthNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"[factor]=\"{'fieldName':'firstNumber'}\"","modelName":null,"jsonName":null,"json":null},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factor-fieldName-template-driven-validation-directives',\r\n    templateUrl: './factor-field-name.component.html'\r\n})\r\nexport class FactorFieldNameTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n\t    <input type=\"text\" name=\"firstNumber\" [(ngModel)]=\"user.firstNumber\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' or 'Third Number', then you need to add 'First Number' input as '25'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstNumber?.errors\">{{userForm.controls.firstNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n\t    <input type=\"text\" name=\"fifthNumber\" [(ngModel)]=\"user.fifthNumber\"  class=\"form-control\" [factor]=\"{'fieldName':'firstNumber'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.fifthNumber?.errors\">{{userForm.controls.fifthNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstNumber: number;\r\n\r\n\tfifthNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExampleFunction":{"notes":null,"component":null,"html":null,"model":"[factor]=\"{'fieldName':'firstNumber','conditionalExpression':(x,y) =>x.firstNumber == 25 }\"","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[factor]=\"{'fieldName':'firstNumber','conditionalExpression':(x,y) =>x.firstNumber == 25 }\"","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factor-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './factor-conditional-expression.component.html'\r\n})\r\nexport class FactorConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n\t    <input type=\"text\" name=\"firstNumber\" [(ngModel)]=\"user.firstNumber\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' or 'Third Number', then you need to add 'First Number' input as '25'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstNumber?.errors\">{{userForm.controls.firstNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Number</label>\r\n\t    <input type=\"text\" name=\"thirdNumber\" [(ngModel)]=\"user.thirdNumber\"  class=\"form-control\" [factor]=\"{'fieldName':'firstNumber','conditionalExpression':'x => x.firstNumber == 25'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fourth Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.thirdNumber?.errors\">{{userForm.controls.thirdNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstNumber: number;\r\n\r\n\tthirdNumber: number;\r\n\r\n\tsecondNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"fieldNameExampleString":{"notes":null,"component":null,"html":null,"model":"[factor]=\"{'fieldName':'firstNumber','conditionalExpression':'x => x.firstNumber == 25'}\"","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[factor]=\"{'fieldName':'firstNumber','conditionalExpression':'x => x.firstNumber == 25'}\"","modelName":null,"jsonName":null,"json":null},"dividendExample":{"notes":null,"component":null,"html":null,"model":"[factor]=\"{'dividend':50}\"","modelName":null,"jsonName":null,"json":null},"dividend":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factor-dividend-template-driven-validation-directives',\r\n    templateUrl: './factor-dividend.component.html'\r\n})\r\nexport class FactorDividendTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n\t    <input type=\"text\" name=\"fourthNumber\" [(ngModel)]=\"user.fourthNumber\"  class=\"form-control\" [factor]=\"{'dividend':50}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.fourthNumber?.errors\">{{userForm.controls.fourthNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfourthNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"[factor]=\"{'dividend':30,'message':'Sixth Number is not a factor of 50'}\"","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factor-message-template-driven-validation-directives',\r\n    templateUrl: './factor-message.component.html'\r\n})\r\nexport class FactorMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Sixth Number</label>\r\n\t    <input type=\"text\" name=\"sixthNumber\" [(ngModel)]=\"user.sixthNumber\"  class=\"form-control\" [factor]=\"{'dividend':30,'message':'Sixth Number is not a factor of 50'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.sixthNumber?.errors\">{{userForm.controls.sixthNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tsixthNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factor-add-template-driven-validation-directives',\r\n    templateUrl: './factor-add.component.html'\r\n})\r\nexport class FactorAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n\t    <input type=\"text\" name=\"firstNumber\" [(ngModel)]=\"user.firstNumber\"  class=\"form-control\" [factor]=\"{'dividend':50}\"/>\r\n\r\n      <small class=\"form-text text-muted\">You can only enter factors of 50<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstNumber?.errors\">{{userForm.controls.firstNumber?.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstNumber: Number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null}}