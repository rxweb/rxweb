{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minLength-complete-validator',\r\n    templateUrl: './min-length-complete.component.html'\r\n})\r\nexport class MinLengthCompleteValidatorComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.contactFormGroup = this.formBuilder.group({\r\n            countryName:['',], \r\n            mobileNo:['', RxwebValidators.minLength({value:10 })], \r\n            landLineNo:['', RxwebValidators.minLength({value:8  ,message:'Minimum 8 characters are allowed' })], \r\n            countryCode:['', RxwebValidators.minLength({value:3  ,conditionalExpression:(x,y)=> x.countryName == \"India\" })], \r\n            stateCode:['', RxwebValidators.minLength({value:3  ,conditionalExpression:'x => x.countryName == \"India\"' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' or 'State Code', then you need to add 'Country Name' input as 'India'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Mobile No.</label>\r\n      <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.mobileNo.errors\">{{contactFormGroup.controls.mobileNo.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Land line No</label>\r\n      <input type=\"text\" formControlName=\"landLineNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.landLineNo.errors\">{{contactFormGroup.controls.landLineNo.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Country Code</label>\r\n      <input type=\"text\" formControlName=\"countryCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n      <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryCode.errors\">{{contactFormGroup.controls.countryCode.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Code</label>\r\n      <input type=\"text\" formControlName=\"stateCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n      <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.stateCode.errors\">{{contactFormGroup.controls.stateCode.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minLength({value:10 });\r\n","modelName":null,"jsonName":null,"json":null},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minLength-value-validator',\r\n    templateUrl: './min-length-value.component.html'\r\n})\r\nexport class MinLengthValueValidatorComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.contactFormGroup = this.formBuilder.group({\r\n            mobileNo:['', RxwebValidators.minLength({value:10 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Mobile No.</label>\r\n      <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.mobileNo.errors\">{{contactFormGroup.controls.mobileNo.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minLength({value:8  ,message:'Minimum 8 characters are allowed' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minLength-message-validator',\r\n    templateUrl: './min-length-message.component.html'\r\n})\r\nexport class MinLengthMessageValidatorComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.contactFormGroup = this.formBuilder.group({\r\n            landLineNo:['', RxwebValidators.minLength({value:8  ,message:'Minimum 8 characters are allowed' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Land line No</label>\r\n      <input type=\"text\" formControlName=\"landLineNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.landLineNo.errors\">{{contactFormGroup.controls.landLineNo.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minLength({value:3  ,conditionalExpression:(x,y)=> x.countryName == \"India\" });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minLength({value:3  ,conditionalExpression:(x,y)=> x.countryName == \"India\" });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minLength-conditionalExpression-validator',\r\n    templateUrl: './min-length-conditional-expression.component.html'\r\n})\r\nexport class MinLengthConditionalExpressionValidatorComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.contactFormGroup = this.formBuilder.group({\r\n            countryName:['',], \r\n            stateCode:['', RxwebValidators.minLength({value:3  ,conditionalExpression:'x => x.countryName == \"India\"' })], \r\n            countryCode:['', RxwebValidators.minLength({value:3  ,conditionalExpression:(x,y)=> x.countryName == \"India\" })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' or 'State Code', then you need to add 'Country Name' input as 'India'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Code</label>\r\n      <input type=\"text\" formControlName=\"stateCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n      <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.stateCode.errors\">{{contactFormGroup.controls.stateCode.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Country Code</label>\r\n      <input type=\"text\" formControlName=\"countryCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n      <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryCode.errors\">{{contactFormGroup.controls.countryCode.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"valueExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minLength({value:3  ,conditionalExpression:'x => x.countryName == \"India\"' });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minLength({value:3  ,conditionalExpression:'x => x.countryName == \"India\"' });\r\n","modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minLength-dynamic-validator',\r\n    templateUrl: './min-length-dynamic.component.html'\r\n})\r\nexport class MinLengthDynamicValidatorComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/minLength/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar contact = { countryName:'', mobileNo:'', landLineNo:'', countryCode:'', stateCode:'',  }\r\n\t\t\tthis.contactFormGroup = this.formBuilder.group(contact,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"contactFormGroup\"  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' or 'State Code', then you need to add 'Country Name' input as 'India'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Mobile No.</label>\r\n      <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.mobileNo.errors\">{{contactFormGroup.controls.mobileNo.errors.minLength.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Land line No</label>\r\n      <input type=\"text\" formControlName=\"landLineNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.landLineNo.errors\">{{contactFormGroup.controls.landLineNo.errors.minLength.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Code</label>\r\n      <input type=\"text\" formControlName=\"stateCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n      <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.stateCode.errors\">{{contactFormGroup.controls.stateCode.errors.minLength.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"countryName\":{},\"mobileNo\":{\"minLength\":{\"value\":\"10\"}},\"landLineNo\":{\"minLength\":{\"value\":\"8\",\"message\":\"Minimum 8 characters are allowed\"}},\"stateCode\":{\"minLength\":{\"value\":\"3\",\"conditionalExpression\":\"x => x.countryName == \\\"India\\\"\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minLength-add-validator',\r\n    templateUrl: './min-length-add.component.html'\r\n})\r\nexport class MinLengthAddValidatorComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.contactFormGroup = this.formBuilder.group({\r\n            countryName:['', RxwebValidators.minLength({value:3 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}