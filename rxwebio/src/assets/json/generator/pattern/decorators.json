{"rightSidebarLinks":[{"id":"pattern","title":"pattern (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicpatternvalidation","title":"Basic Pattern Validation","subLink":[]},{"id":"patternconfig","title":"PatternConfig","subLink":[{"title":"expression","id":"expression"},{"title":"message","id":"message"},{"title":"conditionalExpression","id":"conditionalexpression"}]},{"id":"completepatternexample","title":"Complete pattern Example","subLink":[]},{"id":"dynamicpatternexample","title":"Dynamic pattern Example","subLink":[]},{"id":"githubissues","title":"pattern Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"pattern","description":" Pattern validation decorators will allow user to enter the input which match the predefined pattern value parameter.","validatorType":"decorators","validationTypeTitle":"Decorators","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"pattern-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-edit-component\"></div> \r\n<p class='showHideElement' >The below code is `user-data.json` for getting data from the server</p>\r\n<div component=\"app-code\" key=\"pattern-edit-json\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"pattern-edit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-pattern-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-pattern-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/form-validations/pattern/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a User form, which contains fields like Username, Zipcode, Age and you want the user to enter the input which contains the predefined value. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n<li>Allow input which contains only Alphabet in Username.</li>\r\n<li>Apply pattern validation based on matched condition in the form, like if the Username is <span class='highlighted'>John</span>, then only the the pattern validation must be applied to Age value(i.e., Age field must only be a digit).</li>\r\n<li>Adding Custom Message on Zipcode Field.</li>\r\n<li>Apply pattern validation dynamically based on server rules.</li>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how pattern decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicpatternvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Pattern Validation<a title='Link to this heading' class='link-header'  href='/form-validations/pattern/decorators#basicpatternvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a User class and define a property of UserName in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"pattern-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'patternconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >PatternConfig<a title='Link to this heading' class='link-header'  href='/form-validations/pattern/decorators#patternconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@pattern()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#expression\")' title=\"expression\">expression</a></td><td>Enter specific regex expression </td></tr>\r\n<tr><td><a (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>pattern validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'expression'>\r\n<div class='col-lg-12'>\r\n<h2>expression<a title='Link to this heading' class='link-header'  href='/form-validations/pattern/decorators#expression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >enter specific regex expression</p>\r\n<div component=\"app-code\" key=\"pattern-expressionExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-expression\" title=\"pattern decorator with expression\" key=\"expression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/form-validations/pattern/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"pattern-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-message\" title=\"pattern decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header'  href='/form-validations/pattern/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Pattern validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"pattern-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"pattern-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-conditionalExpression\" title=\"pattern decorator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completepatternexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete pattern Example<a title='Link to this heading' class='link-header'  href='/form-validations/pattern/decorators#completepatternexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete pattern example which includes all the PatternConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicpatternexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic pattern Example<a title='Link to this heading' class='link-header' href='/form-validations/pattern/decorators#dynamicpatternexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic pattern example which execute based on json passed. conditional expression with function would be not apply in dynamic pattern example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/pattern/decorators#githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}