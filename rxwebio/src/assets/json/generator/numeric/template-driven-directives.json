{"rightSidebarLinks":[{"id":"numeric","title":"numeric (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicnumericvalidation","title":"Basic Numeric Validation","subLink":[]},{"id":"numericconfig","title":"NumericConfig","subLink":[{"title":"acceptValue","id":"acceptvalue"},{"title":"allowDecimal","id":"allowdecimal"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completenumericexample","title":"Complete numeric Example","subLink":[]},{"id":"githubissues","title":"numeric Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"numeric","description":" numeric validation  template driven  will check whether the value entered is a valid numberic value or not.The validation can be set according to requirement, it can be either decimal,negative number or positive number.","validatorType":"template-driven","validationTypeTitle":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-numeric-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"numeric-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"numeric-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"numeric-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a user form, which contains fields like DataType, integerNumber, integerNumber and you want the user to enter only numeric value depending on validation of the property. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n<li>Allow only positive numbers in integerNumber.</li>\r\n<li>Allow only Negative numbers in integerNumber.</li>\r\n<li>Allow decimal value in integerNumber  </li>\r\n<li>Apply numeric validation based on matched condition in the form, like if the dataType  is ‘Integer’ then the number value should be Integer number.</li>\r\n<li>Adding Custom Message on Negative value Field.</li>\r\n</ol>\r\n<p class='showHideElement' >Let’s see how Numeric template driven fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicnumericvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Numeric Validation<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#basicnumericvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a User class and define a property of Integer Number in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"numeric-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"numeric-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"numeric-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-numeric-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'numericconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >NumericConfig<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#numericconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>numeric</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#acceptValue\")' title=\"acceptValue\">acceptValue</a></td><td> To apply validation based on checking positive or negative value or both. </td></tr>\r\n<tr><td><a   (click)='scrollTo(\"#allowDecimal\")' title=\"allowDecimal\">allowDecimal</a></td><td>This will allow decimal in particular control property.The default value is <span class='highlighted'>false</span>.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Numeric validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'acceptvalue'>\r\n<div class='col-lg-12'>\r\n<h2>acceptValue<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#acceptvalue'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>NumericValueType</span> </p>\r\n<div component=\"app-code\" key=\"numeric-acceptValueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-numeric-acceptValue\" title=\"numeric template driven with acceptValue\" key=\"acceptValue\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'allowdecimal'>\r\n<div class='col-lg-12'>\r\n<h2>allowDecimal<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#allowdecimal'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>boolean</span> </p>\r\n<p class='showHideElement' >This will allow decimal in particular control property.The default value is <span class='highlighted'>false</span>.</p>\r\n<div component=\"app-code\" key=\"numeric-allowDecimalExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-numeric-allowDecimal\" title=\"numeric template driven with allowDecimal\" key=\"allowDecimal\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Numeric validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"numeric-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-numeric-conditionalExpression\" title=\"numeric template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"numeric-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-numeric-message\" title=\"numeric template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completenumericexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete numeric Example<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#completenumericexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete numeric example which includes all the NumericConfig properties will fulfil the requirement of scenarios 1, 2, 3, 4 and 5.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/numeric/template-driven/directives#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}