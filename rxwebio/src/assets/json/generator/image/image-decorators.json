{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-complete',\r\n    templateUrl: './image-complete.component.html'\r\n})\r\nexport class ImageCompleteComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tImageTypes = [ \"Picture\", \"IdentityCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Image Type</label>\r\n      <select formControlName=\"imageType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ImageTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.imageType.errors\">{{userInfoFormGroup.controls.imageType.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Signature</label>\r\n      <input type=\"file\" formControlName=\"signature\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.signature.errors\">{{userInfoFormGroup.controls.signature.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Identity Card</label>\r\n      <input type=\"file\" formControlName=\"identityCard\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.identityCard.errors\">{{userInfoFormGroup.controls.identityCard.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Driving License</label>\r\n      <input type=\"file\" formControlName=\"drivinglicense\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.drivinglicense.errors\">{{userInfoFormGroup.controls.drivinglicense.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Aadhar Card</label>\r\n      <input type=\"file\" formControlName=\"aadharCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Aadhar Card' then you need to add 'Image Type' input as 'IdentityCard'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.aadharCard.errors\">{{userInfoFormGroup.controls.aadharCard.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Pan Card</label>\r\n      <input type=\"file\" formControlName=\"panCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document File' then you need to add 'File Type' input as 'IdentityCard'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.panCard.errors\">{{userInfoFormGroup.controls.panCard.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Residence Proof</label>\r\n      <input type=\"file\" formControlName=\"residenceProof\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Invalid Image height or width.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.residenceProof.errors\">{{userInfoFormGroup.controls.residenceProof.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\timageType: string;\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100 }) \r\n\tprofilePhoto: string;\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100 }) \r\n\tsignature: string;\r\n\r\n\t@image({minHeight:10  ,maxHeight:100  ,maxWidth:100 }) \r\n\tidentityCard: string;\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100 }) \r\n\tdrivinglicense: string;\r\n\r\n\t@image({maxHeight:50  ,maxWidth:100  ,conditionalExpression:'x => x.ImageType == \"IdentityCard\"' }) \r\n\taadharCard: string;\r\n\r\n\t@image({maxHeight:100  ,maxWidth:200  ,conditionalExpression:'(x,y) => x.ImageType == \"IdentityCard\"' }) \r\n\tpanCard: string;\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100  ,message:'File exceed maximum Height.' }) \r\n\tresidenceProof: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxHeightExample":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:100  ,maxWidth:100 }) \r\nprofilePhoto: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxHeight":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-maxHeight',\r\n    templateUrl: './image-max-height.component.html'\r\n})\r\nexport class ImageMaxHeightComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100 }) \r\n\tprofilePhoto: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxWidthExample":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:100  ,maxWidth:100 }) \r\nprofilePhoto: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxWidth":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-maxWidth',\r\n    templateUrl: './image-max-width.component.html'\r\n})\r\nexport class ImageMaxWidthComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100 }) \r\n\tprofilePhoto: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"minHeightExample":{"notes":null,"component":null,"html":null,"model":"@image({minHeight:10  ,maxHeight:100  ,maxWidth:100 }) \r\nidentityCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"minHeight":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-minHeight',\r\n    templateUrl: './image-min-height.component.html'\r\n})\r\nexport class ImageMinHeightComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Identity Card</label>\r\n      <input type=\"file\" formControlName=\"identityCard\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.identityCard.errors\">{{userInfoFormGroup.controls.identityCard.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@image({minHeight:10  ,maxHeight:100  ,maxWidth:100 }) \r\n\tidentityCard: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"maxHeightExampleString":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:50  ,maxWidth:100  ,conditionalExpression:'x => x.ImageType == \"IdentityCard\"' }) \r\naadharCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxWidthExampleString":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:50  ,maxWidth:100  ,conditionalExpression:'x => x.ImageType == \"IdentityCard\"' }) \r\naadharCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:50  ,maxWidth:100  ,conditionalExpression:'x => x.ImageType == \"IdentityCard\"' }) \r\naadharCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxHeightExampleFunction":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:100  ,maxWidth:200  ,conditionalExpression:'(x,y) => x.ImageType == \"IdentityCard\"' }) \r\npanCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"maxWidthExampleFunction":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:100  ,maxWidth:200  ,conditionalExpression:'(x,y) => x.ImageType == \"IdentityCard\"' }) \r\npanCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:100  ,maxWidth:200  ,conditionalExpression:'(x,y) => x.ImageType == \"IdentityCard\"' }) \r\npanCard: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-conditionalExpression',\r\n    templateUrl: './image-conditional-expression.component.html'\r\n})\r\nexport class ImageConditionalExpressionComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Aadhar Card</label>\r\n      <input type=\"file\" formControlName=\"aadharCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Aadhar Card' then you need to add 'Image Type' input as 'IdentityCard'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.aadharCard.errors\">{{userInfoFormGroup.controls.aadharCard.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Pan Card</label>\r\n      <input type=\"file\" formControlName=\"panCard\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document File' then you need to add 'File Type' input as 'IdentityCard'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.panCard.errors\">{{userInfoFormGroup.controls.panCard.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@image({maxHeight:50  ,maxWidth:100  ,conditionalExpression:'x => x.ImageType == \"IdentityCard\"' }) \r\n\taadharCard: string;\r\n\r\n\t@image({maxHeight:100  ,maxWidth:200  ,conditionalExpression:'(x,y) => x.ImageType == \"IdentityCard\"' }) \r\n\tpanCard: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@image({maxHeight:100  ,maxWidth:100  ,message:'File exceed maximum Height.' }) \r\nresidenceProof: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-message',\r\n    templateUrl: './image-message.component.html'\r\n})\r\nexport class ImageMessageComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Residence Proof</label>\r\n      <input type=\"file\" formControlName=\"residenceProof\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Invalid Image height or width.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.residenceProof.errors\">{{userInfoFormGroup.controls.residenceProof.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100  ,message:'File exceed maximum Height.' }) \r\n\tresidenceProof: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-dynamic',\r\n    templateUrl: './image-dynamic.component.html'\r\n})\r\nexport class ImageDynamicComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tImageTypes = [ \"Picture\", \"IdentityCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/image/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.formGroup(userInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Image Type</label>\r\n      <select formControlName=\"imageType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ImageTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.imageType.errors\">{{userInfoFormGroup.controls.imageType.errors.image.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Signature</label>\r\n      <input type=\"file\" formControlName=\"signature\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.signature.errors\">{{userInfoFormGroup.controls.signature.errors.image.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Identity Card</label>\r\n      <input type=\"file\" formControlName=\"identityCard\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.identityCard.errors\">{{userInfoFormGroup.controls.identityCard.errors.image.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Driving License</label>\r\n      <input type=\"file\" formControlName=\"drivinglicense\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.drivinglicense.errors\">{{userInfoFormGroup.controls.drivinglicense.errors.image.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Aadhar Card</label>\r\n      <input type=\"file\" formControlName=\"aadharCard\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Aadhar Card' then you need to add 'Image Type' input as 'IdentityCard'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.aadharCard.errors\">{{userInfoFormGroup.controls.aadharCard.errors.image.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Residence Proof</label>\r\n      <input type=\"file\" formControlName=\"residenceProof\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">Invalid Image height or width.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.residenceProof.errors\">{{userInfoFormGroup.controls.residenceProof.errors.image.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\timageType: string;\r\n\r\n\t@prop()\r\n\tprofilePhoto: string;\r\n\r\n\t@prop()\r\n\tsignature: string;\r\n\r\n\t@prop()\r\n\tidentityCard: string;\r\n\r\n\t@prop()\r\n\tdrivinglicense: string;\r\n\r\n\t@prop()\r\n\taadharCard: string;\r\n\r\n\t@prop()\r\n\tresidenceProof: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":"dynamic.json","json":"{\"imageType\":{},\"profilePhoto\":{\"image\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\"}},\"signature\":{\"image\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\"}},\"identityCard\":{\"image\":{\"minHeight\":\"10\",\"maxHeight\":\"100\",\"maxWidth\":\"100\"}},\"drivinglicense\":{\"image\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\"}},\"aadharCard\":{\"image\":{\"maxHeight\":\"50\",\"maxWidth\":\"100\",\"conditionalExpression\":\"x => x.ImageType == \\\"IdentityCard\\\"\"}},\"residenceProof\":{\"image\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\",\"message\":\"File exceed maximum Height.\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-add',\r\n    templateUrl: './image-add.component.html'\r\n})\r\nexport class ImageAddComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded image must be in the proper height and width.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100 }) \r\n\tprofilePhoto: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-image-edit',\r\n    templateUrl: './image-edit.component.html'\r\n})\r\nexport class ImageEditComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/image/edit/user-info-data.json').subscribe(userInfo => {\r\n            this.userInfoFormGroup = this.formBuilder.formGroup<UserInfo>(UserInfo,userInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded image must be in the proper height and width.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  image, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@image({maxHeight:100  ,maxWidth:100 }) \r\n\tprofilePicture: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":"user-info-data.json","json":"{\"profilePicture\":\"google.jpg\"}"}}