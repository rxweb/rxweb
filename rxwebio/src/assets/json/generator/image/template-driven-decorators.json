{"rightSidebarLinks":[{"id":"image","title":"image (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicimagevalidation","title":"Basic image Validation","subLink":[]},{"id":"imageconfig","title":"imageConfig","subLink":[{"title":"maxWidth","id":"maxwidth"},{"title":"maxHeight","id":"maxheight"},{"title":"minWidth","id":"minwidth"},{"title":"minHeight","id":"minheight"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completeimageexample","title":"Complete image Example","subLink":[]},{"id":"githubissues","title":"image Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"image","description":" image validation  template driven  allows user to validate image like height,width etc .","validatorType":"template-driven","validationTypeTitle":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-image-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"image-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"image-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"image-complete-html\"></div>\r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a User form, which contains fields like ProfilePhoto, Signature, DrivingLicense,IdentityCard,DrvingLicense,VoterId,AadharCard, and you want the user to enter only the hex color format. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n    <li>Allow validation using maxwidth on field of ProfilePhoto.</li>\r\n    <li>Apply image validation based on maxheight in Signature</li>\r\n    <li>Adding Custom Message on VoterId field.</li>\r\n   <li>Apply validation on AadharCard field based on matched condition in the form, like if the ImageType is 'IdentityCard', then the AadharCard must be a Image format (Used as a function).</li>\r\n   <li>Apply validation on PanCard field based on matched condition in the form, like if the ImageType is 'IdentityCard', then the PanCard must be a Image format (Used as a string datatype).</li>\r\n   <li>Adding custom message on residenceProof field.</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n    <li>Apply image validation dynamically based on server rules.</li>\r\n    </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how image  template driven  fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicimagevalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic image Validation<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#basicimagevalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a User class and define a property of ProfilePhoto in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"image-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"image-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"image-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-image-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'imageconfig'>\r\n<div class='col-lg-12'>\r\n<h2>imageConfig<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#imageconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>image</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  title=\"maxWidth\">maxWidth</a></td><td>To set the maximum Width of the Image</td></tr>\r\n<tr><td><a title=\"maxHeight\">maxHeight</a></td><td>To set the maximum Height of the Image</td></tr>\r\n<tr><td><a title=\"minWidth\">minWidth</a></td><td>To set the minimum Width of the Image</td></tr>\r\n<tr><td><a title=\"minHeight\">minHeight</a></td><td>To set the minimum Height of the Image</td></tr>\r\n<tr><td><a  title=\"conditionalExpression\">conditionalExpression</a></td><td>image validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'maxwidth'>\r\n<div class='col-lg-12'>\r\n<h2>maxWidth<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#maxwidth'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To set the maximum Width of the Image.</p>\r\n<div component=\"app-code\" key=\"image-maxWidthExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-image-maxWidth\" title=\"image template driven with maxWidth\" key=\"maxWidth\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'maxheight'>\r\n<div class='col-lg-12'>\r\n<h2>maxHeight<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#maxheight'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To set the maximum Height of the Image.</p>\r\n<div component=\"app-code\" key=\"image-maxHeightExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-image-maxHeight\" title=\"image template driven with maxHeight\" key=\"maxHeight\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'minwidth'>\r\n<div class='col-lg-12'>\r\n<h2>minWidth<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#minwidth'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To set the minimum Width of the Image.</p>\r\n<div component=\"app-code\" key=\"image-minWidthExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-image-minWidth\" title=\"image template driven with minWidth\" key=\"minWidth\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'minheight'>\r\n<div class='col-lg-12'>\r\n<h2>minHeight<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#minheight'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To set the minimum Height of the Image.</p>\r\n<div component=\"app-code\" key=\"image-minHeightExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-image-minHeight\" title=\"image template driven with minHeight\" key=\"minHeight\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >image validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"image-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-image-conditionalExpression\" title=\"image template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"image-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-image-message\" title=\"image template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeimageexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete image Example<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/decorators#completeimageexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete image example which includes all the imageConfig properties will fulfil the requirement of scenarios 1, 2, 3,4 and 5</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/image/template-driven/directives#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}