{
    "importModules":"import { BrowserModule } from '@angular\/platform-browser';\r\nimport { NgModule } from '@angular\/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular\/forms'; \r\n\r\nimport { RxReactiveFormsModule } from '@rxweb\/reactive-form-validators';\r\n\r\nimport {AppComponent} from '.\/app.component';\r\n\r\n    @NgModule({\r\n    declarations:[AppComponent],\r\n    imports:[ BrowserModule, \r\n        FormsModule,\r\n        ReactiveFormsModule, \r\n        RxReactiveFormsModule\r\n        ] \r\n    providers: [], \r\n    bootstrap: [AppComponent]\r\n    })\r\n    export class AppModule { }",
    "globalValidationMessages":"import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup } from '@angular\/forms';\r\n\r\nimport { ReactiveFormConfig } from '@rxweb\/reactive-form-validators'; \r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: '.\/app.component.html',\r\n  styleUrls: '.\/app.component.css'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n\tconstructor() {  }\r\n  \r\n\tngOnInit(): void \r\n\t{\r\n\t\tReactiveFormConfig.set({ \r\n            \"validationMessage\": {\r\n                \"required\": \"this field is required.\",\r\n\t\t\t\t\/\/.... set key name of validator name and assign the message of that particular key.\r\n            }\r\n        });\r\n  }\r\n}",
    "npm":"npm i @rxweb/reactive-form-validators",
    "yarn":"yarn add @rxweb/reactive-form-validators",
    "reactiveFormBasedValidation": {
        "Component":"import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup,Validators } from \"@angular\/forms\"\r\n\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxwebValidators } from '@rxweb\/reactive-form-validators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-reactive-form-based-validation',\r\n    templateUrl: '.\/reactive-form-based-validation.component.html'\r\n})\r\nexport class ReactiveFormBasedValidationComponent implements OnInit {\r\n\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n          firstName:['', RxwebValidators.alpha()], \r\n          lastName:['', RxwebValidators.alpha()]\r\n        });\r\n    }\r\n}\r\n",
        "Model":null,
        "Html":"<form [formGroup]=\"userInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>First Name<\/label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  \/>\r\n    <small class=\"form-text text-danger\" >{{userInfoFormGroup.controls.firstName.errorMessage}}<br\/><\/small>\r\n<\/div>\r\n<div class=\"form-group\">\r\n    <label>Last Name<\/label>\r\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  \/>\r\n    <small class=\"form-text text-danger\" >{{userInfoFormGroup.controls.lastName.errorMessage}}<br\/><\/small>\r\n    \r\n<\/div>\r\n<button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>"
    },
    "templateFormBasedValidation":{
        "Component":"import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup,Validators } from \"@angular\/forms\"\r\n\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxwebValidators } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { Country } from '.\/template-form-based-validation.model'\r\n\r\n@Component({\r\n    selector: 'app-template-form-based-validation',\r\n    templateUrl: '.\/template-form-based-validation.component.html'\r\n})\r\nexport class TemplateFormBasedValidationComponent implements OnInit {\r\n    country:Country\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.country = new Country();\r\n    }\r\n}\r\n",
        "Model":"export class Country {\r\n  countryName:string;\r\n}",
        "Html":"<form #countryForm=\"ngForm\">\r\n<div class=\"form-group\">\r\n    <label>Country<\/label>\r\n        <input type=\"text\" class=\"form-control\" name=\"countryName\" [(ngModel)]=\"country.countryName\"  alpha=\"\"\/>\r\n      <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.countryName.errors\">{{countryForm.controls.countryName.errors.alpha.message}}<br><\/small>  \r\n<\/div>\r\n<button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>"
    },
    "modelBasedFormValidation":{
        "Component":"import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup,Validators } from \"@angular\/forms\"\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { Country } from \"src\/assets\/examples\/reactive-form-validators\/basic-examples\/model-based-from-validation\/model-based-from-validation.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-model-based-from-validation',\r\n    templateUrl: '.\/model-based-from-validation.component.html'\r\n})\r\nexport class ModelBasedFromValidationComponent implements OnInit {\r\n\r\n    countryFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n      let country = new Country();\r\n      this.countryFormGroup = this.formBuilder.formGroup(country);\r\n    }\r\n}\r\n",
        "Model":"import { alpha } from \"@rxweb\/reactive-form-validators\";\r\n\r\nexport class Country {\r\n  @alpha()\r\n  countryName:string;\r\n}",
        "Html":"<form [formGroup]=\"countryFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country<\/label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  \/>\r\n    <small class=\"form-text text-danger\" >{{countryFormGroup.controls.countryName.errorMessage}}<br\/><\/small>\r\n<\/div>\r\n<button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>"
    }
}