{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-complete-template-driven-validation-decorators',\r\n    templateUrl: './leap-year-complete.component.html'\r\n})\r\nexport class LeapYearCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n\t    <input type=\"text\" name=\"name\" [(ngModel)]=\"user.name\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Year' or 'Admission Date', then you need to add 'Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.name?.errors\">{{userForm.controls.name?.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Admission Year</label>\r\n\t    <input type=\"text\" name=\"admissionYear\" [(ngModel)]=\"user.admissionYear\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of leap on 'Admission Year' field, then enter the value 'Bharat' in 'Name' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.admissionYear?.errors\">{{userForm.controls.admissionYear?.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Joining Year</label>\r\n\t    <input type=\"text\" name=\"joiningYear\" [(ngModel)]=\"user.joiningYear\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.joiningYear?.errors\">{{userForm.controls.joiningYear?.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  leapYear,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tname: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@leapYear({conditionalExpression:(x,y) => x.name == \"Bharat\"  }) \r\n\tbirthYear: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@leapYear({conditionalExpression:'x => x.name == \"Bharat\"' }) \r\n\tadmissionYear: Date;\r\n\r\n\t@leapYear({message:'{{0}} is not a leap year' }) \r\n\tjoiningYear: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@leapYear({conditionalExpression:(x,y) => x.name == \"Bharat\"  }) \r\nbirthYear: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './leap-year-conditional-expression.component.html'\r\n})\r\nexport class LeapYearConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n\t    <input type=\"text\" name=\"name\" [(ngModel)]=\"user.name\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Year' or 'Admission Date', then you need to add 'Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.name?.errors\">{{userForm.controls.name?.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Admission Year</label>\r\n\t    <input type=\"text\" name=\"admissionYear\" [(ngModel)]=\"user.admissionYear\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of leap on 'Admission Year' field, then enter the value 'Bharat' in 'Name' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.admissionYear?.errors\">{{userForm.controls.admissionYear?.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  leapYear,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tname: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@leapYear({conditionalExpression:'x => x.name == \"Bharat\"' }) \r\n\tadmissionYear: Date;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@leapYear({conditionalExpression:(x,y) => x.name == \"Bharat\"  }) \r\n\tbirthYear: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@leapYear({conditionalExpression:'x => x.name == \"Bharat\"' }) \r\nadmissionYear: Date;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@leapYear({message:'{{0}} is not a leap year' }) \r\njoiningYear: number;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-message-template-driven-validation-decorators',\r\n    templateUrl: './leap-year-message.component.html'\r\n})\r\nexport class LeapYearMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Joining Year</label>\r\n\t    <input type=\"text\" name=\"joiningYear\" [(ngModel)]=\"user.joiningYear\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.joiningYear?.errors\">{{userForm.controls.joiningYear?.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  leapYear, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@leapYear({message:'{{0}} is not a leap year' }) \r\n\tjoiningYear: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-add-template-driven-validation-decorators',\r\n    templateUrl: './leap-year-add.component.html'\r\n})\r\nexport class LeapYearAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Birth Year</label>\r\n\t    <input type=\"text\" name=\"birthYear\" [(ngModel)]=\"user.birthYear\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.birthYear?.errors\">{{userForm.controls.birthYear?.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  leapYear, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@leapYear() \r\n\tbirthYear: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null}}