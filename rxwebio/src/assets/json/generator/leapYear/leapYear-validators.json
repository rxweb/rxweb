{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-complete-validator',\r\n    templateUrl: './leap-year-complete.component.html'\r\n})\r\nexport class LeapYearCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            name:['',], \r\n            birthYear:['', RxwebValidators.leapYear({conditionalExpression:(x,y) => x.name == \"Bharat\"  })], \r\n            admissionYear:['', RxwebValidators.leapYear({conditionalExpression:'x => x.name == \"Bharat\"' })], \r\n            joiningYear:['', RxwebValidators.leapYear({message:'{{0}} is not a leap year' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n      <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Year' or 'Admission Date', then you need to add 'Name' input as 'Bharat'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.name.errors\">{{userFormGroup.controls.name.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Birth Year</label>\r\n      <input type=\"text\" formControlName=\"birthYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of Leap Year on 'Birth Year' field, then enter the value 'Bharat' in 'Name' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthYear.errors\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Admission Year</label>\r\n      <input type=\"text\" formControlName=\"admissionYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of leap on 'Admission Year' field, then enter the value 'Bharat' in 'Name' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionYear.errors\">{{userFormGroup.controls.admissionYear.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Joining Year</label>\r\n      <input type=\"text\" formControlName=\"joiningYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningYear.errors\">{{userFormGroup.controls.joiningYear.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.leapYear({conditionalExpression:(x,y) => x.name == \"Bharat\"  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-conditionalExpression-validator',\r\n    templateUrl: './leap-year-conditional-expression.component.html'\r\n})\r\nexport class LeapYearConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            name:['',], \r\n            admissionYear:['', RxwebValidators.leapYear({conditionalExpression:'x => x.name == \"Bharat\"' })], \r\n            birthYear:['', RxwebValidators.leapYear({conditionalExpression:(x,y) => x.name == \"Bharat\"  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n      <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Year' or 'Admission Date', then you need to add 'Name' input as 'Bharat'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.name.errors\">{{userFormGroup.controls.name.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Admission Year</label>\r\n      <input type=\"text\" formControlName=\"admissionYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of leap on 'Admission Year' field, then enter the value 'Bharat' in 'Name' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionYear.errors\">{{userFormGroup.controls.admissionYear.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Birth Year</label>\r\n      <input type=\"text\" formControlName=\"birthYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of Leap Year on 'Birth Year' field, then enter the value 'Bharat' in 'Name' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthYear.errors\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.leapYear({conditionalExpression:'x => x.name == \"Bharat\"' });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.leapYear({message:'{{0}} is not a leap year' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-message-validator',\r\n    templateUrl: './leap-year-message.component.html'\r\n})\r\nexport class LeapYearMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            joiningYear:['', RxwebValidators.leapYear({message:'{{0}} is not a leap year' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Joining Year</label>\r\n      <input type=\"text\" formControlName=\"joiningYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningYear.errors\">{{userFormGroup.controls.joiningYear.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-dynamic-validator',\r\n    templateUrl: './leap-year-dynamic.component.html'\r\n})\r\nexport class LeapYearDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/leapYear/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { name:'', birthYear:'', admissionYear:'', joiningYear:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n      <input type=\"text\" formControlName=\"name\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Year' or 'Admission Date', then you need to add 'Name' input as 'Bharat'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.name.errors\">{{userFormGroup.controls.name.errors.leapYear.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Admission Year</label>\r\n      <input type=\"text\" formControlName=\"admissionYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of leap on 'Admission Year' field, then enter the value 'Bharat' in 'Name' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionYear.errors\">{{userFormGroup.controls.admissionYear.errors.leapYear.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Joining Year</label>\r\n      <input type=\"text\" formControlName=\"joiningYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningYear.errors\">{{userFormGroup.controls.joiningYear.errors.leapYear.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"name\":{},\"admissionYear\":{\"leapYear\":{\"conditionalExpression\":\"x => x.name == \\\"Bharat\\\"\"}},\"joiningYear\":{\"leapYear\":{\"message\":\"{{0}} is not a leap year\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-add-validator',\r\n    templateUrl: './leap-year-add.component.html'\r\n})\r\nexport class LeapYearAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            birthYear:['', RxwebValidators.leapYear()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Birth Year</label>\r\n      <input type=\"text\" formControlName=\"birthYear\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthYear.errors\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}