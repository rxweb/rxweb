{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-complete',\r\n    templateUrl: './lower-case-complete.component.html'\r\n})\r\nexport class LowerCaseCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'First name' or 'Middle Name', then you need to add 'username' input as 'jonathan.feldman'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.username.errors\">{{userFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>First name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'First Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Middle name</label>\r\n      <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Middle Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lowerCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@lowerCase() \r\n\tusername: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@lowerCase({conditionalExpression:(x,y) =>  x.username == \"jonathan.feldman\"  }) \r\n\tfirstName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@lowerCase({conditionalExpression:'x => x.username == \"jonathan.feldman\"' }) \r\n\tmiddleName: string;\r\n\r\n\t//Shows custom message\r\n\t@lowerCase({message:'You can enter only lowerCase letters.' }) \r\n\tlastName: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@lowerCase({conditionalExpression:(x,y) =>  x.username == \"jonathan.feldman\"  }) \r\nfirstName: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-conditionalExpression',\r\n    templateUrl: './lower-case-conditional-expression.component.html'\r\n})\r\nexport class LowerCaseConditionalExpressionComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'First name' or 'Middle Name', then you need to add 'username' input as 'jonathan.feldman'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.username.errors\">{{userFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Middle name</label>\r\n      <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Middle Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>First name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'First Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lowerCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@lowerCase() \r\n\tusername: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@lowerCase({conditionalExpression:'x => x.username == \"jonathan.feldman\"' }) \r\n\tmiddleName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@lowerCase({conditionalExpression:(x,y) =>  x.username == \"jonathan.feldman\"  }) \r\n\tfirstName: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@lowerCase({conditionalExpression:'x => x.username == \"jonathan.feldman\"' }) \r\nmiddleName: string;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@lowerCase({message:'You can enter only lowerCase letters.' }) \r\nlastName: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-message',\r\n    templateUrl: './lower-case-message.component.html'\r\n})\r\nexport class LowerCaseMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Last name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lowerCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t//Shows custom message\r\n\t@lowerCase({message:'You can enter only lowerCase letters.' }) \r\n\tlastName: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-dynamic',\r\n    templateUrl: './lower-case-dynamic.component.html'\r\n})\r\nexport class LowerCaseDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/lowerCase/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"username\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'First name' or 'Middle Name', then you need to add 'username' input as 'jonathan.feldman'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.username.errors\">{{userFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Middle name</label>\r\n      <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Middle Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.lowerCase.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.lowerCase.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lowerCase,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tusername: string;\r\n\r\n\t@prop()\r\n\tmiddleName: string;\r\n\r\n\t@prop()\r\n\tlastName: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"dynamic.json","json":"{\"username\":{\"lowerCase\":true},\"middleName\":{\"lowerCase\":{\"conditionalExpression\":\"x => x.username == \\\"jonathan.feldman\\\"\"}},\"lastName\":{\"lowerCase\":{\"message\":\"You can enter only lowerCase letters.\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-add',\r\n    templateUrl: './lower-case-add.component.html'\r\n})\r\nexport class LowerCaseAddComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.username.errors\">{{userInfoFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lowerCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@lowerCase() \r\n\tusername: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-edit',\r\n    templateUrl: './lower-case-edit.component.html'\r\n})\r\nexport class LowerCaseEditComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/lowerCase/edit/user-info-data.json').subscribe(userInfo => {\r\n            this.userInfoFormGroup = this.formBuilder.formGroup<UserInfo>(UserInfo,userInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.username.errors\">{{userInfoFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lowerCase, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class UserInfo {\r\n\r\n\t@lowerCase() \r\n\tusername: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","jsonName":"user-info-data.json","json":"{\"username\":\"jonathan.feldman\"}"}}