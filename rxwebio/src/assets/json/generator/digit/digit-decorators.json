{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-complete',\r\n    templateUrl: './digit-complete.component.html'\r\n})\r\nexport class DigitCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Phone Number</label>\r\n      <input type=\"text\" formControlName=\"phoneNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.phoneNumber.errors\">{{userFormGroup.controls.phoneNumber.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fax Number</label>\r\n      <input type=\"text\" formControlName=\"faxNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.faxNumber.errors\">{{userFormGroup.controls.faxNumber.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Mobile Number</label>\r\n      <input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.mobileNumber.errors\">{{userFormGroup.controls.mobileNumber.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@digit({conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tphoneNumber: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@digit({conditionalExpression:'x => x.age >=25' }) \r\n\tfaxNumber: number;\r\n\r\n\t@digit({message:'Please enter only digit.' }) \r\n\tmobileNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@digit({conditionalExpression:(x,y) => x.age >= 25  }) \r\nphoneNumber: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-conditionalExpression',\r\n    templateUrl: './digit-conditional-expression.component.html'\r\n})\r\nexport class DigitConditionalExpressionComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fax Number</label>\r\n      <input type=\"text\" formControlName=\"faxNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.faxNumber.errors\">{{userFormGroup.controls.faxNumber.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Phone Number</label>\r\n      <input type=\"text\" formControlName=\"phoneNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.phoneNumber.errors\">{{userFormGroup.controls.phoneNumber.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@digit({conditionalExpression:'x => x.age >=25' }) \r\n\tfaxNumber: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@digit({conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tphoneNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@digit({conditionalExpression:'x => x.age >=25' }) \r\nfaxNumber: number;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@digit({message:'Please enter only digit.' }) \r\nmobileNumber: number;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-message',\r\n    templateUrl: './digit-message.component.html'\r\n})\r\nexport class DigitMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Mobile Number</label>\r\n      <input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.mobileNumber.errors\">{{userFormGroup.controls.mobileNumber.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit({message:'Please enter only digit.' }) \r\n\tmobileNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-dynamic',\r\n    templateUrl: './digit-dynamic.component.html'\r\n})\r\nexport class DigitDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/digit/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fax Number</label>\r\n      <input type=\"text\" formControlName=\"faxNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.faxNumber.errors\">{{userFormGroup.controls.faxNumber.errors.digit.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Mobile Number</label>\r\n      <input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.mobileNumber.errors\">{{userFormGroup.controls.mobileNumber.errors.digit.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@prop()\r\n\tfaxNumber: number;\r\n\r\n\t@prop()\r\n\tmobileNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"dynamic.json","json":"{\"age\":{\"digit\":true},\"faxNumber\":{\"digit\":{\"conditionalExpression\":\"x => x.age >=25\"}},\"mobileNumber\":{\"digit\":{\"message\":\"Please enter only digit.\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-add',\r\n    templateUrl: './digit-add.component.html'\r\n})\r\nexport class DigitAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-edit',\r\n    templateUrl: './digit-edit.component.html'\r\n})\r\nexport class DigitEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/digit/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"user-data.json","json":"{\"age\":\"25\"}"}}