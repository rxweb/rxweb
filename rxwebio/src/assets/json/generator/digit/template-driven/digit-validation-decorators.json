{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-complete-template-driven-validation-decorators',\r\n    templateUrl: './digit-complete.component.html'\r\n})\r\nexport class DigitCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fax Number</label>\r\n\t    <input type=\"text\" name=\"faxNumber\" [(ngModel)]=\"user.faxNumber\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.faxNumber?.errors\">{{userForm.controls.faxNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Mobile Number</label>\r\n\t    <input type=\"text\" name=\"mobileNumber\" [(ngModel)]=\"user.mobileNumber\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.mobileNumber?.errors\">{{userForm.controls.mobileNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@digit({conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tphoneNumber: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@digit({conditionalExpression:'x => x.age >=25' }) \r\n\tfaxNumber: number;\r\n\r\n\t@digit({message:'Please enter only digit.' }) \r\n\tmobileNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@digit({conditionalExpression:(x,y) => x.age >= 25  }) \r\nphoneNumber: number;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './digit-conditional-expression.component.html'\r\n})\r\nexport class DigitConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fax Number</label>\r\n\t    <input type=\"text\" name=\"faxNumber\" [(ngModel)]=\"user.faxNumber\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.faxNumber?.errors\">{{userForm.controls.faxNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@digit({conditionalExpression:'x => x.age >=25' }) \r\n\tfaxNumber: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@digit({conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tphoneNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@digit({conditionalExpression:'x => x.age >=25' }) \r\nfaxNumber: number;\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@digit({message:'Please enter only digit.' }) \r\nmobileNumber: number;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-message-template-driven-validation-decorators',\r\n    templateUrl: './digit-message.component.html'\r\n})\r\nexport class DigitMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Mobile Number</label>\r\n\t    <input type=\"text\" name=\"mobileNumber\" [(ngModel)]=\"user.mobileNumber\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.mobileNumber?.errors\">{{userForm.controls.mobileNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit({message:'Please enter only digit.' }) \r\n\tmobileNumber: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-add-template-driven-validation-decorators',\r\n    templateUrl: './digit-add.component.html'\r\n})\r\nexport class DigitAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  digit, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null}}