{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-longitude-complete-validator',\r\n    templateUrl: './longitude-complete.component.html'\r\n})\r\nexport class LongitudeCompleteValidatorComponent implements OnInit {\r\n    countryFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.countryFormGroup = this.formBuilder.group({\r\n            continent:['',], \r\n            secondCountryLongitude:['', RxwebValidators.longitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  })], \r\n            thirdCountryLongitude:['', RxwebValidators.longitude({conditionalExpression:'x => x.continent ==\"Asia\"' })], \r\n            firstCountryLongitude:['', RxwebValidators.longitude({message:'{{0}} is not a longitude' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"countryFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label> Continent</label>\r\n      <input type=\"text\" formControlName=\"continent\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Longitude' or 'Third Country Longitude', then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.continent.errors\">{{countryFormGroup.controls.continent.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Second Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"secondCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.secondCountryLongitude.errors\">{{countryFormGroup.controls.secondCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"thirdCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.thirdCountryLongitude.errors\">{{countryFormGroup.controls.thirdCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>First Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"firstCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You can enter only longitude<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.firstCountryLongitude.errors\">{{countryFormGroup.controls.firstCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.longitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  });\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-longitude-conditionalExpression-validator',\r\n    templateUrl: './longitude-conditional-expression.component.html'\r\n})\r\nexport class LongitudeConditionalExpressionValidatorComponent implements OnInit {\r\n    countryFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.countryFormGroup = this.formBuilder.group({\r\n            continent:['',], \r\n            thirdCountryLongitude:['', RxwebValidators.longitude({conditionalExpression:'x => x.continent ==\"Asia\"' })], \r\n            secondCountryLongitude:['', RxwebValidators.longitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"countryFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label> Continent</label>\r\n      <input type=\"text\" formControlName=\"continent\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Longitude' or 'Third Country Longitude', then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.continent.errors\">{{countryFormGroup.controls.continent.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"thirdCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.thirdCountryLongitude.errors\">{{countryFormGroup.controls.thirdCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Second Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"secondCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.secondCountryLongitude.errors\">{{countryFormGroup.controls.secondCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.longitude({conditionalExpression:'x => x.continent ==\"Asia\"' });\r\n","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.longitude({message:'{{0}} is not a longitude' });\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-longitude-message-validator',\r\n    templateUrl: './longitude-message.component.html'\r\n})\r\nexport class LongitudeMessageValidatorComponent implements OnInit {\r\n    countryFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.countryFormGroup = this.formBuilder.group({\r\n            firstCountryLongitude:['', RxwebValidators.longitude({message:'{{0}} is not a longitude' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"countryFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"firstCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You can enter only longitude<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.firstCountryLongitude.errors\">{{countryFormGroup.controls.firstCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-longitude-dynamic-validator',\r\n    templateUrl: './longitude-dynamic.component.html'\r\n})\r\nexport class LongitudeDynamicValidatorComponent implements OnInit {\r\n    countryFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/longitude/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar country = { continent:'', secondCountryLongitude:'', thirdCountryLongitude:'', firstCountryLongitude:'',  }\r\n\t\t\tthis.countryFormGroup = this.formBuilder.group(country,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"countryFormGroup\"  [formGroup]=\"countryFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label> Continent</label>\r\n      <input type=\"text\" formControlName=\"continent\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Longitude' or 'Third Country Longitude', then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.continent.errors\">{{countryFormGroup.controls.continent.errors.longitude.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"thirdCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.thirdCountryLongitude.errors\">{{countryFormGroup.controls.thirdCountryLongitude.errors.longitude.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>First Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"firstCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You can enter only longitude<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"countryFormGroup.controls.firstCountryLongitude.errors\">{{countryFormGroup.controls.firstCountryLongitude.errors.longitude.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!countryFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":"dynamic.json","json":"{\"continent\":{},\"thirdCountryLongitude\":{\"longitude\":{\"conditionalExpression\":\"x => x.continent ==\\\"Asia\\\"\"}},\"firstCountryLongitude\":{\"longitude\":{\"message\":\"{{0}} is not a longitude\"}}}"},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-longitude-add-validator',\r\n    templateUrl: './longitude-add.component.html'\r\n})\r\nexport class LongitudeAddValidatorComponent implements OnInit {\r\n    numberInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.numberInfoFormGroup = this.formBuilder.group({\r\n            firstCountryLongitude:['', RxwebValidators.longitude()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"numberInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Country Longitude</label>\r\n      <input type=\"text\" formControlName=\"firstCountryLongitude\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a valid longitude<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"numberInfoFormGroup.controls.firstCountryLongitude.errors\">{{numberInfoFormGroup.controls.firstCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!numberInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"jsonName":null,"json":null}}