{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component({\r\n    selector: 'app-latLong-complete-template-driven-validation-directives',\r\n    templateUrl: './lat-long-complete.component.html'\r\n})\r\nexport class LatLongCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    country: Country\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.country= new Country()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #countryForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Continent</label>\r\n\t    <input type=\"text\" name=\"continent\" [(ngModel)]=\"country.continent\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country' or 'Third Country', then you need to add 'Continent' input as 'Asia'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.continent?.errors\">{{countryForm.controls.continent?.errors.latLong.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country</label>\r\n\t    <input type=\"text\" name=\"thirdCountry\" [(ngModel)]=\"country.thirdCountry\"  class=\"form-control\" [latLong]=\"{'conditionalExpression':'x => x.continent ==\\'Asia\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.thirdCountry?.errors\">{{countryForm.controls.thirdCountry?.errors.latLong.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>First Country</label>\r\n\t    <input type=\"text\" name=\"firstCountry\" [(ngModel)]=\"country.firstCountry\"  class=\"form-control\" [latLong]=\"{'message':'First Country is not a proper proper Latitude or Longitude'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">enter latitude or longitude only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.firstCountry?.errors\">{{countryForm.controls.firstCountry?.errors.latLong.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Country {\r\n\r\n\tcontinent: string;\r\n\r\n\tsecondCountry: string;\r\n\r\n\tthirdCountry: string;\r\n\r\n\tfirstCountry: string;\r\n\r\n}\r\n","modelName":"country.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[latLong]=\"{'conditionalExpression':(x,y) => x.continent == \\'Asia\\' }\"","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component({\r\n    selector: 'app-latLong-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './lat-long-conditional-expression.component.html'\r\n})\r\nexport class LatLongConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    country: Country\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.country= new Country()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #countryForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Continent</label>\r\n\t    <input type=\"text\" name=\"continent\" [(ngModel)]=\"country.continent\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country' or 'Third Country', then you need to add 'Continent' input as 'Asia'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.continent?.errors\">{{countryForm.controls.continent?.errors.latLong.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country</label>\r\n\t    <input type=\"text\" name=\"thirdCountry\" [(ngModel)]=\"country.thirdCountry\"  class=\"form-control\" [latLong]=\"{'conditionalExpression':'x => x.continent ==\\'Asia\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.thirdCountry?.errors\">{{countryForm.controls.thirdCountry?.errors.latLong.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Country {\r\n\r\n\tcontinent: string;\r\n\r\n\tthirdCountry: string;\r\n\r\n\tsecondCountry: string;\r\n\r\n}\r\n","modelName":"country.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[latLong]=\"{'conditionalExpression':'x => x.continent ==\\'Asia\\''}\"","modelName":null,"jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"[latLong]=\"{'message':'First Country is not a proper proper Latitude or Longitude'}\"","modelName":null,"jsonName":null,"json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component({\r\n    selector: 'app-latLong-message-template-driven-validation-directives',\r\n    templateUrl: './lat-long-message.component.html'\r\n})\r\nexport class LatLongMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    country: Country\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.country= new Country()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #countryForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Country</label>\r\n\t    <input type=\"text\" name=\"firstCountry\" [(ngModel)]=\"country.firstCountry\"  class=\"form-control\" [latLong]=\"{'message':'First Country is not a proper proper Latitude or Longitude'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">enter latitude or longitude only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.firstCountry?.errors\">{{countryForm.controls.firstCountry?.errors.latLong.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Country {\r\n\r\n\tfirstCountry: string;\r\n\r\n}\r\n","modelName":"country.model.ts","jsonName":null,"json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component({\r\n    selector: 'app-latLong-add-template-driven-validation-directives',\r\n    templateUrl: './lat-long-add.component.html'\r\n})\r\nexport class LatLongAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    country: Country\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.country= new Country()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #countryForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Country</label>\r\n\t    <input type=\"text\" name=\"firstCountry\" [(ngModel)]=\"country.firstCountry\"  class=\"form-control\" latLong/>\r\n\r\n      <small class=\"form-text text-muted\">You must enter a proper Latitude or Longitude<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.firstCountry?.errors\">{{countryForm.controls.firstCountry?.errors.latLong.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Country {\r\n\r\n\tfirstCountry: string;\r\n\r\n}\r\n","modelName":"country.model.ts","jsonName":null,"json":null}}