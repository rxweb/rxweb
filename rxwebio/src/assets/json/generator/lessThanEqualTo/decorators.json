{"rightSidebarLinks":[{"id":"lessthanequalto","title":"lessThanEqualTo (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiclessthanequaltovalidation","title":"Basic LessThanEqualTo Validation","subLink":[]},{"id":"relationaloperatorconfig","title":"RelationalOperatorConfig","subLink":[{"title":"fieldName","id":"fieldname"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completelessthanequaltoexample","title":"Complete lessThanEqualTo Example","subLink":[]},{"id":"dynamiclessthanequaltoexample","title":"Dynamic lessThanEqualTo Example","subLink":[]},{"id":"githubissues","title":"lessThanEqualTo Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"lessThanEqualTo","description":" Less than equal to validation  decorators  will allow the user to enter only that value which is less than oe equal to the value in the pre defined field.","validatorType":"decorators","validationTypeTitle":"Decorators","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"lessThanEqualTo-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThanEqualTo-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-edit-component\"></div>\r\n<p class='showHideElement' >The below code is `user-data.json` for getting data from the server </p>\r\n<div component=\"app-code\" key=\"lessThanEqualTo-edit-json\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"lessThanEqualTo-edit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThanEqualTo-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-lessThanEqualTo-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-complete-component\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-lessThanEqualTo-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThanEqualTo-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/form-validations/lessThanEqualTo/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a user form and you have fields like TotalMarks, ObtainedMarks, OtherMarks and you want user to enter ObtainedMarks, OtherMarks such that they should be less than or equal to TotalMarks Here depending upon the requirement these scenarios may arise</p>\r\n<ol class='showHideElement'>\r\n   <li>Specify TotalMarks as fieldName such that LessThanEqualTo validation should be applied to the fieldname for comparing other fields.</li>\r\n   <li>Apply LessThanEqualTo validation based on matched condition in the form, like if the TotalMarks is ‘100’ then the ObtainedMarks,OtherMarks value  should be less than or equal to 100.</li>\r\n   <li>Adding Custom Message on OtherMarks Field.</li>\r\n   <data-scope scope=\"['decorator','validator']\">\r\n   <li>Apply lessThanEqualTo validation dynamically based on server rules.</li>\r\n   </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let’s see how lessThanEqualTo decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basiclessthanequaltovalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic LessThanEqualTo Validation<a title='Link to this heading' class='link-header'  href='/form-validations/lessThanEqualTo/decorators#basiclessthanequaltovalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create User model class define a property of Marks and TotalMarks model to achieve the functional need of point 1. </p>\r\n<div component=\"app-code\" key=\"lessThanEqualTo-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'relationaloperatorconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >RelationalOperatorConfig<a title='Link to this heading' class='link-header'  href='/form-validations/lessThanEqualTo/decorators#relationaloperatorconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@lessThanEqualTo()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#fieldName\")' title=\"fieldName\">fieldName</a></td><td>Current property is matched with the particular property. so we need to pass particular property name.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>lessThanEqualTo validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'fieldname'>\r\n<div class='col-lg-12'>\r\n<h2>fieldName<a title='Link to this heading' class='link-header'  href='/form-validations/lessThanEqualTo/decorators#fieldname'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Less than Equal to validation should be applied based on the <span class='highlighted'>fieldName</span> for compare other field value. </p>\r\n<div component=\"app-code\" key=\"lessThanEqualTo-fieldNameExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThanEqualTo-fieldName\" title=\"lessThanEqualTo decorator with fieldName\" key=\"fieldName\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header'  href='/form-validations/lessThanEqualTo/decorators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Less than Equal to validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function. </p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"lessThanEqualTo-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"lessThanEqualTo-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThanEqualTo-conditionalExpression\" title=\"lessThanEqualTo decorator with conditionalExpression\" key=\"conditionalExpression\"></div> \r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/form-validations/lessThanEqualTo/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"lessThanEqualTo-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThanEqualTo-message\" title=\"lessThanEqualTo decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completelessthanequaltoexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete lessThanEqualTo Example<a title='Link to this heading' class='link-header'  href='/form-validations/lessThanEqualTo/decorators#completelessthanequaltoexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete lessThanEqualTo example which includes all the RelationalOperatorConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamiclessthanequaltoexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic lessThanEqualTo Example<a title='Link to this heading' class='link-header' href='/form-validations/lessThanEqualTo/decorators#dynamiclessthanequaltoexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic lessThanEqualTo example which execute based on json passed. conditional expression with function would be not apply in dynamic lessThanEqualTo example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/lessThanEqualTo/decorators#githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}