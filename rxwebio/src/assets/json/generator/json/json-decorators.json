{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-complete',\r\n    templateUrl: './json-complete.component.html'\r\n})\r\nexport class JsonCompleteComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location</label>\r\n      <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is &#123;CountryName:India&#125; in Location textbox.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Address Json</label>\r\n      <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as&#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact Json</label>\r\n      <input type=\"text\" formControlName=\"contactJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.contactJson.errors\">{{jsonInfoFormGroup.controls.contactJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@json({conditionalExpression:(x,y)=> x.location == \"{CountryName:India}\"  }) \r\n\taddressJson: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' }) \r\n\tlocationJson: string;\r\n\r\n\t@json({message:'Enter only JSON type data' }) \r\n\tcontactJson: string;\r\n\r\n}\r\n","modelName":"json-info.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@json({message:'Enter the text in JSON format --> {key:value}' }) \r\nlocation: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-message',\r\n    templateUrl: './json-message.component.html'\r\n})\r\nexport class JsonMessageComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location</label>\r\n      <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is &#123;CountryName:India&#125; in Location textbox.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n}\r\n","modelName":"json-info.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@json({conditionalExpression:(x,y)=> x.location == \"{CountryName:India}\"  }) \r\naddressJson: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-conditionalExpression',\r\n    templateUrl: './json-conditional-expression.component.html'\r\n})\r\nexport class JsonConditionalExpressionComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location</label>\r\n      <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is &#123;CountryName:India&#125; in Location textbox.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Address Json</label>\r\n      <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as&#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' }) \r\n\tlocationJson: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@json({conditionalExpression:(x,y)=> x.location == \"{CountryName:India}\"  }) \r\n\taddressJson: string;\r\n\r\n}\r\n","modelName":"json-info.model.ts","jsonName":null,"json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' }) \r\nlocationJson: string;\r\n","modelName":null,"jsonName":null,"json":null},"messageExampleString":{"notes":null,"component":null,"html":null,"model":"@json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' }) \r\nlocationJson: string;\r\n","modelName":null,"jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-dynamic',\r\n    templateUrl: './json-dynamic.component.html'\r\n})\r\nexport class JsonDynamicComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/json/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"jsonInfoFormGroup\"  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location</label>\r\n      <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is &#123;CountryName:India&#125; in Location textbox.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact Json</label>\r\n      <input type=\"text\" formControlName=\"contactJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.contactJson.errors\">{{jsonInfoFormGroup.controls.contactJson.errors.json.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t@prop()\r\n\tlocationJson: string;\r\n\r\n\t@prop()\r\n\tcontactJson: string;\r\n\r\n}\r\n","modelName":"json-info.model.ts","jsonName":"dynamic.json","json":"{\"location\":{\"json\":{\"message\":\"Enter the text in JSON format --> {key:value}\"}},\"locationJson\":{\"json\":{\"conditionalExpression\":\"x => x.location == \\\"{CountryName:India}\\\"\",\"message\":\"Enter the text in JSON format --> {key:value}\"}},\"contactJson\":{\"json\":{\"message\":\"Enter only JSON type data\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-add',\r\n    templateUrl: './json-add.component.html'\r\n})\r\nexport class JsonAddComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  json, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@json() \r\n\tlocationJson: string;\r\n\r\n}\r\n","modelName":"json-info.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-edit',\r\n    templateUrl: './json-edit.component.html'\r\n})\r\nexport class JsonEditComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/json/edit/json-info-data.json').subscribe(jsonInfo => {\r\n            this.jsonInfoFormGroup = this.formBuilder.formGroup<JsonInfo>(JsonInfo,jsonInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"jsonInfoFormGroup\"  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  json, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@json() \r\n\tlocationJson: string;\r\n\r\n}\r\n","modelName":"json-info.model.ts","jsonName":"json-info-data.json","json":"{\"locationJson\":\"{ \\\"firstName\\\": \\\"Bharat\\\", \\\"lastName\\\": \\\"patel\\\" }\"}"}}