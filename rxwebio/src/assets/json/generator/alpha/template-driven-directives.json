{"rightSidebarLinks":[{"id":"alpha","title":"alpha (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicalphavalidation","title":"Basic Alpha Validation","subLink":[]},{"id":"alphaconfig","title":"AlphaConfig","subLink":[{"title":"allowWhiteSpace","id":"allowwhitespace"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completealphaexample","title":"Complete Alpha Example","subLink":[]},{"id":"githubissues","title":"alpha Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"alpha","description":" Alpha validation  template driven  will allow only alphabets to be entered. It will not allow any digit or special character.","validatorType":"template-driven","validationTypeTitle":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-alpha-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alpha-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alpha-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alpha-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/alpha/template-driven/directives#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a Country form, which contains fields like CountryName, CountryCode, StateName, StateCode and you want the user to enter only alphabets. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n\t<li>Allow only alphabets in CountryName without space.</li>\r\n\t<li>Allowing WhiteSpace in StateName.</li>\r\n\t<li>Apply alpha validation based on matched condition in the form, like if the CountryName is 'India' then the StateCode value should be in alphabets.</li>\r\n\t<li>Adding Custom Message on StateCode Field.</li>\r\n\t<data-scope scope=\"['decorator','validator']\">\r\n\t\t<li>Apply alpha validation dynamically based on server rules. </li>\r\n\t</data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let's see how alpha  template driven  fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicalphavalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Alpha Validation<a title='Link to this heading' class='link-header' href='/form-validations/alpha/template-driven/directives#basicalphavalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a Country class and define a property of CountryName in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"alpha-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"alpha-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"alpha-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alpha-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'alphaconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >AlphaConfig<a title='Link to this heading' class='link-header' href='/form-validations/alpha/template-driven/directives#alphaconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>alpha</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#allowwhitespace\")' title=\"allowWhiteSpace\">allowWhiteSpace</a></td><td>This will allow whitespace in particular control property. The default value is <span class='highlighted'>false</span>.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Alpha validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'allowwhitespace'>\r\n<div class='col-lg-12'>\r\n<h2>allowWhiteSpace<a title='Link to this heading' class='link-header' href='/form-validations/alpha/template-driven/directives#allowwhitespace'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>boolean</span> </p>\r\n<p class='showHideElement' >This will allow whitespace in particular FormControl value .The default value is <span class='highlighted'>false</span>.</p>\r\n<div component=\"app-code\" key=\"alpha-allowWhiteSpaceExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alpha-allowWhiteSpace\" title=\"alpha template driven with allowWhiteSpace\" key=\"allowWhiteSpace\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/alpha/template-driven/directives#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Alpha validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"alpha-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alpha-conditionalExpression\" title=\"alpha template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/alpha/template-driven/directives#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"alpha-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alpha-message\" title=\"alpha template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completealphaexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Alpha Example<a title='Link to this heading' class='link-header' href='/form-validations/alpha/template-driven/directives#completealphaexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete Alpha example which includes all the AlphaConfig properties will fulfil the requirement of scenarios 1, 2, 3 and 4.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/alpha/template-driven/directives#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}