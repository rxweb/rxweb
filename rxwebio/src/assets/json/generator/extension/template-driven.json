{"rightSidebarLinks":[{"id":"extension","title":"extension (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicextensionvalidation","title":"Basic extension Validation","subLink":[]},{"id":"extensionconfig","title":"ExtensionConfig","subLink":[{"title":"extensions","id":"extensions"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completeextensionexample","title":"Complete extension Example","subLink":[]},{"id":"githubissues","title":"extension Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"extension","description":" extension validation  template driven  allows user to enter the input which is in the proper extension format.","validatorType":"template-driven","validationTypeTitle":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-extension-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"extension-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"extension-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use<a title='Link to this heading' class='link-header' href='/form-validations/extension/template-driven#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Suppose you want to create a storageCapacity form, which contains fields like fileType, profilePicture ,imageFile ,documentFile ,contactFile and you want the user to enter input which is a proper extension format. Here depending upon the requirement, these scenarios may arise..</p>\r\n<ol class='showHideElement'>\r\n   <li>Allow profilePicture which have proper extension format and adding Custom Message on profilePicture.</li>\r\n   <li>Apply  extension validation on  documentFile field based on matched condition in the form, like if the device is 'Document', then the documentFile must be a extension format (Used as a function).</li>\r\n   <li>Apply extension validation on imageFile field based on matched condition in the form, like if the device is 'Picture', then the imageFile must be a extension format (Used as a string datatype).</li>\r\n   <data-scope scope=\"['decorator','validator']\">\r\n   <li>Apply extension validation dynamically based on server rules.</li>\r\n   </data-scope>\r\n</ol>\r\n<p>Let's see how extension  template driven  fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicextensionvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic extension Validation<a title='Link to this heading' class='link-header' href='/form-validations/extension/template-driven#basicextensionvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'extensionconfig'>\r\n<div class='col-lg-12'>\r\n<h2>ExtensionConfig<a title='Link to this heading' class='link-header' href='/form-validations/extension/template-driven#extensionconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Below options are not mandatory to use in the <span class='highlighted'>extension</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#extensions\")'  title=\"extensions\">extensions</a></td><td>Multiple extensions which are allowed to be entered by the user. It is in form of array.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")'  title=\"conditionalExpression\">conditionalExpression</a></td><td>extension validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")'  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'extensions'>\r\n<div class='col-lg-12'>\r\n<h2>extensions<a title='Link to this heading' class='link-header' href='/form-validations/extension/template-driven#extensions'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Type :  <span class='highlighted'>string[]</span> </p>\r\n<p>extensions parameter is the array of multiple extensions which are allowed to be entered by the user.</p>\r\n<div component=\"app-code\" key=\"extension-extensionsExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-extension-extensions\" title=\"extension template driven with extensions\" key=\"extensions\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/extension/template-driven#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>extension validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"extension-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"extension-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-extension-conditionalExpression\" title=\"extension template driven with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/extension/template-driven#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"extension-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-extension-message\" title=\"extension template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeextensionexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete extension Example<a title='Link to this heading' class='link-header' href='/form-validations/extension/template-driven#completeextensionexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p>This Complete extension example which includes all the ExtensionConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/extension/template-driven#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}