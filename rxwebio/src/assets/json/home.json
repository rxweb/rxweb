{
    "crossFieldValidationJson":{
        "component":"import { Component } from '@angular/core';\r\nimport { FormGroup,FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\"\r\n\r\n@Component({\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent  {\r\n  userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\tpassword:['',], \r\n        confirmPassword:['', RxwebValidators.compare({fieldName:'password' })], \r\n        });\r\n    }\r\n}\r\n",
        "html":"<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>New Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Confirm Password</label>\r\n    <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>"
    },
    "conditionalValidationRequiredJson":{
        "component":"import { Component,OnInit } from '@angular/core';\r\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\"\r\nimport {FormBuilder,FormGroup } from \"@angular/forms\"\r\n@Component({\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent implements OnInit  {\r\n  userForm:FormGroup\r\n\r\n  constructor(private formBuilder:FormBuilder){}\r\n\r\n  ngOnInit(){\r\n    this.userForm = this.formBuilder.group({\r\n      country:[''],\r\n      identityNumber:['',RxwebValidators.required({conditionalExpression:(x) => x.country == 'India' })]\r\n    });\r\n  }\r\n}\r\n",
        "html":"<form  [formGroup]=\"userForm\">\r\n  <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"country\" class=\"form-control\"  />\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Identity Number</label>\r\n    <input type=\"text\" formControlName=\"identityNumber\"  class=\"form-control\"  />\r\n</div>\r\n<button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>"
    },
    "decoratorbasedModelValidationJson":{
        "component":"import { Component,OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport {User } from \"./user.model\"\r\n\r\nimport { RxFormBuilder } from \"@rxweb/reactive-form-validators\"\r\n\r\n@Component({\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent implements OnInit  {\r\n  userFormGroup:FormGroup;\r\n  user:User;\r\n\r\n  constructor(private formBuilder:RxFormBuilder){}\r\n\r\n  ngOnInit(){\r\n    this.user = new User();\r\n    this.userFormGroup = this.formBuilder.formGroup(this.user);\r\n  }\r\n\r\n\r\n}\r\n",
        "html":"<form  [formGroup]=\"userFormGroup\">\r\n  <div class=\"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n</div>\r\n\r\n<div class=\"form-group\">\r\n    <label>Confirm Password</label>\r\n    <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n</div>\r\n\r\n<div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>",
        "model":"import { required,different,compare, maxLength,password, email } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User{\r\n\r\n  @required()\r\n  @maxLength({value:20})\r\n  firstName:string;\r\n\r\n  @different({fieldName:'firstName' })\r\n  @required()\r\n  userName:string;\r\n\r\n  @password({validation:{alphabet:true,digit:true,minLength:6, maxLength:10, lowerCase:true,upperCase:true }})\r\n  @required()\r\n  password:string;\r\n\r\n  @compare({fieldName:'password'})\r\n  confirmPassword:string;\r\n\r\n  @email()\r\n  email:string;\r\n\r\n  \r\n}"
    },
    "dynamicValidationJson":{
        "component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder, FormBuilderConfiguration } from '@rxweb/reactive-form-validators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-user-info-add',\r\n    templateUrl: './user-info-add.component.html'\r\n})\r\nexport class UserInfoAddComponent implements OnInit {\r\n\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n    ) { }\r\n\r\n    ngOnInit() {\r\nthis.http.get('assets/dynamic-validation.json').subscribe((dynamicValidationConfiguration:any) => {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n          firstName:['Bharat']\r\n        },\r\n        new FormBuilderConfiguration( { dynamicValidation: dynamicValidationConfiguration }));\r\n})\r\n    }\r\n}\r\n",
        "html":"<form *ngIf=\"userInfoFormGroup\" [formGroup]=\"userInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" >{{userInfoFormGroup.controls.firstName.errorMessage}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>",
        "json":"{\r\n\"firstName\":{\r\n  \"alpha\":true,\r\n  \"required\":true,\r\n  \"maxLength\":{\"value\":10 }\r\n}\r\n}"
    }
}
