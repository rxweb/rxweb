{"version":3,"sources":["value-change-notification.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAA,EAAa,MAAA,wBAAA,CAAA;AACtB,MACC;IADD;QAEY,iCAAA,GAA2C,IAAI,KAAA,EAAU,CAAG;IAuDxE,CAAC;IAvDD;;;;;OAKG;IACH,kBAJK,CAAA,SAAA,EAAA,YAAA,EAAA,IAAA;QAKG,IAAI,CAJC,4BAAC,CAA4B,IAAC,CAAI,EAAE,SAAA,EAAW,SAAA,EAAW,KAAA,EAAO,YAAA,CAAa,KAAC,EAAM,KAAA,EAAO,YAAA,CAAa,KAAC,EAAM,IAAA,EAAM,IAAA,EAAK,CAAE,CAAC;IAKvI,CAAC;IACL;;;;;;OAMG;IACH,kBATK,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA,UAAA,KAAA;QAUG,IAAI,CATC,CAAC,OAAC,IAAU,IAAA,CAAK,UAAC,CAAU,QAAC,EAAS,KAAA,CAAM,CAAC,IAAI,IAAA,CAAK,kBAAC,EAAmB;YAU3E,IAAI,gBAAgB,CAThB,aAAA,GAAgB,IAAA,CAAK,4BAAC,CAA4B,MAAC,CAAM,CAAC,CAAC,EAAA,CAAG,CAAA,CAAE,KAAC,CAAK,OAAC,CAAO,IAAC,CAAI,IAAI,CAAA,CAAE,CAAC,CAAC;YAU/F,aAAa,CATC,OAAC,CAAO,SAAC,CAAS,EAAA;gBAU5B,IAAI,SATC,CAAS,KAAC,IAAQ,SAAA,CAAU,KAAC,CAAK,IAAC,CAAI;oBAUxC,SAAS,CATC,IAAC,CAAI,SAAC,CAAS,KAAC,CAAK,IAAC,CAAI,CAAC,CAAA;YAU7C,CAAC,CATC,CAAC;SAUN;IACL,CAAC;IACL;;;;OAIG;IAZE,UAAA,CAAA,SAAA,EAAA,UAAA;QAcG,IAAI,KAbC,CAAK,OAAC,CAAO,SAAC,CAAS,IAAI,KAAA,CAAM,OAAC,CAAO,UAAC,CAAU,EAAE;YAcvD,IAAI,gBAAgB,CAbhB,UAAA,GAAa,SAAA,CAAU,MAAC,IAAS,UAAA,CAAW,MAAC,CAAM;YAcvD,IAAI,CAbC,UAAC;gBAcF,KAAK,IAbC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,SAAA,CAAU,MAAC,EAAO,CAAA,EAAE,EAAG;oBAcvC,UAAU,GAbG,YAAA,CAAa,SAAC,CAAS,CAAC,CAAC,EAAE,UAAA,CAAW,CAAC,CAAC,CAAC,CAAC;oBAcvD,IAAI,UAbC;wBAcD,MAAM;iBACb;YACL,OAbO,UAAA,CAAW;SAcrB;QACD,OAbO,SAAA,IAAa,UAAA,CAAW;IAcnC,CAAC;IACL;;;OAGG;IACH,OAhBK,CAAA,SAAA;QAiBG,KAAK,IAhBC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,IAAA,CAAK,4BAAC,CAA4B,MAAC,EAAO,CAAA,EAAE,EAAG;YAiB/D,IAAI,IAhBC,CAAI,4BAAC,CAA4B,CAAC,CAAC,CAAC,SAAC,IAAY,SAAA,EAAW;gBAiB7D,IAAI,CAhBC,4BAAC,CAA4B,MAAC,CAAM,CAAC,EAAE,CAAA,CAAE,CAAC;gBAiB/C,MAAM;aACT;SACJ;IACL,CAAC;CACJ;AAED;IACA,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,4BAA4B,CAAC;AAC/D,CAAC","file":"value-change-notification.js","sourceRoot":"","sourcesContent":["import { isNotMatched } from '../util/is-not-matched';\nexport class ValueChangeNotification {\nprivate attributeChangeSubscriptions: Array<any> = new Array<any>();\n/**\n * @param {?} controlId\n * @param {?} subscription\n * @param {?} func\n * @return {?}\n */\nonPropValueChanged(controlId: number, subscription: { [key: string]: any }, func: Function) {\n        this.attributeChangeSubscriptions.push({ controlId: controlId, names: subscription.names, props: subscription.props, func: func });\n    }\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} oldValue\n * @param {?=} isProps\n * @return {?}\n */\nnotifyValueChanged(name, value, oldValue, isProps: boolean = false) {\n        if ((!isProps && this.isNotEqual(oldValue, value)) && this.onPropValueChanged) {\n            let /** @type {?} */ subscriptions = this.attributeChangeSubscriptions.filter(t => t.names.indexOf(name) != -1);\n            subscriptions.forEach(subscribe => {\n                if (subscribe.props && subscribe.props[name])\n                    subscribe.func(subscribe.props[name])\n            });\n        }\n    }\n/**\n * @param {?} leftValue\n * @param {?} rightValue\n * @return {?}\n */\nprivate isNotEqual(leftValue: any, rightValue: any) {\n        if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n            let /** @type {?} */ isNotEqual = leftValue.length != rightValue.length;\n            if (!isNotEqual)\n                for (var /** @type {?} */ i = 0; i < leftValue.length; i++) {\n                    isNotEqual = isNotMatched(leftValue[i], rightValue[i]);\n                    if (isNotEqual)\n                        break;\n                }\n            return isNotEqual;\n        }\n        return leftValue != rightValue;\n    }\n/**\n * @param {?} controlId\n * @return {?}\n */\ndestroy(controlId: number) {\n        for (var /** @type {?} */ i = 0; i < this.attributeChangeSubscriptions.length; i++) {\n            if (this.attributeChangeSubscriptions[i].controlId == controlId) {\n                this.attributeChangeSubscriptions.splice(i, 1);\n                break;\n            }\n        }\n    }\n}\n\nfunction ValueChangeNotification_tsickle_Closure_declarations() {\n/** @type {?} */\nValueChangeNotification.prototype.attributeChangeSubscriptions;\n}\n"]}