{"version":3,"sources":["form-control-config.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,qBAAA,EAAsB,MAAA,4BAAA,CAAA;AAE/B;;GAEG;AACH,MADC,wBAAA,SAAA,qBAAA;IAGD;;;OAGG;IACH,YAJK,WAA6C,EAAU,cAAmD;QAMvG,KAAK,CAAC,cAAc,CAAC,CAAC;QAN8B,mBAAA,GAAA,cAAA,CAAmD;QAOvG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;QAC/B,KAAK,CAAC,mBAAmB,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAsBL;;;OAGG;IACH,IAPK,WAAA,CAAA,KAAA;QAQG,IAAI,CAPC,YAAC,GAAc,KAAA,CAAM;QAQ1B,UAAU,CAPC,GAAG,EAAA,CAAG,IAAA,CAAK,kBAAC,CAAkB,IAAC,CAAI,YAAC,CAAY,EAAE,EAAA,CAAG,CAAC;IAQrE,CAAC;IACL;;OAEG;IACH,IATK,WAAA;QAUG,OATO,IAAA,CAAK,YAAC,CAAY;IAU7B,CAAC;IACL;;OAEG;IACH,IAXK,YAAA;QAYG,OAXO,IAAA,CAAK,WAAC,CAAW,YAAC,CAAY;IAYzC,CAAC;IACL;;OAEG;IACH,IAbK,WAAA;QAcG,OAbO,IAAA,CAAK,MAAC,CAAM,EAAC,CAAE,CAAA,CAAE,IAAA,CAAK,MAAC,CAAM,EAAC,CAAE,WAAC,CAAW,CAAA,CAAE,EAAA,CAAG;IAc5D,CAAC;CACJ;AAED;IACA,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,YAAY,CAAC;IACzC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC;IACnC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC;IACnC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;IAClC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACrC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;IAClC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC;IACxC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC;IACjC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC;IACxC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;IAClC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACrC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;IAClC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,eAAe,CAAC;IAC5C,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC;IACtC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,cAAc,CAAC;IAC3C,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;IAClC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,cAAc,CAAC;AAC3C,CAAC;AAED,MAlDC,oBAAA,SAAA,iBAAA;IAmDD;;;OAGG;IACH,YAtDK,WAA6C,EAAG,cAAmD;QAuDhG,KAAK,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;IACvC,CAAC;CACJ","file":"form-control-config.js","sourceRoot":"","sourcesContent":["import { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\nimport {  Hooks} from '../models/interface/action-config';\n\nimport { BaseFormControlConfig } from './base-form-control-config';\nimport { RxFormControl } from '@rxweb/reactive-form-validators';\n/**\n * @abstract\n */\nexport abstract class FormControlConfig extends BaseFormControlConfig {\nprivate _formControl: RxFormControl;\n/**\n * @param {?} fieldConfig\n * @param {?} controlsConfig\n */\nconstructor(fieldConfig: { [key: string]: any },\npublic controlsConfig: { [key: string]: FormControlConfig }) {\n        super(controlsConfig);\n        this.config = fieldConfig;\n        this.value = fieldConfig.value;\n        super.checkFilterFunction();\n        this.props = Object.create({});\n    }\n\n    \n    inputs: any;\n    events: any;\n\n    value: any;\n    disabled: boolean;\n    label: string;\n    placeholder: string;\n    hide: boolean;\n    description: string;\n    focus: boolean;\n    readonly: boolean;\n    class: string[];\n\n    isPlainTextMode: boolean;\n    \n    validator: ValidatorFn;\n    asyncValidator: AsyncValidatorFn;\n\n    hooks: Hooks\n/**\n * @param {?} value\n * @return {?}\n */\nset formControl(value: RxFormControl) {\n        this._formControl = value;\n        setTimeout(() => this.overrideErrorsProp(this._formControl), 10);\n    }\n/**\n * @return {?}\n */\nget formControl() {\n        return this._formControl;\n    }\n/**\n * @return {?}\n */\nget errorMessage(): string {\n        return this.formControl.errorMessage;\n    }\n/**\n * @return {?}\n */\nget prependText() {\n        return this.config.ui ? this.config.ui.prependText : '';\n    }\n}\n\nfunction FormControlConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nFormControlConfig.prototype._formControl;\n/** @type {?} */\nFormControlConfig.prototype.inputs;\n/** @type {?} */\nFormControlConfig.prototype.events;\n/** @type {?} */\nFormControlConfig.prototype.value;\n/** @type {?} */\nFormControlConfig.prototype.disabled;\n/** @type {?} */\nFormControlConfig.prototype.label;\n/** @type {?} */\nFormControlConfig.prototype.placeholder;\n/** @type {?} */\nFormControlConfig.prototype.hide;\n/** @type {?} */\nFormControlConfig.prototype.description;\n/** @type {?} */\nFormControlConfig.prototype.focus;\n/** @type {?} */\nFormControlConfig.prototype.readonly;\n/** @type {?} */\nFormControlConfig.prototype.class;\n/** @type {?} */\nFormControlConfig.prototype.isPlainTextMode;\n/** @type {?} */\nFormControlConfig.prototype.validator;\n/** @type {?} */\nFormControlConfig.prototype.asyncValidator;\n/** @type {?} */\nFormControlConfig.prototype.hooks;\n/** @type {?} */\nFormControlConfig.prototype.controlsConfig;\n}\n\nexport class ControlConfig extends FormControlConfig {\n/**\n * @param {?} fieldConfig\n * @param {?} controlsConfig\n */\nconstructor(fieldConfig: { [key: string]: any }, controlsConfig: { [key: string]: FormControlConfig }) {\n        super(fieldConfig, controlsConfig);\n    }\n}"]}