{"version":3,"sources":["prop-descriptor.ts"],"names":[],"mappings":"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","file":"prop-descriptor.js","sourceRoot":"","sourcesContent":["import { ValueChangeNotification } from './value-change-notification';\n\nconst /** @type {?} */ FILTER: string = \"filter\";\nconst /** @type {?} */ FUNCTION: string = \"function\";\nconst /** @type {?} */ ERRORS: string = \"errors\";\nexport class PropDescriptor extends ValueChangeNotification{\n    protected isDefinedFilter: boolean;\n\n    props: { [key: string]: any };\n/**\n * @return {?}\n */\nprotected checkFilterFunction() {\n        let /** @type {?} */ descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this), FILTER);\n        this.isDefinedFilter = (descriptor && !descriptor.get && !descriptor.set && typeof this[FILTER] == FUNCTION);\n    }\n/**\n * @param {?} propName\n * @return {?}\n */\ndefineProp(propName: string) {\n        let /** @type {?} */ value = this.props[propName];\n        let /** @type {?} */ oldValue = null;\n        Object.defineProperty(this.props, propName,\n            {\n                get: () => { return value },\n                set: (v) => {\n                    value = v;\n                    this.notifyValueChanged(`props.${propName}`, value, oldValue, true);\n                    oldValue = value;\n                }\n            })\n    }\n/**\n * @return {?}\n */\nprotected overrideProps() {\n        [\"disabled\", \"label\", \"placeholder\", \"hide\", \"description\", \"focus\", \"readonly\", \"class\", \"source\"].forEach(t => {\n            let /** @type {?} */ descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this), t);\n            let /** @type {?} */ value = null;\n            let /** @type {?} */ oldValue = null;\n            Object.defineProperty(this, t, {\n                get: () => { return descriptor ? descriptor.get.call(this) : value; },\n                set: (v) => {\n                    value = v;\n                    if (descriptor && descriptor.set)\n                        descriptor.set.call(this, v);\n                    super.notifyValueChanged(t, value, oldValue);\n                    oldValue = v;\n                }\n            });\n        })\n    }\n/**\n * @param {?} formControl\n * @return {?}\n */\nprotected overrideErrorsProp(formControl: any) {\n        let /** @type {?} */ value = formControl.errors;\n        let /** @type {?} */ oldValue = formControl.errorMessage;\n        Object.defineProperty(formControl, ERRORS,\n            {\n                get: () => { return value },\n                set: (v) => {\n                    value = v;\n                    this.notifyValueChanged(`errorMessage`, value, oldValue);\n                    oldValue = value;\n                }\n            })\n    }\n\n\n\n\n\n}\n\nfunction PropDescriptor_tsickle_Closure_declarations() {\n/** @type {?} */\nPropDescriptor.prototype.isDefinedFilter;\n/** @type {?} */\nPropDescriptor.prototype.props;\n}\n"]}