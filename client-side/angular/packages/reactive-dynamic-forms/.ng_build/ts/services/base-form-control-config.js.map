{"version":3,"sources":["base-form-control-config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAA,EAAe,MAAA,mBAAA,CAAA;AACxB,OAAO,EAAE,MAAA,EAAQ,MAAA,EAAO,MAAA,oBAAA,CAAA;AAExB;;GAEG;AACH,MAHC,4BAAA,SAAA,cAAA;IAMD;;OAEG;IACH,YALwB,OAA8B;QAM9C,KAAK,EAAE,CAAC;QANQ,YAAA,GAAA,OAAA,CAA8B;QA2E1C,kBAAA,GAA8B;YAUlC,KAAK,EATE,SAAA;YAUP,WAAW,EATE,EAAA;YAUb,MAAM,EATE,EAAA;YAUR,MAAM,EATE,EAAA;YAUR,IAAI,EATE,KAAA;YAUN,WAAW,EATE,SAAA;YAUb,QAAQ,EATE,KAAA;YAUV,KAAK,EATE,KAAA;YAUP,QAAQ,EATE,KAAA;YAUV,KAAK,EATE,EAAA;YAUP,WAAW,EATE,EAAA;SAUhB,CATC;IAhFF,CAAC;IACL;;OAEG;IACH,QAJK;QAKG,IAAI,CAJC,oBAAC,GAAsB,EAAE,MAAA,EAAS,EAAA,EAAI,QAAA,EAAU,EAAA,EAAI,KAAA,EAAO,EAAA,EAAI,WAAA,EAAa,EAAA,EAAI,IAAA,EAAM,EAAA,EAAI,WAAA,EAAa,EAAA,EAAI,QAAA,EAAU,EAAA,EAAI,KAAA,EAAO,EAAA,EAAI,KAAA,EAAO,EAAA,EAAG,CAAA;QAKnJ,KAAK,IAJC,gBAAA,CAAG,MAAA,IAAU,IAAA,CAAK,oBAAC;YAKrB,KAAK,IAJC,gBAAA,CAAG,UAAA,IAAc,IAAA,CAAK,OAAC,EAAQ;gBAKjC,IAAI,CAJC,KAAC,CAAK,OAAC,CAAO,IAAC,CAAI,OAAC,CAAO,UAAC,CAAU,CAAC,EAAE;oBAK1C,IAAI,gBAAgB,CAJhB,UAAA,GAAa,MAAA,CAAO,wBAAC,CAAwB,MAAC,CAAM,cAAC,CAAc,IAAC,CAAI,OAAC,CAAO,UAAC,CAAU,CAAC,EAAE,MAAA,CAAO,CAAC;oBAK1G,IAAI,CAJC,UAAC,IAAa,UAAA,CAAW,GAAC,CAAG,IAAI,IAAA,CAAK,OAAC,CAAO,UAAC,CAAU,CAAC,gBAAC,EAAiB;wBAK7E,IAAI,gBAAgB,CAJhB,cAAA,GAAiB,IAAA,CAAK,OAAC,CAAO,UAAC,CAAU,CAAC,gBAAC,CAAgB,CAAA,CAAE,MAAA,CAAO,IAAC,CAAI,OAAC,CAAO,UAAC,CAAU,CAAC,MAAC,CAAM,CAAC,CAAC,CAAA,CAAE,MAAA,CAAO,UAAC,CAAU,GAAC,CAAG,CAAC;wBAKnI,IAAI,cAJC,CAAc,OAAC,CAAO,IAAC,IAAI,CAAI,MAAC,CAAM,IAAC,EAAI,CAAE,IAAI,CAAA,CAAE,IAAI,cAAA,CAAe,OAAC,CAAO,IAAC,IAAI,CAAI,MAAC,CAAM,IAAC,GAAI,CAAG,IAAI,CAAA,CAAE,EAAE;4BAK/G,IAAI,CAJC,oBAAC,CAAoB,MAAC,CAAM,CAAC,IAAC,CAAI,UAAC,CAAU,CAAC;yBAKtD;qBACJ;iBACJ;aACJ;QACL,IAAI,CAJC,aAAC,EAAa,CAAE;QAKrB,IAAI,CAJC,iBAAC,EAAiB,CAAE;IAK7B,CAAC;IACL;;;OAGG;IACH,OAPK,CAAA,UAAA;QAQG,KAAK,IAPC,gBAAA,CAAG,UAAA,IAAc,IAAA,CAAK,oBAAC,EAAqB;YAQ9C,IAAI,IAPC,CAAI,oBAAC,CAAoB,UAAC,CAAU,CAAC,MAAC,GAAQ,CAAA;gBAQ/C,IAAI,CAPC,oBAAC,CAAoB,UAAC,CAAU,CAAC,OAAC,CAAO,CAAC,CAAC,EAAA;oBAQ5C,IAAI,CAPC,IAAI,IAAA,CAAK,MAAC,CAAM,IAAC;wBAQlB,IAAI,CAPC,OAAC,CAAO,CAAC,CAAC,CAAC,OAAC,CAAO,UAAC,CAAU,CAAC;;wBASpC,IAAI,CAPC,cAAC,CAAc,UAAC,CAAU,CAAC;gBAQxC,CAAC,CAPC,CAAA;SAQT;QACD,IAAI,UAPC;YAQD,IAAI,CAPC,cAAC,CAAc,UAAC,CAAU,CAAC;IAQxC,CAAC;IACL;;;OAGG;IARE,cAAA,CAAA,UAAA;QAUG,IAAI,UATC,IAAa,MAAA,IAAU,IAAA,CAAK,eAAC,EAAgB;YAU9C,IAAI,CATC,MAAC,CAAM,CAAC,IAAC,CAAI,IAAC,CAAI,CAAC;SAU3B;;YACG,IAAI,CATC,UAAC,IAAa,MAAA,CAAO,CAAA,CAAE,MAAA,CAAO,CAAA,CAAE,UAAA,CAAW,GAAG,IAAA,CAAK,UAAC,CAAU,CAAC;IAU5E,CAAC;IACL;;OAEG;IAVE,iBAAA;QAYG,CAAC,UAXC,EAAW,OAAA,EAAS,aAAA,EAAe,MAAA,EAAQ,aAAA,EAAe,OAAA,EAAS,UAAA,EAAY,OAAA,EAAS,QAAA,EAAU,QAAA,CAAS,CAAC,OAAC,CAAO,GAAC,CAAG,EAAA;YAYtH,QAAQ,GAXC,EAAI;gBAYT,KAXK,MAAA,CAAO;gBAYZ,KAXK,MAAA;oBAYD,IAAI,IAXC,CAAI,MAAC,CAAM,GAAC,CAAG;wBAYhB,IAAI,CAXC,GAAC,CAAG,GAAG,IAAA,CAAK,MAAC,CAAM,GAAC,CAAG,CAAC;oBAYjC,IAAI,IAXC,CAAI,MAAC,CAAM,MAAC,EAAO;wBAYpB,IAAI,CAXC,GAAC,CAAG,GAAG,IAAA,CAAK,MAAC,CAAM,CAAC;qBAY5B;oBACD,IAAI,IAXC,CAAI,eAAC,IAAkB,GAAA,IAAO,MAAA;wBAY/B,IAAI,CAXC,MAAC,CAAM,EAAC,CAAE;oBAYnB,IAAI,GAXC,IAAM,MAAA,IAAU,CAAA,IAAE,CAAI,MAAC;wBAYxB,IAAI,CAXC,GAAC,CAAG,GAAG,EAAA,CAAG;oBAYnB,MAAM;gBACV;oBACI,IAAI,IAXC,CAAI,MAAC,CAAM,EAAC,IAAK,IAAA,CAAK,MAAC,CAAM,EAAC,CAAE,GAAC,CAAG;wBAYrC,IAAI,CAXC,GAAC,CAAG,GAAG,IAAA,CAAK,MAAC,CAAM,EAAC,CAAE,GAAC,CAAG,CAAC;;wBAahC,IAAI,CAXC,GAAC,IAAM,MAAA,CAAO,CAAA,CAAE,MAAA,CAAO,CAAA,CAAE,GAAA,CAAI,GAAG,IAAA,CAAK,aAAC,CAAa,GAAC,CAAG,CAAC;oBAYjE,MAAM;aAEb;QAEL,CAAC,CAXC,CAAA;IAYN,CAAC;CA0BJ;AAED;IACA,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,MAAM,CAAC;IACvC,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,MAAM,CAAC;IACvC,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,aAAa,CAAC;IAC9C,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,oBAAoB,CAAC;IACrD,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC;AACxC,CAAC","file":"base-form-control-config.js","sourceRoot":"","sourcesContent":["import { PropDescriptor } from './prop-descriptor';\nimport { FILTER, SOURCE } from '../const/app.const';\nimport { ActionResult } from '../models/interface/action-config';\n/**\n * @abstract\n */\nexport abstract class BaseFormControlConfig extends PropDescriptor {\n    config: { [key: string]: any };\n    source: any[];\n/**\n * @param {?} configs\n */\nconstructor(private configs: { [key: string]: any }) {\n        super();\n    }\n/**\n * @return {?}\n */\ncomplete() {\n        this.controlNotifications = {  filter: [], disabled: [], label: [], description: [], hide: [], placeholder: [], readonly: [], focus: [], class: [] }\n        for (let /** @type {?} */ action in this.controlNotifications)\n            for (let /** @type {?} */ columnName in this.configs) {\n                if (!Array.isArray(this.configs[columnName])) {\n                    let /** @type {?} */ descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.configs[columnName]), action);\n                    if ((descriptor && descriptor.get) || this.configs[columnName].isFilterFunction) {\n                        let /** @type {?} */ stringFunction = this.configs[columnName].isFilterFunction ? String(this.configs[columnName][FILTER]) : String(descriptor.get);\n                        if (stringFunction.indexOf(`.${this.config.name}`) != -1 || stringFunction.indexOf(`.${this.config.name};`) != -1) {\n                            this.controlNotifications[action].push(columnName);\n                        }\n                    }\n                }\n            }\n        this.overrideProps();\n        this.updateActionValue();\n    }\n/**\n * @param {?=} actionName\n * @return {?}\n */\nrefresh(actionName?: string) {\n        for (var /** @type {?} */ columnName in this.controlNotifications) {\n            if (this.controlNotifications[columnName].length > 0)\n                this.controlNotifications[columnName].forEach(x => {\n                    if (x != this.config.name)\n                        this.configs[x].refresh(columnName);\n                    else\n                        this.setActionValue(columnName);\n                })\n        }\n        if (actionName)\n            this.setActionValue(actionName);\n    }\n/**\n * @param {?} actionName\n * @return {?}\n */\nprivate setActionValue(actionName: string) {\n        if (actionName == FILTER && this.isDefinedFilter) {\n            this[FILTER].call(this);\n        } else\n            this[actionName == FILTER ? SOURCE : actionName] = this[actionName];\n    }\n/**\n * @return {?}\n */\nprivate updateActionValue() {\n        [\"disabled\", \"label\", \"placeholder\", \"hide\", \"description\", \"focus\", \"readonly\", \"class\", \"filter\", \"source\"].forEach(key => {\n            switch (key) {\n                case FILTER:\n                case SOURCE:\n                    if (this.config[key])\n                        this[key] = this.config[key];\n                    if (this.config.filter) {\n                        this[key] = this[FILTER];\n                    }\n                    if (this.isDefinedFilter && key == FILTER)\n                        this[FILTER]();\n                    if (key == SOURCE && !this.source)\n                        this[key] = [];\n                    break;\n                default:\n                    if (this.config.ui && this.config.ui[key])\n                        this[key] = this.config.ui[key];\n                    else\n                        this[key == FILTER ? SOURCE : key] = this._actionResult[key];\n                    break;\n\n            }\n\n        })\n    }\nprivate _actionResult: ActionResult = {\n        label: undefined,\n        placeholder: '',\n        source: [],\n        filter: [],\n        hide: false,\n        description: undefined,\n        disabled: false,\n        focus: false,\n        readonly: false,\n        class: [],\n        prependText: ''\n    };\nprivate controlNotifications: {\n        disabled?: string[],\n        placeholder?: string[],\n        filter?: string[],\n        hide?: string[],\n        description?: string[],\n        label?: string[],\n        focus?: string[],\n        readonly: string[],\n        class: string[],\n    };\n\n}\n\nfunction BaseFormControlConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseFormControlConfig.prototype.config;\n/** @type {?} */\nBaseFormControlConfig.prototype.source;\n/** @type {?} */\nBaseFormControlConfig.prototype._actionResult;\n/** @type {?} */\nBaseFormControlConfig.prototype.controlNotifications;\n/** @type {?} */\nBaseFormControlConfig.prototype.configs;\n}\n"]}