{"version":3,"sources":["element-accessor.ts"],"names":[],"mappings":"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","file":"element-accessor.js","sourceRoot":"","sourcesContent":["import { DynamicNodeConfig } from '../models/interface/dynamic-node-config';\nimport { BaseObjectAccessor } from './base-object-accessor';\nimport { CHECKBOX, SELECT_MULTIPLE, RADIO,RXWEB_ID_STRING } from '../const/app.const';\nimport { ControlState } from '../statics/control-state';\n/**\n * @abstract\n */\nexport abstract class ElementAccessor extends BaseObjectAccessor{\n    element: any;\n/**\n * @param {?} dynamicNodeConfig\n */\nconstructor(dynamicNodeConfig: DynamicNodeConfig) {\n        super(dynamicNodeConfig)\n    }\n/**\n * @param {?} parentElement\n * @param {?} name\n * @return {?}\n */\ncreateNodeElement(parentElement: any, name: string) {\n        this.element = this.dynamicNodeConfig.renderer.createElement(name);\n        this.dynamicNodeConfig.renderer.appendChild(parentElement, this.element);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nremoveChildren(element: any) {\n        if (element.firstElementChild) {\n            this.removeChildren(element.firstElementChild);\n        }\n        let /** @type {?} */ controlId = element.getAttribute(RXWEB_ID_STRING);\n        if (controlId && ControlState.controls[controlId]) {\n            ControlState.controls[controlId].destroy();\n            delete ControlState.controls[controlId];\n        }\n    }\n/**\n * @param {?} targetElement\n * @return {?}\n */\nsetControlConfigValue(targetElement) {\n        switch (targetElement.type) {\n            case CHECKBOX:\n                this.setCheckboxValue(targetElement);\n                break;\n            case SELECT_MULTIPLE:\n                let /** @type {?} */ value = [];\n                for (let /** @type {?} */ option of this.element.options)\n                    if (option.selected && option.value)\n                        value.push(option.value);\n                this.controlConfig.value = value;\n                break;\n            default:\n                this.controlConfig.formControl.setValue(targetElement.value);\n                this.controlConfig.value = targetElement.value;\n                break;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresetElementValue(value: any) {\n        switch (this.element.type) {\n            case CHECKBOX:\n            case RADIO:\n                var /** @type {?} */ elements:any = document.querySelectorAll(`[name='${this.controlConfig.config.name}']`);\n                for (var /** @type {?} */ i = 0; i < elements.length; i++) {\n                    elements[i].checked = this.element.type == CHECKBOX ? this.checkedCheckbox(value, elements[i]) : this.checkedRadio(value, elements[i]);\n                }\n                break;\n            case SELECT_MULTIPLE:\n                for (let /** @type {?} */ option of this.element.options) {\n                    option.selected = (value) ? value.filter(t => t == option.value)[0] != undefined : false;\n                }\n                break;\n            default:\n                this.element.value = value;\n        }\n    }\nprivate checkedCheckbox = (value, element) => (value) ? (this.controlConfig.config.multiselect) ? value.filter(t => element.value == t)[0] != undefined : element.value == value : false;\nprivate checkedRadio = (value, element) => (value) ? value == element.value : false;\n/**\n * @param {?} targetElement\n * @return {?}\n */\nprivate setCheckboxValue(targetElement) {\n        let /** @type {?} */ value = (this.controlConfig.config.multiselect) ? this.controlConfig.value || [] : targetElement.value;\n        if (targetElement.checked)\n            (this.controlConfig.config.multiselect) ? value.push(targetElement.value) : null;\n        else\n            (this.controlConfig.config.multiselect) ? value.splice(value.indexOf(targetElement.value), 1) : value = null;\n        this.controlConfig.formControl.setValue(value);\n        this.controlConfig.value = value;\n    }\n}\n\nfunction ElementAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nElementAccessor.prototype.element;\n/** @type {?} */\nElementAccessor.prototype.checkedCheckbox;\n/** @type {?} */\nElementAccessor.prototype.checkedRadio;\n}\n"]}