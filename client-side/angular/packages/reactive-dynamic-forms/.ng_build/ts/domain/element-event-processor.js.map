{"version":3,"sources":["element-event-processor.ts"],"names":[],"mappings":"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","file":"element-event-processor.js","sourceRoot":"","sourcesContent":["import { ElementAccessor } from './element-accessor';\nimport { DynamicNodeConfig } from '../models/interface/dynamic-node-config';\nimport { BLUR, FOCUS, SELECT, INPUT, CLICK, EVENTS} from '../const/app.const';\nexport class ElementEventProcessor extends ElementAccessor{\n    eventListeners: any[];\n/**\n * @param {?} dynamicNodeConfig\n */\nconstructor(public dynamicNodeConfig: DynamicNodeConfig) { super(dynamicNodeConfig); }\n/**\n * @param {?} events\n * @param {?} isSubscribe\n * @return {?}\n */\nbindEvents(events: { [key: string]: any },isSubscribe:boolean) {\n        Object.keys(events).forEach(eventName => {\n            switch (eventName) {\n                case FOCUS:\n                    this.setFocus(this.getValue(events[eventName]));\n                    break;\n                case SELECT:\n                case INPUT:\n                    this.setInput();\n                    break;\n                case BLUR:\n                    this.setBlur();\n                    break;\n                case CLICK:\n                    this.setClick(this.getValue(events[eventName]));\n                    break;\n            }\n            if (isSubscribe && this.isSubscribeProp(events[eventName]))\n                this.setPropSubscription(this.getPropName(events[eventName]), EVENTS, eventName);\n        })\n    }\n/**\n * @param {?} functionName\n * @return {?}\n */\nsetClick(functionName:string) {\n        this.element.onclick = () => {\n            if (this.controlConfig[functionName])\n                this.controlConfig[functionName].call(this.controlConfig);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nsetFocus(value: boolean) {\n        if (value && this.element.focus) \n            setTimeout(t => { this.element.focus()} , 1000);\n    }\n/**\n * @return {?}\n */\nsetBlur() {\n        let /** @type {?} */ listen = this.dynamicNodeConfig.renderer.listen(this.element, BLUR, () => {\n            this.dynamicNodeConfig.controlConfig.formControl.markAsTouched();\n        })\n        this.eventListeners.push(listen);\n    }\n/**\n * @return {?}\n */\nsetInput() {\n        let /** @type {?} */ listen = this.dynamicNodeConfig.renderer.listen(this.element, INPUT, (v) => {\n            let /** @type {?} */ isPassed = true;\n            if (this.controlConfig.hooks && this.controlConfig.hooks.preValue) {\n                isPassed = this.controlConfig.hooks.preValue.call(this.controlConfig);\n                if (!isPassed)\n                    this.controlConfig.formControl.patchValue(this.controlConfig.formControl.value);\n            }\n            if (isPassed) {\n                this.setControlConfigValue(v.target);\n                if (this.controlConfig.hooks && this.controlConfig.hooks.postValue)\n                    this.controlConfig.hooks.postValue.call(this.controlConfig);\n            }\n            this.controlConfig.formControl.markAsDirty();\n        })\n        this.eventListeners.push(listen);\n\n    }\n\n\n    \n}\n\nfunction ElementEventProcessor_tsickle_Closure_declarations() {\n/** @type {?} */\nElementEventProcessor.prototype.eventListeners;\n/** @type {?} */\nElementEventProcessor.prototype.dynamicNodeConfig;\n}\n"]}