{"version":3,"sources":["element-props-accessor.ts"],"names":[],"mappings":"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","file":"element-props-accessor.js","sourceRoot":"","sourcesContent":["import { ElementEventProcessor } from './element-event-processor';\nimport { DynamicNodeConfig } from '../models/interface/dynamic-node-config';\nimport { ADDITIONAL_CLASS, BOOLEAN, NONE, BLANK, DISPLAY, FUNCTION, STRING, ATTR, PROP, CLASS, STYLE } from '../const/app.const';\n/**\n * @abstract\n */\nexport abstract class ElementPropsAccessor extends ElementEventProcessor {\nprivate oldAdditionalClasses: string[] = [];\nprivate oldClasses: string[] = [];\n/**\n * @param {?} dynamicNodeConfig\n */\nconstructor(dynamicNodeConfig: DynamicNodeConfig) { super(dynamicNodeConfig); }\n/**\n * @param {?} attr\n * @param {?} isSubscribe\n * @return {?}\n */\nbindAttribute(attr: { [key: string]: any }, isSubscribe: boolean) {\n        Object.keys(attr).forEach(attributeName => {\n            let /** @type {?} */ value = (attributeName !== STYLE) ? this.getValue(attr[attributeName]) : attr[attributeName];\n            switch (attributeName) {\n                case ADDITIONAL_CLASS:\n                case CLASS:\n                    this.setClass(value, attributeName);\n                    break;\n                case STYLE:\n                    Object.keys(attr[attributeName]).forEach(x => {\n                        let /** @type {?} */ value = this.getValue(attr[attributeName][x]);\n                        this.setStyleProp(x, value);\n                        if (isSubscribe && this.isSubscribeProp(attr[attributeName][x]))\n                            this.setPropSubscription(attr[attributeName][x], ATTR, x, '', STYLE)\n                    })\n                    break;\n                default:\n                    this.addOrRemoveAttribute(attributeName, value);\n                    break;\n            }\n            if (isSubscribe && attributeName !== STYLE && this.isSubscribeProp(attr[attributeName]))\n                this.setPropSubscription(attr[attributeName], ATTR, attributeName);\n        })\n\n    }\n/**\n * @param {?} prop\n * @param {?} isSubscribe\n * @return {?}\n */\nbindProp(prop: { [key: string]: any }, isSubscribe: boolean) {\n        Object.keys(prop).forEach(propName => {\n            let /** @type {?} */ value = this.getValue(prop[propName]);\n            if (value)\n                this.setProperty(propName, value)\n            if (isSubscribe && this.isSubscribeProp(prop[propName]))\n                this.setPropSubscription(prop[propName], PROP, propName);\n        });\n    }\n/**\n * @param {?} classes\n * @param {?} type\n * @return {?}\n */\nsetClass(classes: any[], type: string) {\n        classes = this.getClassNames(type == ADDITIONAL_CLASS ? this.dynamicNodeConfig.additionalClasses.class : classes);\n        type == ADDITIONAL_CLASS ? this.addOrRemoveClasses(this.oldAdditionalClasses, false) : this.addOrRemoveClasses(this.oldClasses, false);\n        this.addOrRemoveClasses(classes);\n        switch (type) {\n            case ADDITIONAL_CLASS:\n                this.oldAdditionalClasses = classes;\n                break;\n            case CLASS:\n                this.oldClasses = classes;\n                break;\n        }\n    }\n/**\n * @param {?} propName\n * @param {?} value\n * @return {?}\n */\nsetStyleProp(propName: string, value: any) {\n        switch (propName) {\n            case DISPLAY:\n                value = (typeof value == BOOLEAN) ? value : !(value);\n                value = (value) ? NONE : BLANK;\n                break;\n        }\n        this.addOrRemoveStyle(propName, value);\n    }\n/**\n * @param {?} propertyName\n * @param {?} value\n * @return {?}\n */\nsetProperty(propertyName: string, value: any) {\n        this.dynamicNodeConfig.renderer.setProperty(this.element, propertyName, value);\n    }\n/**\n * @param {?} classes\n * @param {?=} isAdd\n * @return {?}\n */\naddOrRemoveClasses(classes: any[], isAdd: boolean = true) {\n\n        if (isAdd)\n            classes.forEach(t => this.dynamicNodeConfig.renderer.addClass(this.element, t));\n        else\n            classes.forEach(t => this.dynamicNodeConfig.renderer.removeClass(this.element, t));\n    }\n/**\n * @param {?} styleName\n * @param {?} value\n * @return {?}\n */\naddOrRemoveStyle(styleName: string, value: any) {\n        if (value)\n            this.dynamicNodeConfig.renderer.setStyle(this.element, styleName, value);\n        else\n            this.dynamicNodeConfig.renderer.removeStyle(this.element, styleName);\n    }\n/**\n * @param {?} attributeName\n * @param {?} value\n * @return {?}\n */\naddOrRemoveAttribute(attributeName: string, value: any) {\n        if (value)\n            this.dynamicNodeConfig.renderer.setAttribute(this.element, attributeName, value);\n        else\n            this.dynamicNodeConfig.renderer.removeAttribute(this.element, attributeName);\n    }\n/**\n * @param {?} classes\n * @return {?}\n */\nprivate getClassNames(classes: any[]) {\n        let /** @type {?} */ elementClasses = [];\n        if (classes)\n            classes.forEach(t => {\n                if (typeof t == STRING)\n                    elementClasses.push(t);\n                else if (typeof t == FUNCTION) {\n                    let /** @type {?} */ elementClass = t.call(this.controlConfig);\n                    if (elementClass && !Array.isArray(elementClass))\n                        elementClasses.push(elementClass)\n                    else if (Array.isArray(elementClass))\n                        elementClass.forEach(x => elementClasses.push(x))\n                }\n            })\n        return elementClasses;\n    }\n}\n\nfunction ElementPropsAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nElementPropsAccessor.prototype.oldAdditionalClasses;\n/** @type {?} */\nElementPropsAccessor.prototype.oldClasses;\n}\n"]}